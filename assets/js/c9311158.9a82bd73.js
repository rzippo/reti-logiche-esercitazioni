"use strict";(self.webpackChunkreti_logiche_esercitazioni=self.webpackChunkreti_logiche_esercitazioni||[]).push([[9854],{58976:(e,s,i)=>{i.r(s),i.d(s,{assets:()=>c,contentTitle:()=>o,default:()=>h,frontMatter:()=>l,metadata:()=>a,toc:()=>m});const a=JSON.parse('{"id":"esercitazioni/Verilog/Esercitazioni/Esercitazione 2","title":"Esercitazione 2","description":"","source":"@site/versioned_docs/version-2025-26/esercitazioni/Verilog/Esercitazioni/2. Esercitazione 2.mdx","sourceDirName":"esercitazioni/Verilog/Esercitazioni","slug":"/esercitazioni/Verilog/Esercitazioni/Esercitazione 2","permalink":"/reti-logiche-esercitazioni/esercitazioni/Verilog/Esercitazioni/Esercitazione 2","draft":false,"unlisted":false,"tags":[],"version":"2025-26","sidebarPosition":2,"frontMatter":{"description":""},"sidebar":"esercitazioniSidebar","previous":{"title":"Esercitazione 1","permalink":"/reti-logiche-esercitazioni/esercitazioni/Verilog/Esercitazioni/Esercitazione 1"},"next":{"title":"Esercitazione 3","permalink":"/reti-logiche-esercitazioni/esercitazioni/Verilog/Esercitazioni/Esercitazione 3"}}');var n=i(74848),r=i(28453),t=i(86025);const l={description:""},o="Esercitazione 2",c={},m=[{value:"Errori comuni: i corto circuiti",id:"errori-comuni-i-corto-circuiti",level:2},{value:"Uso efficiente di VS Code",id:"uso-efficiente-di-vs-code",level:2},{value:"Esercizi d&#39;esame",id:"esercizi-desame",level:2},{value:"Esercizio 2.1: parte combinatoria esame 2023-06-27",id:"esercizio-21-parte-combinatoria-esame-2023-06-27",level:2},{value:"Esercizio 2.2: parte combinatoria esame 2023-01-31",id:"esercizio-22-parte-combinatoria-esame-2023-01-31",level:2},{value:"Soluzione 1",id:"soluzione-1",level:3},{value:"Soluzione 2",id:"soluzione-2",level:3}];function d(e){const s={a:"a",admonition:"admonition",annotation:"annotation",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",math:"math",mdxAdmonitionTitle:"mdxAdmonitionTitle",mi:"mi",mn:"mn",mo:"mo",mrow:"mrow",msub:"msub",msup:"msup",p:"p",pre:"pre",semantics:"semantics",span:"span",ul:"ul",...(0,r.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(s.header,{children:(0,n.jsx)(s.h1,{id:"esercitazione-2",children:"Esercitazione 2"})}),"\n",(0,n.jsx)(s.h2,{id:"errori-comuni-i-corto-circuiti",children:"Errori comuni: i corto circuiti"}),"\n",(0,n.jsxs)(s.p,{children:["Vediamo ora un esempio di come ",(0,n.jsx)(s.em,{children:"non"})," tenere presente la corrispondenza tra Verilog e schemi circuitali porta a grossi guai."]}),"\n",(0,n.jsxs)(s.p,{children:["La maggior parte di quello di cui discutiamo in questo corso si applica per ",(0,n.jsx)(s.em,{children:"qualunque"})," tecnologia si utilizzi per implementarle.\r\nInfatti, una volta ottenuti gli operatori logici elementari, sono identici i passaggi necessari per arrivare a costruire un processore in grado di eseguire programmi.\r\nPer esempio, c'\xe8 chi ha realizzato un processore funzionante usando la ",(0,n.jsx)(s.a,{href:"https://www.youtube.com/watch?v=FDiapbD0Xfg",children:"redstone di Minecraft"}),", cos\xec come ricerca sull'uso della luce, detta ",(0,n.jsx)(s.a,{href:"https://en.wikipedia.org/wiki/Optical_computing",children:"photonic computing"}),"."]}),"\n",(0,n.jsxs)(s.p,{children:["Attualmente, usiamo elettronica digitale basata su semiconduttori (studiata nel corso di Elettronica Digitale).\r\nQuesto implica che dobbiamo stare attenti ai limiti imposti dall'elettronica quando realizziamo reti logiche, in particolare il fatto che ",(0,n.jsx)("u",{children:"non si possono collegare due o pi\xf9 fonti di tensione allo stesso filo"}),".\r\nVediamo perch\xe9."]}),"\n",(0,n.jsxs)(s.p,{children:["Una porta logica agisce fondamentalmente come un interruttore che collega la propria uscita a ",(0,n.jsx)(s.em,{children:"terra"}),", ",(0,n.jsxs)(s.span,{className:"katex",children:[(0,n.jsx)(s.span,{className:"katex-mathml",children:(0,n.jsx)(s.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,n.jsxs)(s.semantics,{children:[(0,n.jsxs)(s.mrow,{children:[(0,n.jsx)(s.mn,{children:"0"}),(0,n.jsx)(s.mi,{children:"V"})]}),(0,n.jsx)(s.annotation,{encoding:"application/x-tex",children:"0 V"})]})})}),(0,n.jsx)(s.span,{className:"katex-html","aria-hidden":"true",children:(0,n.jsxs)(s.span,{className:"base",children:[(0,n.jsx)(s.span,{className:"strut",style:{height:"0.6833em"}}),(0,n.jsx)(s.span,{className:"mord",children:"0"}),(0,n.jsx)(s.span,{className:"mord mathnormal",style:{marginRight:"0.22222em"},children:"V"})]})})]}),", o alla tensione di alimentazione ",(0,n.jsx)(s.em,{children:"Vcc"}),", per esempio ",(0,n.jsxs)(s.span,{className:"katex",children:[(0,n.jsx)(s.span,{className:"katex-mathml",children:(0,n.jsx)(s.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,n.jsxs)(s.semantics,{children:[(0,n.jsxs)(s.mrow,{children:[(0,n.jsx)(s.mn,{children:"5"}),(0,n.jsx)(s.mi,{children:"V"})]}),(0,n.jsx)(s.annotation,{encoding:"application/x-tex",children:"5 V"})]})})}),(0,n.jsx)(s.span,{className:"katex-html","aria-hidden":"true",children:(0,n.jsxs)(s.span,{className:"base",children:[(0,n.jsx)(s.span,{className:"strut",style:{height:"0.6833em"}}),(0,n.jsx)(s.span,{className:"mord",children:"5"}),(0,n.jsx)(s.span,{className:"mord mathnormal",style:{marginRight:"0.22222em"},children:"V"})]})})]}),".\r\nAll'ingresso di una porta logica, invece, viene rilevata la tensione senza contatti elettrici con l'uscita."]}),"\n",(0,n.jsx)("img",{src:(0,t.Ay)("2025-26/img/verilog/2/porte-logiche-1.drawio.png"),style:{maxWidth:"min(100%, 36rem)"},alt:"\r\nSchema semplificato di come sono elettricamente collegate due porte logiche in serie.\r\nL'uscita di una porta \xe8 collegata o a terra (valore logico '0') o a Vcc (valore logico '1').\r\nL'ingresso di una porta non \xe8 collegata elettricamente alle sue uscite.\r\n"}),"\n",(0,n.jsxs)(s.p,{children:["Cosa succede invece se colleghiamo le uscite di due porte logiche, in particolare se una produce 1 e l'altra 0?\r\nSi chiude un circuito che collega ",(0,n.jsx)(s.em,{children:"Vcc"})," a ",(0,n.jsx)(s.em,{children:"terra"}),".\r\nData la differenza di potenziale, scorre corrente.\r\nData la bassissima resistenza di un semplice filo, scorre tanta corrente.\r\nData la relazione tra la potenza dissipata in calore e la corrente che attraversa il circuito, ",(0,n.jsxs)(s.span,{className:"katex",children:[(0,n.jsx)(s.span,{className:"katex-mathml",children:(0,n.jsx)(s.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,n.jsxs)(s.semantics,{children:[(0,n.jsxs)(s.mrow,{children:[(0,n.jsx)(s.mi,{children:"P"}),(0,n.jsx)(s.mo,{children:"="}),(0,n.jsx)(s.mi,{children:"R"}),(0,n.jsx)(s.mo,{children:"\u22c5"}),(0,n.jsxs)(s.msup,{children:[(0,n.jsx)(s.mi,{children:"i"}),(0,n.jsx)(s.mn,{children:"2"})]})]}),(0,n.jsx)(s.annotation,{encoding:"application/x-tex",children:"P = R \\cdot i^2"})]})})}),(0,n.jsxs)(s.span,{className:"katex-html","aria-hidden":"true",children:[(0,n.jsxs)(s.span,{className:"base",children:[(0,n.jsx)(s.span,{className:"strut",style:{height:"0.6833em"}}),(0,n.jsx)(s.span,{className:"mord mathnormal",style:{marginRight:"0.13889em"},children:"P"}),(0,n.jsx)(s.span,{className:"mspace",style:{marginRight:"0.2778em"}}),(0,n.jsx)(s.span,{className:"mrel",children:"="}),(0,n.jsx)(s.span,{className:"mspace",style:{marginRight:"0.2778em"}})]}),(0,n.jsxs)(s.span,{className:"base",children:[(0,n.jsx)(s.span,{className:"strut",style:{height:"0.6833em"}}),(0,n.jsx)(s.span,{className:"mord mathnormal",style:{marginRight:"0.00773em"},children:"R"}),(0,n.jsx)(s.span,{className:"mspace",style:{marginRight:"0.2222em"}}),(0,n.jsx)(s.span,{className:"mbin",children:"\u22c5"}),(0,n.jsx)(s.span,{className:"mspace",style:{marginRight:"0.2222em"}})]}),(0,n.jsxs)(s.span,{className:"base",children:[(0,n.jsx)(s.span,{className:"strut",style:{height:"0.8141em"}}),(0,n.jsxs)(s.span,{className:"mord",children:[(0,n.jsx)(s.span,{className:"mord mathnormal",children:"i"}),(0,n.jsx)(s.span,{className:"msupsub",children:(0,n.jsx)(s.span,{className:"vlist-t",children:(0,n.jsx)(s.span,{className:"vlist-r",children:(0,n.jsx)(s.span,{className:"vlist",style:{height:"0.8141em"},children:(0,n.jsxs)(s.span,{style:{top:"-3.063em",marginRight:"0.05em"},children:[(0,n.jsx)(s.span,{className:"pstrut",style:{height:"2.7em"}}),(0,n.jsx)(s.span,{className:"sizing reset-size6 size3 mtight",children:(0,n.jsx)(s.span,{className:"mord mtight",children:"2"})})]})})})})})]})]})]})]}),", viene dissipato tanto calore.\r\nIl circuito ",(0,n.jsxs)(s.a,{href:"https://www.youtube.com/watch?v=9XIKOSrQdQ0&t=10s",children:[(0,n.jsx)(s.em,{children:"prende fuoco"})," \ud83d\udd25"]}),"."]}),"\n",(0,n.jsx)("img",{src:(0,t.Ay)("2025-26/img/verilog/2/porte-logiche-2.drawio.png"),style:{maxWidth:"min(100%, 28rem)"},alt:"\r\nLa schema mostra una porta con uscita logica '1' la cui uscita \xe8 collegata a quella di un'altra porta la cui uscita logica \xe8 '0'.\r\nLo schema mostra come questo significa che c'\xe8 un filo che collega Vcc a terra, ossia un corto circuito.\r\n"}),"\n",(0,n.jsxs)(s.p,{children:["Arriviamo quindi al perch\xe9 questo \xe8 un grosso problema all'esame:\r\nin Verilog, questa regola si traduce in ",(0,n.jsxs)("u",{children:["non si possono fare due o pi\xf9 ",(0,n.jsx)(s.code,{children:"assign"})," allo stesso ",(0,n.jsx)(s.code,{children:"wire"})]}),".\r\nQuesto \xe8 un errore tanto grave quanto \xe8 facile da fare, soprattutto se non si tiene a mente la corrispondenza con schemi circuitali come discusso sopra.\r\nPer dar fuoco al proprio circuito basta infatti scrivere:"]}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-verilog",children:"wire filo;\r\n...\r\nassign #1 filo = ...;\r\n...\r\nassign #1 filo = ...;\n"})}),"\n",(0,n.jsx)(s.p,{children:"Una forma (purtroppo) comune di questo errore \xe8 quello in cui si tenta di usare un wire come variabile accumulatore."}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-verilog",children:"wire [7:0] filo;\r\n...\r\nrete_combinatoria rc_1 (\r\n    .ingresso1(...), .ingresso2(...),\r\n    .uscita(filo)\r\n)\r\n\r\nrete_combinatoria rc_2 (\r\n    .ingresso1(...), .ingresso2(...),\r\n    .uscita(filo)\r\n)\r\n...\n"})}),"\n",(0,n.jsxs)(s.p,{children:["Ci sono qui due errori in tandem: si parte dall'idea che ",(0,n.jsx)(s.code,{children:"rc_1"})," e ",(0,n.jsx)(s.code,{children:"rc_2"})," lavorino in sequenza anzich\xe9 in parallelo, come due righe distinte di un programma, e si arriva a collegare sia l'uscita di ",(0,n.jsx)(s.code,{children:"rc_1"})," che ",(0,n.jsx)(s.code,{children:"rc_2"})," allo stesso filo, creando il corto circuito."]}),"\n",(0,n.jsxs)(s.p,{children:['Dall\'uso del simulatore Verilog questo problema non \xe8 sempre evidente: se due valori assegnati sono gli stessi, il simulatore "lascia fare" assegnando quel valore al filo, se invece i valori sono distinti il filo avr\xe0 valore logico indeterminato ',(0,n.jsx)(s.code,{children:"1'bx"}),"."]}),"\n",(0,n.jsx)(s.h2,{id:"uso-efficiente-di-vs-code",children:"Uso efficiente di VS Code"}),"\n",(0,n.jsx)(s.admonition,{title:"Uso efficiente di VS Code",type:"note",children:(0,n.jsxs)(s.p,{children:["Questa parte della lezione copre l'uso efficiente di VS codice.\r\nIl materiale relativo si trova ",(0,n.jsx)(s.a,{href:"/esercitazioni/VS-Code",children:"qui"}),"."]})}),"\n",(0,n.jsx)(s.h2,{id:"esercizi-desame",children:"Esercizi d'esame"}),"\n",(0,n.jsxs)(s.p,{children:["Negli esercizi d'esame dove compare la sintesi di reti combinatorie, questa \xe8 ",(0,n.jsx)(s.em,{children:"parte"})," di un esercizio pi\xf9 ampio: si chiede di realizzare una rete sincronizzata che interagisce con l'esterno per raccogliere input, svolgere un calcolo, e inviare un risultato.\r\nViene chiesto di implementare tale calcolo con una rete combinatoria, da sintetizzare come modulo a parte utilizzato dalla rete sincronizzata."]}),"\n",(0,n.jsx)(s.p,{children:"Per esercitarsi, \xe8 possibile utilizzare tutti i testi d'esame in questa forma prendendo in considerazione solo la parte relativa alla rete combinatoria e ignorando, per ora il resto.\r\nUno svantaggio \xe8 il fatto che le testbench fornite sono relative all'esercizio per intero, interfacciandosi solo con la rete sincronizzata, e si dovr\xe0 realizzare da s\xe9 una testbench apposita per testare la sola rete combinatoria."}),"\n",(0,n.jsx)(s.admonition,{title:"Materiale in costruzione",type:"warning",children:(0,n.jsx)(s.p,{children:"Non \xe8 ancora pronta, ma prevista, una guida adeguata alle testbench preparate per gli esercizi d'esame e come riadattarle per altri usi, per esempio per testare solo la parte combinatoria."})}),"\n",(0,n.jsx)(s.p,{children:"Vediamo alcuni esercizi di reti combinatorie prese da testi d'esame."}),"\n",(0,n.jsx)(s.h2,{id:"esercizio-21-parte-combinatoria-esame-2023-06-27",children:"Esercizio 2.1: parte combinatoria esame 2023-06-27"}),"\n",(0,n.jsxs)(s.p,{children:[(0,n.jsx)(s.a,{target:"_blank","data-noBrokenLinkCheck":!0,href:i(18572).A+"",children:"Qui"})," il testo completo."]}),"\n",(0,n.jsxs)(s.p,{children:["L'esercizio parla di una rete sincronizzata, che preleva due numeri naturali ",(0,n.jsxs)(s.span,{className:"katex",children:[(0,n.jsx)(s.span,{className:"katex-mathml",children:(0,n.jsx)(s.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,n.jsxs)(s.semantics,{children:[(0,n.jsx)(s.mrow,{children:(0,n.jsx)(s.mi,{children:"x"})}),(0,n.jsx)(s.annotation,{encoding:"application/x-tex",children:"x"})]})})}),(0,n.jsx)(s.span,{className:"katex-html","aria-hidden":"true",children:(0,n.jsxs)(s.span,{className:"base",children:[(0,n.jsx)(s.span,{className:"strut",style:{height:"0.4306em"}}),(0,n.jsx)(s.span,{className:"mord mathnormal",children:"x"})]})})]})," e ",(0,n.jsxs)(s.span,{className:"katex",children:[(0,n.jsx)(s.span,{className:"katex-mathml",children:(0,n.jsx)(s.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,n.jsxs)(s.semantics,{children:[(0,n.jsx)(s.mrow,{children:(0,n.jsx)(s.mi,{children:"y"})}),(0,n.jsx)(s.annotation,{encoding:"application/x-tex",children:"y"})]})})}),(0,n.jsx)(s.span,{className:"katex-html","aria-hidden":"true",children:(0,n.jsxs)(s.span,{className:"base",children:[(0,n.jsx)(s.span,{className:"strut",style:{height:"0.625em",verticalAlign:"-0.1944em"}}),(0,n.jsx)(s.span,{className:"mord mathnormal",style:{marginRight:"0.03588em"},children:"y"})]})})]}),", su 8 bit, e ha bisogno di calcolare ",(0,n.jsxs)(s.span,{className:"katex",children:[(0,n.jsx)(s.span,{className:"katex-mathml",children:(0,n.jsx)(s.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,n.jsxs)(s.semantics,{children:[(0,n.jsxs)(s.mrow,{children:[(0,n.jsx)(s.mi,{children:"z"}),(0,n.jsx)(s.mo,{children:"="}),(0,n.jsx)(s.mi,{children:"m"}),(0,n.jsx)(s.mi,{children:"a"}),(0,n.jsx)(s.mi,{children:"x"}),(0,n.jsx)(s.mo,{stretchy:"false",children:"("}),(0,n.jsx)(s.mi,{children:"x"}),(0,n.jsx)(s.mo,{separator:"true",children:","}),(0,n.jsx)(s.mi,{children:"y"}),(0,n.jsx)(s.mo,{stretchy:"false",children:")"})]}),(0,n.jsx)(s.annotation,{encoding:"application/x-tex",children:"z = max(x, y)"})]})})}),(0,n.jsxs)(s.span,{className:"katex-html","aria-hidden":"true",children:[(0,n.jsxs)(s.span,{className:"base",children:[(0,n.jsx)(s.span,{className:"strut",style:{height:"0.4306em"}}),(0,n.jsx)(s.span,{className:"mord mathnormal",style:{marginRight:"0.04398em"},children:"z"}),(0,n.jsx)(s.span,{className:"mspace",style:{marginRight:"0.2778em"}}),(0,n.jsx)(s.span,{className:"mrel",children:"="}),(0,n.jsx)(s.span,{className:"mspace",style:{marginRight:"0.2778em"}})]}),(0,n.jsxs)(s.span,{className:"base",children:[(0,n.jsx)(s.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,n.jsx)(s.span,{className:"mord mathnormal",children:"ma"}),(0,n.jsx)(s.span,{className:"mord mathnormal",children:"x"}),(0,n.jsx)(s.span,{className:"mopen",children:"("}),(0,n.jsx)(s.span,{className:"mord mathnormal",children:"x"}),(0,n.jsx)(s.span,{className:"mpunct",children:","}),(0,n.jsx)(s.span,{className:"mspace",style:{marginRight:"0.1667em"}}),(0,n.jsx)(s.span,{className:"mord mathnormal",style:{marginRight:"0.03588em"},children:"y"}),(0,n.jsx)(s.span,{className:"mclose",children:")"})]})]})]}),".\r\nPer ora, ci interessa soltanto la parte dove ci viene chiesto di sintetizzare la rete ",(0,n.jsx)(s.code,{children:"MAX"})," che svolge questo calcolo."]}),"\n",(0,n.jsxs)(s.p,{children:["Per testare tale rete, possiamo ricavarci una testbench come la seguente, scaricabile ",(0,n.jsx)(s.a,{target:"_blank","data-noBrokenLinkCheck":!0,href:i(7188).A+"",children:"qui"}),"."]}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-verilog",metastring:"showLineNumbers",children:'module testbench();\r\n    reg [7:0] x, y;\r\n    wire [7:0] z;\r\n    \r\n    MAX m (\r\n        .x(x), .y(y), .max(z)\r\n    );\r\n\r\n    initial begin\r\n        x = 10; y = 5;\r\n        #10;\r\n        if(z != 10)\r\n            $display("Test failed!");\r\n\r\n        x = 5; y = 10;\r\n        #10;\r\n        if(z != 10)\r\n            $display("Test failed!");\r\n\r\n        x = 10; y = 10;\r\n        #10;\r\n        if(z != 10)\r\n            $display("Test failed!");\r\n\r\n        x = 100; y = 50;\r\n        #10;\r\n        if(z != 100)\r\n            $display("Test failed!");\r\n\r\n        x = 50; y = 100;\r\n        #10;\r\n        if(z != 100)\r\n            $display("Test failed!");\r\n    end\r\nendmodule\n'})}),"\n",(0,n.jsx)(s.admonition,{type:"note",children:(0,n.jsxs)(s.p,{children:["Una versione pi\xf9 completa, ottenuta dalla testbench originale dell'esercizio prendendo lo schema del blocco ",(0,n.jsx)(s.code,{children:"consumer"})," e i casi di test della funzione ",(0,n.jsx)(s.code,{children:"get_testcase"}),", \xe8 scaricabile ",(0,n.jsx)(s.a,{target:"_blank","data-noBrokenLinkCheck":!0,href:i(82035).A+"",children:"qui"}),"."]})}),"\n",(0,n.jsxs)(s.p,{children:["Notiamo che, come per le testbench d'esame, questa emette output solo in caso di errore.\r\nQuesto significa che quando lanciamo la simulazione, se vediamo a terminale ",(0,n.jsx)(s.em,{children:"solo"})," le righe riguardo il file VCD e la ",(0,n.jsx)(s.code,{children:"$finish"})," di fine simulaizone, possiamo dire che la testbench ",(0,n.jsx)(s.em,{children:"non ha trovato"})," errori.\r\nQuesto non vuol dire che ",(0,n.jsx)(s.em,{children:"non ci sono"}),", ed \xe8 sempre indicato di verificare da s\xe9 il corretto comportamento per tutti gli aspetti."]}),"\n",(0,n.jsxs)(s.p,{children:["Vediamo ora il file ",(0,n.jsx)(s.code,{children:"reti_standard.v"}),", anche questo fornito con l'esercizio.\r\nQuesto file contiene delle reti combinatorie che si assume ",(0,n.jsx)(s.em,{children:"note"})," e ",(0,n.jsx)(s.em,{children:"sintetizzabili"}),".\r\nCi\xf2 vuol dire che possiamo liberamente usarle come componenti nelle nostre sintesi di reti combinatorie - assieme alle porte logiche elementari e eventuali altre reti sintetizzate da noi nello stesso esercizio."]}),"\n",(0,n.jsxs)(s.admonition,{type:"tip",children:[(0,n.jsxs)(s.mdxAdmonitionTitle,{children:["Controllare sempre ",(0,n.jsx)(s.code,{children:"reti_standard.v"})]}),(0,n.jsxs)(s.p,{children:["Il contenuto di ",(0,n.jsx)(s.code,{children:"reti_standard.v"})," varia da esercizio ad esercizio.\r\nQuesto sia in termini di reti fornite sia per la presenza o meno di parametri configurabili.\r\nCi\xf2 \xe8 intenzionale, e la difficolt\xe0 di un esercizio \xe8 data anche da ci\xf2 che si \xe8 fornito come partenza."]})]}),"\n",(0,n.jsxs)(s.p,{children:["In questo caso abbiamo a disposizione una sola rete combinatoria, il sommatore.\r\nQuesto sommatore ha per\xf2 un parametro, ",(0,n.jsx)(s.code,{children:"N"}),".\r\nI parametri sono simili ai ",(0,n.jsx)(s.em,{children:"generics"})," nei linguaggi di programmazione: un modo per scrivere un modulo configurabile che si adatta a pi\xf9 situazioni, che in questo caso vuol dire a un diverso numero di bit.\r\nQuesto vuol dire che possiamo collocare nella nostra rete sommatori di qualunque numero di bit vogliamo, anzi ",(0,n.jsx)(s.em,{children:"dobbiamo"})," trovare il numero giusto di bit da usare."]}),"\n",(0,n.jsxs)(s.p,{children:["Prima di vedere la sintassi per usare queste reti parametriche, capiamo prima ",(0,n.jsx)(s.em,{children:"come"})," lo vogliamo usare, ragionando sul problema con schemi circuitali.\r\nUna rete che determini il massimo tra due numeri dovr\xe0 necessariamente passare da una comparazione tra i due.\r\nPartiamo dall'idea di avere un comparatore il cui risultato fa da selettore per un multiplexer."]}),"\n",(0,n.jsx)("img",{src:(0,t.Ay)("2025-26/img/verilog/2/max-sintesi-rc-1.drawio.png"),style:{maxWidth:"min(100%, 30rem)"},alt:"\r\nSchema di una rete che calcola il massimo tra gli ingressi 'x' e 'y', usando un comparatore ed un multiplexer.\r\nIl comparatore prende 'x' e 'y' in ingresso, la sua uscita 'min' \xe8 1 se x \xe8 minore di y.\r\nTale uscita \xe8 utilizzata per guidare un multiplexer, che ha 'x' in corrispondenza di '0' e 'y' in corrispondenza di 1.\r\nL'uscita del multiplexer corrisponde all'uscita 'max' della rete.\r\n"}),"\n",(0,n.jsxs)(s.p,{children:[(0,n.jsxs)(s.span,{className:"katex",children:[(0,n.jsx)(s.span,{className:"katex-mathml",children:(0,n.jsx)(s.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,n.jsxs)(s.semantics,{children:[(0,n.jsxs)(s.mrow,{children:[(0,n.jsx)(s.mi,{children:"x"}),(0,n.jsx)(s.mo,{children:"<"}),(0,n.jsx)(s.mi,{children:"y"})]}),(0,n.jsx)(s.annotation,{encoding:"application/x-tex",children:"x < y"})]})})}),(0,n.jsxs)(s.span,{className:"katex-html","aria-hidden":"true",children:[(0,n.jsxs)(s.span,{className:"base",children:[(0,n.jsx)(s.span,{className:"strut",style:{height:"0.5782em",verticalAlign:"-0.0391em"}}),(0,n.jsx)(s.span,{className:"mord mathnormal",children:"x"}),(0,n.jsx)(s.span,{className:"mspace",style:{marginRight:"0.2778em"}}),(0,n.jsx)(s.span,{className:"mrel",children:"<"}),(0,n.jsx)(s.span,{className:"mspace",style:{marginRight:"0.2778em"}})]}),(0,n.jsxs)(s.span,{className:"base",children:[(0,n.jsx)(s.span,{className:"strut",style:{height:"0.625em",verticalAlign:"-0.1944em"}}),(0,n.jsx)(s.span,{className:"mord mathnormal",style:{marginRight:"0.03588em"},children:"y"})]})]})]})," equivale a ",(0,n.jsxs)(s.span,{className:"katex",children:[(0,n.jsx)(s.span,{className:"katex-mathml",children:(0,n.jsx)(s.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,n.jsxs)(s.semantics,{children:[(0,n.jsxs)(s.mrow,{children:[(0,n.jsx)(s.mi,{children:"x"}),(0,n.jsx)(s.mo,{children:"\u2212"}),(0,n.jsx)(s.mi,{children:"y"}),(0,n.jsx)(s.mo,{children:"<"}),(0,n.jsx)(s.mn,{children:"0"})]}),(0,n.jsx)(s.annotation,{encoding:"application/x-tex",children:"x - y < 0"})]})})}),(0,n.jsxs)(s.span,{className:"katex-html","aria-hidden":"true",children:[(0,n.jsxs)(s.span,{className:"base",children:[(0,n.jsx)(s.span,{className:"strut",style:{height:"0.6667em",verticalAlign:"-0.0833em"}}),(0,n.jsx)(s.span,{className:"mord mathnormal",children:"x"}),(0,n.jsx)(s.span,{className:"mspace",style:{marginRight:"0.2222em"}}),(0,n.jsx)(s.span,{className:"mbin",children:"\u2212"}),(0,n.jsx)(s.span,{className:"mspace",style:{marginRight:"0.2222em"}})]}),(0,n.jsxs)(s.span,{className:"base",children:[(0,n.jsx)(s.span,{className:"strut",style:{height:"0.7335em",verticalAlign:"-0.1944em"}}),(0,n.jsx)(s.span,{className:"mord mathnormal",style:{marginRight:"0.03588em"},children:"y"}),(0,n.jsx)(s.span,{className:"mspace",style:{marginRight:"0.2778em"}}),(0,n.jsx)(s.span,{className:"mrel",children:"<"}),(0,n.jsx)(s.span,{className:"mspace",style:{marginRight:"0.2778em"}})]}),(0,n.jsxs)(s.span,{className:"base",children:[(0,n.jsx)(s.span,{className:"strut",style:{height:"0.6444em"}}),(0,n.jsx)(s.span,{className:"mord",children:"0"})]})]})]}),".\r\nDato che ",(0,n.jsxs)(s.span,{className:"katex",children:[(0,n.jsx)(s.span,{className:"katex-mathml",children:(0,n.jsx)(s.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,n.jsxs)(s.semantics,{children:[(0,n.jsx)(s.mrow,{children:(0,n.jsx)(s.mi,{children:"x"})}),(0,n.jsx)(s.annotation,{encoding:"application/x-tex",children:"x"})]})})}),(0,n.jsx)(s.span,{className:"katex-html","aria-hidden":"true",children:(0,n.jsxs)(s.span,{className:"base",children:[(0,n.jsx)(s.span,{className:"strut",style:{height:"0.4306em"}}),(0,n.jsx)(s.span,{className:"mord mathnormal",children:"x"})]})})]})," e ",(0,n.jsxs)(s.span,{className:"katex",children:[(0,n.jsx)(s.span,{className:"katex-mathml",children:(0,n.jsx)(s.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,n.jsxs)(s.semantics,{children:[(0,n.jsx)(s.mrow,{children:(0,n.jsx)(s.mi,{children:"y"})}),(0,n.jsx)(s.annotation,{encoding:"application/x-tex",children:"y"})]})})}),(0,n.jsx)(s.span,{className:"katex-html","aria-hidden":"true",children:(0,n.jsxs)(s.span,{className:"base",children:[(0,n.jsx)(s.span,{className:"strut",style:{height:"0.625em",verticalAlign:"-0.1944em"}}),(0,n.jsx)(s.span,{className:"mord mathnormal",style:{marginRight:"0.03588em"},children:"y"})]})})]})," sono numeri naturali, questo equivale a chiedersi se la loro sottrazione genera un prestito uscente.\r\nPosso quindi realizzare questo comparatore usando un sottrattore."]}),"\n",(0,n.jsx)("img",{src:(0,t.Ay)("2025-26/img/verilog/2/max-sintesi-rc-2.drawio.png"),style:{maxWidth:"min(100%, 32rem)"},alt:"\r\nSchema della rete precedente, mostrando come si ottiene il comparatore per naturali a partire da un sottrattore per naturali.\r\nIl sottrattore ha 'x' come minuendo, 'y' come sottraendo e '0' come prestito entrante.\r\nIl prestito uscente del sottrattore corrisponde all'uscita 'min' del comparatore.\r\nL'uscita 'diff' del sottrattore non \xe8 di interesse, quindi non la colleghiamo a nulla.\r\n"}),"\n",(0,n.jsx)(s.p,{children:"Arriviamo quindi a come fare il sottrattore: sappiamo dal modulo di aritmetica che si pu\xf2 fare a partire da un sommatore: basta negare il sottraendo e i riporti in ingresso e uscita."}),"\n",(0,n.jsx)("img",{src:(0,t.Ay)("2025-26/img/verilog/2/max-sintesi-rc-3.drawio.png"),style:{maxWidth:"min(100%, 34rem)"},alt:"\r\nSchema della rete precedente, mostrando come si ottiene il sottrattore per naturali a partire da un sommatore.\r\nIl minuendo 'x' \xe8 collegato direttamente al sommatore come primo addendo.\r\nIl sottraendo 'y' \xe8 invece collegato ad una porta NOT, l'uscita di tale NOT \xe8 collegata al sommatore addendo.\r\nSimilmente, 'c_in' si ottiene negando 'b_in', e in uscita 'b_out' si ottiene negando 'c_out'.\r\n"}),"\n",(0,n.jsxs)(s.p,{children:["Abbiamo quindi una rete sintetizzabile: usiamo solo dei not, un multiplexer e un sommatore a 8 bit, quest'ultimo sintetizzabile perch\xe9 parte della libreria ",(0,n.jsx)(s.code,{children:"reti_standard.v"}),"."]}),"\n",(0,n.jsxs)(s.p,{children:["Possiamo ora scrivere l'equivalente in Verilog, specificando per il sommatore ",(0,n.jsx)(s.code,{children:"N = 8"}),". Questo parametro viene impostato all'instanziazione del sommatore, e deve essere una costante: determina infatti la quantit\xe0 di hardware utilizzata, e non si pu\xf2 cambiare l'hardware a runtime."]}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-verilog",metastring:"showLineNumbers",children:"module MAX(\r\n    x, y,\r\n    max\r\n);\r\n    input [7:0] x, y;\r\n    output [7:0] max;\r\n\r\n    wire [7:0] y_neg;\r\n    assign #1 y_neg = ~y;\r\n\r\n    wire c_out;\r\n    add #( .N(8) ) s (\r\n        .x(x), .y(y_neg), .c_in(1'b1),\r\n        .c_out(c_out)\r\n    );\r\n\r\n    wire b_out;\r\n    assign #1 b_out = ~c_out;\r\n    \r\n    assign #1 max = b_out ? y : x;\r\nendmodule\n"})}),"\n",(0,n.jsxs)(s.admonition,{title:"Uso di wire vs. assegnamento diretto",type:"note",children:[(0,n.jsxs)(s.p,{children:["Esiste una certa flessibilit\xe0, soprattutto quando le reti si fanno pi\xf9 complesse, attorno alla sintesi esplicita con ritardi di operazioni come la negazione ",(0,n.jsx)(s.code,{children:"~"})," e l'incremento ",(0,n.jsx)(s.code,{children:"+1"}),"."]}),(0,n.jsxs)(s.p,{children:["Per esempio, in questo esercizio abbiamo dichiarato separatamente i wire ",(0,n.jsx)(s.code,{children:"y_neg"})," e ",(0,n.jsx)(s.code,{children:"b_out"}),", con dei ritardi negli ",(0,n.jsx)(s.code,{children:"assign"})," relativi.\r\n\xc8 lecito per\xf2 anche evitare questi ",(0,n.jsx)(s.code,{children:"wire"})," e scrivere pi\xf9 compattamente ",(0,n.jsx)(s.code,{children:".y(~y)"})," a riga 13 e ",(0,n.jsx)(s.code,{children:"~c_out ? y : x"})," a riga 20.\r\nUno svantaggio di questo approccio \xe8 che, rimuovemendo dei punti di ritardo, pu\xf2 rendere pi\xf9 difficile il debugging via waveform."]})]}),"\n",(0,n.jsx)(s.h2,{id:"esercizio-22-parte-combinatoria-esame-2023-01-31",children:"Esercizio 2.2: parte combinatoria esame 2023-01-31"}),"\n",(0,n.jsxs)(s.p,{children:[(0,n.jsx)(s.a,{target:"_blank","data-noBrokenLinkCheck":!0,href:i(55704).A+"",children:"Qui"})," il testo completo."]}),"\n",(0,n.jsxs)(s.p,{children:["Anche in questo caso, l'esercizio parla di una rete sincronizzata, che per ora ignoreremo. Per la rete sincronizzata, avremo da calcolare un prodotto di numeri naturali, ma abbiamo a disposizione solo ",(0,n.jsx)(s.code,{children:"mul+add"})," da 4 bit (non parametrizzati).\r\n",(0,n.jsx)(s.a,{target:"_blank","data-noBrokenLinkCheck":!0,href:i(41018).A+"",children:"Qui"})," la testbench riadattata per la sola rete combinatoria."]}),"\n",(0,n.jsxs)(s.p,{children:["Questo esercizio segue in realt\xe0 lo stesso schema dell'equivalente gi\xe0 visto in Assembler (",(0,n.jsx)(s.a,{href:"/esercitazioni/Assembler/Esercitazioni/Esercitazione%204#esercizio-41-esercizio-desame-2023-01-10",children:"qui"}),"),\r\ncambia solo la base, che passa da ",(0,n.jsxs)(s.span,{className:"katex",children:[(0,n.jsx)(s.span,{className:"katex-mathml",children:(0,n.jsx)(s.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,n.jsxs)(s.semantics,{children:[(0,n.jsxs)(s.mrow,{children:[(0,n.jsxs)(s.msub,{children:[(0,n.jsx)(s.mi,{children:"\u03b2"}),(0,n.jsxs)(s.mrow,{children:[(0,n.jsx)(s.mi,{children:"a"}),(0,n.jsx)(s.mi,{children:"s"}),(0,n.jsx)(s.mi,{children:"m"})]})]}),(0,n.jsx)(s.mo,{children:"="}),(0,n.jsxs)(s.msup,{children:[(0,n.jsx)(s.mn,{children:"2"}),(0,n.jsx)(s.mn,{children:"8"})]})]}),(0,n.jsx)(s.annotation,{encoding:"application/x-tex",children:"\\beta_{asm} = 2^8"})]})})}),(0,n.jsxs)(s.span,{className:"katex-html","aria-hidden":"true",children:[(0,n.jsxs)(s.span,{className:"base",children:[(0,n.jsx)(s.span,{className:"strut",style:{height:"0.8889em",verticalAlign:"-0.1944em"}}),(0,n.jsxs)(s.span,{className:"mord",children:[(0,n.jsx)(s.span,{className:"mord mathnormal",style:{marginRight:"0.05278em"},children:"\u03b2"}),(0,n.jsx)(s.span,{className:"msupsub",children:(0,n.jsxs)(s.span,{className:"vlist-t vlist-t2",children:[(0,n.jsxs)(s.span,{className:"vlist-r",children:[(0,n.jsx)(s.span,{className:"vlist",style:{height:"0.1514em"},children:(0,n.jsxs)(s.span,{style:{top:"-2.55em",marginLeft:"-0.0528em",marginRight:"0.05em"},children:[(0,n.jsx)(s.span,{className:"pstrut",style:{height:"2.7em"}}),(0,n.jsx)(s.span,{className:"sizing reset-size6 size3 mtight",children:(0,n.jsxs)(s.span,{className:"mord mtight",children:[(0,n.jsx)(s.span,{className:"mord mathnormal mtight",children:"a"}),(0,n.jsx)(s.span,{className:"mord mathnormal mtight",children:"s"}),(0,n.jsx)(s.span,{className:"mord mathnormal mtight",children:"m"})]})})]})}),(0,n.jsx)(s.span,{className:"vlist-s",children:"\u200b"})]}),(0,n.jsx)(s.span,{className:"vlist-r",children:(0,n.jsx)(s.span,{className:"vlist",style:{height:"0.15em"},children:(0,n.jsx)(s.span,{})})})]})})]}),(0,n.jsx)(s.span,{className:"mspace",style:{marginRight:"0.2778em"}}),(0,n.jsx)(s.span,{className:"mrel",children:"="}),(0,n.jsx)(s.span,{className:"mspace",style:{marginRight:"0.2778em"}})]}),(0,n.jsxs)(s.span,{className:"base",children:[(0,n.jsx)(s.span,{className:"strut",style:{height:"0.8141em"}}),(0,n.jsxs)(s.span,{className:"mord",children:[(0,n.jsx)(s.span,{className:"mord",children:"2"}),(0,n.jsx)(s.span,{className:"msupsub",children:(0,n.jsx)(s.span,{className:"vlist-t",children:(0,n.jsx)(s.span,{className:"vlist-r",children:(0,n.jsx)(s.span,{className:"vlist",style:{height:"0.8141em"},children:(0,n.jsxs)(s.span,{style:{top:"-3.063em",marginRight:"0.05em"},children:[(0,n.jsx)(s.span,{className:"pstrut",style:{height:"2.7em"}}),(0,n.jsx)(s.span,{className:"sizing reset-size6 size3 mtight",children:(0,n.jsx)(s.span,{className:"mord mtight",children:"8"})})]})})})})})]})]})]})]})," a ",(0,n.jsxs)(s.span,{className:"katex",children:[(0,n.jsx)(s.span,{className:"katex-mathml",children:(0,n.jsx)(s.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,n.jsxs)(s.semantics,{children:[(0,n.jsxs)(s.mrow,{children:[(0,n.jsxs)(s.msub,{children:[(0,n.jsx)(s.mi,{children:"\u03b2"}),(0,n.jsxs)(s.mrow,{children:[(0,n.jsx)(s.mi,{children:"v"}),(0,n.jsx)(s.mi,{children:"r"}),(0,n.jsx)(s.mi,{children:"l"})]})]}),(0,n.jsx)(s.mo,{children:"="}),(0,n.jsxs)(s.msup,{children:[(0,n.jsx)(s.mn,{children:"2"}),(0,n.jsx)(s.mn,{children:"4"})]})]}),(0,n.jsx)(s.annotation,{encoding:"application/x-tex",children:"\\beta_{vrl} = 2^4"})]})})}),(0,n.jsxs)(s.span,{className:"katex-html","aria-hidden":"true",children:[(0,n.jsxs)(s.span,{className:"base",children:[(0,n.jsx)(s.span,{className:"strut",style:{height:"0.8889em",verticalAlign:"-0.1944em"}}),(0,n.jsxs)(s.span,{className:"mord",children:[(0,n.jsx)(s.span,{className:"mord mathnormal",style:{marginRight:"0.05278em"},children:"\u03b2"}),(0,n.jsx)(s.span,{className:"msupsub",children:(0,n.jsxs)(s.span,{className:"vlist-t vlist-t2",children:[(0,n.jsxs)(s.span,{className:"vlist-r",children:[(0,n.jsx)(s.span,{className:"vlist",style:{height:"0.3361em"},children:(0,n.jsxs)(s.span,{style:{top:"-2.55em",marginLeft:"-0.0528em",marginRight:"0.05em"},children:[(0,n.jsx)(s.span,{className:"pstrut",style:{height:"2.7em"}}),(0,n.jsx)(s.span,{className:"sizing reset-size6 size3 mtight",children:(0,n.jsxs)(s.span,{className:"mord mtight",children:[(0,n.jsx)(s.span,{className:"mord mathnormal mtight",style:{marginRight:"0.03588em"},children:"v"}),(0,n.jsx)(s.span,{className:"mord mathnormal mtight",style:{marginRight:"0.02778em"},children:"r"}),(0,n.jsx)(s.span,{className:"mord mathnormal mtight",style:{marginRight:"0.01968em"},children:"l"})]})})]})}),(0,n.jsx)(s.span,{className:"vlist-s",children:"\u200b"})]}),(0,n.jsx)(s.span,{className:"vlist-r",children:(0,n.jsx)(s.span,{className:"vlist",style:{height:"0.15em"},children:(0,n.jsx)(s.span,{})})})]})})]}),(0,n.jsx)(s.span,{className:"mspace",style:{marginRight:"0.2778em"}}),(0,n.jsx)(s.span,{className:"mrel",children:"="}),(0,n.jsx)(s.span,{className:"mspace",style:{marginRight:"0.2778em"}})]}),(0,n.jsxs)(s.span,{className:"base",children:[(0,n.jsx)(s.span,{className:"strut",style:{height:"0.8141em"}}),(0,n.jsxs)(s.span,{className:"mord",children:[(0,n.jsx)(s.span,{className:"mord",children:"2"}),(0,n.jsx)(s.span,{className:"msupsub",children:(0,n.jsx)(s.span,{className:"vlist-t",children:(0,n.jsx)(s.span,{className:"vlist-r",children:(0,n.jsx)(s.span,{className:"vlist",style:{height:"0.8141em"},children:(0,n.jsxs)(s.span,{style:{top:"-3.063em",marginRight:"0.05em"},children:[(0,n.jsx)(s.span,{className:"pstrut",style:{height:"2.7em"}}),(0,n.jsx)(s.span,{className:"sizing reset-size6 size3 mtight",children:(0,n.jsx)(s.span,{className:"mord mtight",children:"4"})})]})})})})})]})]})]})]}),".\r\nAnche se matematicamente \xe8 lo stesso problema, cambia abbastanza come dovremmo solgerlo proprio perch\xe9 stiamo descrivendo hardware e non programmando software."]}),"\n",(0,n.jsx)(s.h3,{id:"soluzione-1",children:"Soluzione 1"}),"\n",(0,n.jsx)(s.p,{children:"Una buona strategia, soprattutto quando si ha tempo limitato, \xe8 partire da soluzioni semplici ma funzionali, e passare poi a migliorarle."}),"\n",(0,n.jsx)(s.p,{children:"Seguendo lo schema gi\xe0 visto, dovremo calcolare quattro sottoprodotti tra due cifre.\r\nCiascun sottoprodotto pu\xf2 essere calcolato indipendentemente e produce un risultato su 2 cifre (8 bit).\r\nQuesti sottoprodotti venivano shiftati a sinistra di 0, 1 o 2 cifre."}),"\n",(0,n.jsxs)(s.p,{children:["In Assembler, dopo questo passaggio si era gi\xe0 pronti a fare la somma su 4 cifre: questo perch\xe9 i registri del processore hanno numeri di bit fissi, e le istruzioni a disposizione operano su questi numeri di bit.\r\nIn Verilog, dove descriviamo hardware, i numeri di bit sono decisi da noi, ed \xe8 normale avere valori su numeri di bit diversi che non possiamo passare ad un sommatore senza prima ",(0,n.jsx)(s.em,{children:"estenderli"}),"."]}),"\n",(0,n.jsx)(s.p,{children:"In altre parole, dobbiamo occuparci tanto degli zeri aggiunti a destra (per shift) quanto di quelli aggiunti a sinistra (per estensione) prima di poter sommare i sottoprodotti tra di loro.\r\nUna volta ottenuti i quattro sottoprodotti, tutti su 4 cifre, possiamo sommarli tra loro. Possiamo usare tre sommatori a 4 cifre (16 bit) per farlo.\r\nOtteniamo quindi lo schema seguente."}),"\n",(0,n.jsx)("img",{src:(0,t.Ay)("2025-26/img/verilog/2/mul8-rc-1.drawio.png"),style:{maxWidth:"min(100%, 44rem)"},alt:"\r\nSchema di un moltiplicatore a 8 bit, a partire da mul+add a 4 bit.\r\nSi dividono gli ingressi 'x' e 'y' nelle corrispondenti parte alta e bassa.\r\nSi utilizzano quattro mul+add a 4 bit per calcolare i sottoprodotti:\r\n'xl' per 'yl', 'xl' per 'yh', 'xh' per 'yl', 'xh' per 'yh'.\r\nGli ingressi 'c' dei moltiplicatori sono tutti a 0.\r\nTutti i sottoprodotti (a 8 bit) vengono poi shiftati e/o estesi a 16 bit, in base allo schema della moltiplicazione in colonna, e quindi sommati tra di loro usando tre sommatori a 16 bit: \r\nm = ({xh*yh, 8'h00} + {4'h0, xh*yl, 4'h0}) + ({4'h0, xl*yh, 4'h0} + {8'h00, xl*yl}).\r\n"}),"\n",(0,n.jsxs)(s.p,{children:["In Verilog, questo diventa quanto segue (scaricabile ",(0,n.jsx)(s.a,{target:"_blank","data-noBrokenLinkCheck":!0,href:i(56326).A+"",children:"qui"}),")."]}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-verilog",metastring:"showLineNumbers",children:"// x naturale su 8 bit\r\n// y naturale su 8 bit\r\n// m = x * y, su 16 bit\r\nmodule MUL8(x, y, m);\r\n    input [7:0] x;\r\n    input [7:0] y;\r\n    output [15:0] m;   \r\n\r\n    wire [3:0] xl, xh;\r\n    assign {xh, xl} = x;\r\n    wire [3:0] yl, yh;\r\n    assign {yh, yl} = y;\r\n    \r\n    wire [7:0] m0;\r\n    mul_add_nat ma0(\r\n        .x(xl), .y(yl), .c(4'h0),\r\n        .m(m0)\r\n    );\r\n    wire [15:0] m0e = {8'h00, m0};\r\n\r\n    wire [7:0] m1;\r\n    mul_add_nat ma1(\r\n        .x(xl), .y(yh), .c(4'h0),\r\n        .m(m1)\r\n    );\r\n    wire [15:0] m1e = {4'h0, m1, 4'h0};\r\n\r\n    wire [7:0] m2;\r\n    mul_add_nat ma2(\r\n        .x(xh), .y(yl), .c(4'h0),\r\n        .m(m2)\r\n    );\r\n    wire [15:0] m2e = {4'h0, m2, 4'h0};\r\n\r\n    wire [7:0] m3;\r\n    mul_add_nat ma3(\r\n        .x(xh), .y(yh), .c(4'h0),\r\n        .m(m3)\r\n    );\r\n    wire [15:0] m3e = {m3, 8'h00};\r\n\r\n\r\n    wire [15:0] s0;\r\n    add #( .N(16) ) a0 (\r\n        .x(m0e), .y(m1e), .c_in(1'b0),\r\n        .s(s0)\r\n    );\r\n\r\n    wire [15:0] s1;\r\n    add #( .N(16) ) a1 (\r\n        .x(m2e), .y(m3e), .c_in(1'b0),\r\n        .s(s1)\r\n    );\r\n\r\n    add #( .N(16) ) a2 (\r\n        .x(s0), .y(s1), .c_in(1'b0),\r\n        .s(m)\r\n    );\r\n\r\nendmodule\n"})}),"\n",(0,n.jsx)(s.admonition,{title:"Si diceva dei corto circuiti...",type:"info",children:(0,n.jsxs)(s.p,{children:["Questo \xe8 un esempio del tipo di esercizi dove \xe8 comune vedere confusione: dovendo sommare quattro valori, usando tre sommatori, si pu\xf2 pensare di poter utilizzare un ",(0,n.jsx)(s.code,{children:"wire"})," come una variabile accumulatore.\r\nCome spiegato, ci\xf2 non pu\xf2 funzionare in una rete combinatoria ed \xe8 un errore grave."]})}),"\n",(0,n.jsx)(s.h3,{id:"soluzione-2",children:"Soluzione 2"}),"\n",(0,n.jsxs)(s.p,{children:["Nella soluzione precedente si pu\xf2 notare una inefficienza: abbiamo a disposizione solo reti ",(0,n.jsx)(s.code,{children:"mul+add"}),", che hanno anche un ingresso ",(0,n.jsx)(s.code,{children:"c"})," e calcolano ",(0,n.jsxs)(s.span,{className:"katex",children:[(0,n.jsx)(s.span,{className:"katex-mathml",children:(0,n.jsx)(s.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,n.jsxs)(s.semantics,{children:[(0,n.jsxs)(s.mrow,{children:[(0,n.jsx)(s.mo,{stretchy:"false",children:"("}),(0,n.jsx)(s.mi,{children:"x"}),(0,n.jsx)(s.mo,{children:"\u22c5"}),(0,n.jsx)(s.mi,{children:"y"}),(0,n.jsx)(s.mo,{stretchy:"false",children:")"}),(0,n.jsx)(s.mo,{children:"+"}),(0,n.jsx)(s.mi,{children:"c"})]}),(0,n.jsx)(s.annotation,{encoding:"application/x-tex",children:"(x \\cdot y) + c"})]})})}),(0,n.jsxs)(s.span,{className:"katex-html","aria-hidden":"true",children:[(0,n.jsxs)(s.span,{className:"base",children:[(0,n.jsx)(s.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,n.jsx)(s.span,{className:"mopen",children:"("}),(0,n.jsx)(s.span,{className:"mord mathnormal",children:"x"}),(0,n.jsx)(s.span,{className:"mspace",style:{marginRight:"0.2222em"}}),(0,n.jsx)(s.span,{className:"mbin",children:"\u22c5"}),(0,n.jsx)(s.span,{className:"mspace",style:{marginRight:"0.2222em"}})]}),(0,n.jsxs)(s.span,{className:"base",children:[(0,n.jsx)(s.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,n.jsx)(s.span,{className:"mord mathnormal",style:{marginRight:"0.03588em"},children:"y"}),(0,n.jsx)(s.span,{className:"mclose",children:")"}),(0,n.jsx)(s.span,{className:"mspace",style:{marginRight:"0.2222em"}}),(0,n.jsx)(s.span,{className:"mbin",children:"+"}),(0,n.jsx)(s.span,{className:"mspace",style:{marginRight:"0.2222em"}})]}),(0,n.jsxs)(s.span,{className:"base",children:[(0,n.jsx)(s.span,{className:"strut",style:{height:"0.4306em"}}),(0,n.jsx)(s.span,{className:"mord mathnormal",children:"c"})]})]})]}),", ma stiamo ignorando questa possibilit\xe0 impostando tutti gli ",(0,n.jsx)(s.code,{children:"c"})," a 0."]}),"\n",(0,n.jsx)(s.p,{children:"Per ottimizzare, possiamo quindi cercare un modo di sfruttare questi ingressi per ridurre il numero di sommatori.\r\nRitorniamo alla somma in colonna dei sottoprodotti."}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{children:" 0  0 [ m0 ]  +\r\n 0 [ m1 ] 0   + \r\n 0 [ m2 ] 0   + \r\n[ m3 ] 0  0   + \n"})}),"\n",(0,n.jsxs)(s.p,{children:["Se guardiamo a ",(0,n.jsx)(s.code,{children:"m0"}),", notiamo che la sua parte bassa \xe8 destinata a finire nella somma finale senza alcuna modifica, e dunque i sommatori sono, per quella parte, completamente superflui.\r\nLa stessa cosa accade per i bit pi\xf9 significativi, dove troviamo tanti zeri sommati tra di loro.\r\nPer vedere meglio come procedere, scomponiamo anche i sottoprodotti in parte alta e parte bassa, per esempio ",(0,n.jsx)(s.code,{children:"{m0h, m0l} = m0"}),"."]}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{children:"  0    0   m0h  m0l  +\r\n  0   m1h  m1l   0   + \r\n  0   m2h  m2l   0   + \r\n m3h  m3l   0    0   + \n"})}),"\n",(0,n.jsx)(s.p,{children:"Ecco quindi le ottimizzazioni che si possono eseguire:"}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.code,{children:"m0l"})," non viene sommato ad alcunch\xe9, dunque ",(0,n.jsx)(s.code,{children:"m[3:0] = m0l"})]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.code,{children:"m0h"})," pu\xf2 essere collegato all'input ",(0,n.jsx)(s.code,{children:"c"})," di ",(0,n.jsx)(s.code,{children:"ma1"})," o ",(0,n.jsx)(s.code,{children:"ma2"})]}),"\n",(0,n.jsxs)(s.li,{children:["sia ",(0,n.jsx)(s.code,{children:"s0"})," la somma ",(0,n.jsx)(s.code,{children:"m1 + m2 + m0h"}),", scomposto in ",(0,n.jsx)(s.code,{children:"{s0h, s0l} = s0"}),", e ",(0,n.jsx)(s.code,{children:"c0"})," il suo eventuale riporto uscente. Allora ",(0,n.jsx)(s.code,{children:"m[7:4] = s0l"}),", e ",(0,n.jsx)(s.code,{children:"s0h"})," pu\xf2 essere collegato all'input ",(0,n.jsx)(s.code,{children:"c"})," di ",(0,n.jsx)(s.code,{children:"ma3"}),"."]}),"\n",(0,n.jsxs)(s.li,{children:["sia ",(0,n.jsx)(s.code,{children:"s1"})," la somma ",(0,n.jsx)(s.code,{children:"m3 + s0h"}),", scomposto in ",(0,n.jsx)(s.code,{children:"{s1h, s1l} = s1"}),". Allora ",(0,n.jsx)(s.code,{children:"m[11:8] = s1l"}),", mentre ",(0,n.jsx)(s.code,{children:"m[15:12] = s1h + c0"}),"."]}),"\n"]}),"\n",(0,n.jsxs)(s.p,{children:["Per realizzare questo ci serve, oltre ai moltiplicatori, un sommatore a 8 bit per ",(0,n.jsx)(s.code,{children:"s0"}),", ed un incrementatore a 4 bit per ",(0,n.jsx)(s.code,{children:"s1h + c0"}),".\r\nLo schema che lo rappresenta \xe8 il seguente."]}),"\n",(0,n.jsx)("img",{src:(0,t.Ay)("2025-26/img/verilog/2/mul8-rc-2.drawio.png"),style:{maxWidth:"min(100%, 44rem)"},alt:"\r\nSchema del moltiplicatore a 8 bit ottimizzato.\r\nUtilizzando gli ingressi c e le scomposizioni, sono sufficienti un sommatore a 8 bit e un incrementatore a 4 bit.\r\nDifferenze con la prima soluzione: \r\n'm0l' \xe8 collegato direttamente all'uscita 'm[3:0]'; \r\n'm0h' \xe8 collegato all'ingresso 'c' di 'ma1'; \r\n'ma1' produce 'm1 + m0h';\r\nil sommatore a 8 bit 'a0' prende in ingresso 'm1 + m0h' e 'm2', produce 's0' e 'c0';\r\n's0l' \xe8 collegato direttamente all'uscita 'm[7:4]';\r\n's0h' \xe8 collegato all'ingresso 'c' di 'ma3';\r\n'ma3' produce 's1 = m3 + s0h';\r\n's1l' \xe8 collegato direttamente all'uscita 'm[11:8]';\r\nl'incrementatore a 4 bit 'a1' calcola 's1h + c0', il cui risultato \xe8 collegato direttamente all'uscita 'm[15:12]'.\r\n"}),"\n",(0,n.jsxs)(s.p,{children:["In Verilog, questo diventa quanto segue (scaricabile ",(0,n.jsx)(s.a,{target:"_blank","data-noBrokenLinkCheck":!0,href:i(6433).A+"",children:"qui"}),")."]}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-verilog",metastring:"showLineNumbers",children:"// x naturale su 8 bit\r\n// y naturale su 8 bit\r\n// m = x * y, su 16 bit\r\nmodule MUL8(x, y, m);\r\n    input [7:0] x;\r\n    input [7:0] y;\r\n    output [15:0] m;   \r\n\r\n    wire [3:0] xh, xl;\r\n    assign {xh, xl} = x;\r\n    wire [3:0] yh, yl;\r\n    assign {yh, yl} = y;\r\n    \r\n    wire [7:0] m0;\r\n    mul_add_nat ma0(\r\n        .x(xl), .y(yl), .c(4'b0000),\r\n        .m(m0)\r\n    );\r\n    wire [3:0] m0h, m0l;\r\n    assign {m0h, m0l} = m0;\r\n\r\n    wire [7:0] m1_m0h;\r\n    mul_add_nat ma1(\r\n        .x(xl), .y(yh), .c(m0h),\r\n        .m(m1_m0h)\r\n    );\r\n\r\n    wire [7:0] m2;\r\n    mul_add_nat ma2(\r\n        .x(xh), .y(yl), .c(4'b0000),\r\n        .m(m2)\r\n    );\r\n\r\n    wire [7:0] s0;\r\n    wire c0;\r\n    add #( .N(8) ) a0 (\r\n        .x(m2), .y(m1_m0h), .c_in(1'b0),\r\n        .s(s0), .c_out(c0)\r\n    );\r\n    wire [3:0] s0h, s0l;\r\n    assign {s0h, s0l} = s0;\r\n\r\n    wire [7:0] m3_s0h;\r\n    mul_add_nat ma3(\r\n        .x(xh), .y(yh), .c(s0h),\r\n        .m(m3_s0h)\r\n    );\r\n    wire [3:0] s1h, s1l;\r\n    assign {s1h, s1l} = m3_s0h;\r\n\r\n    wire [3:0] s1h_c0;\r\n    add #( .N(4) ) a1 (\r\n        .x(s1h), .y(4'b0), .c_in(c0),\r\n        .s(s1h_c0)\r\n    );\r\n\r\n    assign m = {s1h_c0, s1l, s0l, m0l};\r\n    \r\nendmodule\n"})})]})}function h(e={}){const{wrapper:s}={...(0,r.R)(),...e.components};return s?(0,n.jsx)(s,{...e,children:(0,n.jsx)(d,{...e})}):d(e)}},56326:(e,s,i)=>{i.d(s,{A:()=>a});const a=i.p+"assets/files/soluzione-rc-1-e2a754ad1fbea649dc60a4cadad91176.v"},6433:(e,s,i)=>{i.d(s,{A:()=>a});const a=i.p+"assets/files/soluzione-rc-2-80b9821409ca5105b8517d90cab01efa.v"},41018:(e,s,i)=>{i.d(s,{A:()=>a});const a=i.p+"assets/files/testbench-rc-58dd26f20c5ddc096e15bb7ed130ba4f.v"},55704:(e,s,i)=>{i.d(s,{A:()=>a});const a=i.p+"assets/files/testo-ausiliari-4c0e85e81255038c5f0d9b55c673bbab.zip"},7188:(e,s,i)=>{i.d(s,{A:()=>a});const a=i.p+"assets/files/testbench-rc-1-a5f8930fac477fc11b03edc1a11959d4.v"},82035:(e,s,i)=>{i.d(s,{A:()=>a});const a=i.p+"assets/files/testbench-rc-2-0455d7d5e35ab8ef98d415247f5a0fc1.v"},18572:(e,s,i)=>{i.d(s,{A:()=>a});const a=i.p+"assets/files/testo-ausiliari-4e573b8f16f65d877a508dd50816bdef.zip"},28453:(e,s,i)=>{i.d(s,{R:()=>t,x:()=>l});var a=i(96540);const n={},r=a.createContext(n);function t(e){const s=a.useContext(r);return a.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function l(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:t(e.components),a.createElement(r.Provider,{value:s},e.children)}}}]);