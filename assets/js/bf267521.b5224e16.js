"use strict";(self.webpackChunkreti_logiche_esercitazioni=self.webpackChunkreti_logiche_esercitazioni||[]).push([[6720],{87922:(e,i,n)=>{n.r(i),n.d(i,{assets:()=>m,contentTitle:()=>d,default:()=>x,frontMatter:()=>t,metadata:()=>s,toc:()=>h});const s=JSON.parse('{"id":"esercitazioni/Verilog/Esercitazioni/Esercitazione 4","title":"Esercitazione 4","description":"","source":"@site/versioned_docs/version-2025-26/esercitazioni/Verilog/Esercitazioni/4. Esercitazione 4.mdx","sourceDirName":"esercitazioni/Verilog/Esercitazioni","slug":"/esercitazioni/Verilog/Esercitazioni/Esercitazione 4","permalink":"/reti-logiche-esercitazioni/esercitazioni/Verilog/Esercitazioni/Esercitazione 4","draft":false,"unlisted":true,"tags":[],"version":"2025-26","sidebarPosition":4,"frontMatter":{"description":"","unlisted":true},"sidebar":"esercitazioniSidebar"}');var a=n(74848),r=n(28453),l=n(13554),o=n.n(l),c=n(86025);const t={description:"",unlisted:!0},d="Esercitazione 4",m={},h=[{value:"Esercizio 4.1: Descrizione",id:"esercizio-41-descrizione",level:2},{value:"Esercizio 4.1: Sintesi della rete combinatoria",id:"esercizio-41-sintesi-della-rete-combinatoria",level:2},{value:"Esercizio 4.1: Sintesi di rete sincronizzata",id:"esercizio-41-sintesi-di-rete-sincronizzata",level:2},{value:"Passo 0: ricopiare su un nuovo file",id:"passo-0-ricopiare-su-un-nuovo-file",level:3},{value:"Passo 1: rendere la descrizione omogenea",id:"passo-1-rendere-la-descrizione-omogenea",level:3},{value:"Passo 2: separazione dei blocchi operativi",id:"passo-2-separazione-dei-blocchi-operativi",level:3},{value:"Passo 3: variabili di comando",id:"passo-3-variabili-di-comando",level:3},{value:"Passo 4: variabili di condizionamento",id:"passo-4-variabili-di-condizionamento",level:3},{value:"Passo 5: separare le parti",id:"passo-5-separare-le-parti",level:3},{value:"Passo 6: la ROM",id:"passo-6-la-rom",level:3}];function p(e){const i={a:"a",admonition:"admonition",annotation:"annotation",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",math:"math",mi:"mi",mn:"mn",mo:"mo",mrow:"mrow",msub:"msub",p:"p",pre:"pre",semantics:"semantics",span:"span",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(i.header,{children:(0,a.jsx)(i.h1,{id:"esercitazione-4",children:"Esercitazione 4"})}),"\n",(0,a.jsxs)(i.p,{children:["In questa esercitazione vedremo un esercizio d'esame svolto interamente, sia come descrizione che come sintesi.\r\nIl testo dell'esercizio \xe8 scaricabile ",(0,a.jsx)(i.a,{href:"pathname:///2025-26/code/verilog/4/2021-01-08/2021-01-08.zip",children:"qui"}),"."]}),"\n",(0,a.jsx)(i.h2,{id:"esercizio-41-descrizione",children:"Esercizio 4.1: Descrizione"}),"\n",(0,a.jsxs)(i.p,{children:["La rete sincronizzata ",(0,a.jsx)(i.code,{children:"ABC"})," deve ottenere tre valori da altrettanti produttori, sostenendo tre handshake ",(0,a.jsx)(i.code,{children:"soc"}),"/",(0,a.jsx)(i.code,{children:"eoc"})," indipendenti.\r\nTipicamente, questo vuol dire che siamo liberi di eseguire i tre handshake in qualunque ordine, per esempio in serie.\r\nIn questo caso per\xf2, avendo una sola uscita ",(0,a.jsx)(i.code,{children:"soc"}),", siamo costretti a far proseguire i tre handshake secondo gli stessi passi."]}),"\n",(0,a.jsxs)(i.p,{children:["Se deriviamo il seguente algoritmo per ",(0,a.jsx)(i.code,{children:"ABC"}),":"]}),"\n",(0,a.jsxs)(i.ul,{children:["\n",(0,a.jsxs)(i.li,{children:["A riposo: ",(0,a.jsx)(i.code,{children:"soc"})," a 0, tutti gli ",(0,a.jsx)(i.code,{children:"eoc"})," a 1, i dati sono validi"]}),"\n",(0,a.jsxs)(i.li,{children:["Inizia ",(0,a.jsx)(i.code,{children:"ABC"})," mettendo ",(0,a.jsx)(i.code,{children:"soc"})," a 1"]}),"\n",(0,a.jsxs)(i.li,{children:["Attende la risposta ",(0,a.jsx)(i.code,{children:"eoc"})," a 0 ",(0,a.jsx)("u",{children:"da tutti"})," i produttori"]}),"\n",(0,a.jsxs)(i.li,{children:["Risponde con ",(0,a.jsx)(i.code,{children:"soc"})," a 0"]}),"\n",(0,a.jsxs)(i.li,{children:["Attende la conferma ",(0,a.jsx)(i.code,{children:"eoc"})," a 1 ",(0,a.jsx)("u",{children:"da tutti"})," i produttori"]}),"\n",(0,a.jsx)(i.li,{children:"A questo punto, i dati sono validi, e lo resteranno fino al prossimo ciclo"}),"\n"]}),"\n",(0,a.jsxs)(i.p,{children:["Alla fine di un tale handshake, possiamo svolgere il conto.\r\nLe specifiche fanno riferimento a trovare il minimo tra le ",(0,a.jsx)(i.em,{children:"tensioni"})," ",(0,a.jsxs)(i.span,{className:"katex",children:[(0,a.jsx)(i.span,{className:"katex-mathml",children:(0,a.jsx)(i.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,a.jsxs)(i.semantics,{children:[(0,a.jsx)(i.mrow,{children:(0,a.jsxs)(i.msub,{children:[(0,a.jsx)(i.mi,{children:"v"}),(0,a.jsx)(i.mn,{children:"1"})]})}),(0,a.jsx)(i.annotation,{encoding:"application/x-tex",children:"v_1"})]})})}),(0,a.jsx)(i.span,{className:"katex-html","aria-hidden":"true",children:(0,a.jsxs)(i.span,{className:"base",children:[(0,a.jsx)(i.span,{className:"strut",style:{height:"0.5806em",verticalAlign:"-0.15em"}}),(0,a.jsxs)(i.span,{className:"mord",children:[(0,a.jsx)(i.span,{className:"mord mathnormal",style:{marginRight:"0.03588em"},children:"v"}),(0,a.jsx)(i.span,{className:"msupsub",children:(0,a.jsxs)(i.span,{className:"vlist-t vlist-t2",children:[(0,a.jsxs)(i.span,{className:"vlist-r",children:[(0,a.jsx)(i.span,{className:"vlist",style:{height:"0.3011em"},children:(0,a.jsxs)(i.span,{style:{top:"-2.55em",marginLeft:"-0.0359em",marginRight:"0.05em"},children:[(0,a.jsx)(i.span,{className:"pstrut",style:{height:"2.7em"}}),(0,a.jsx)(i.span,{className:"sizing reset-size6 size3 mtight",children:(0,a.jsx)(i.span,{className:"mord mtight",children:"1"})})]})}),(0,a.jsx)(i.span,{className:"vlist-s",children:"\u200b"})]}),(0,a.jsx)(i.span,{className:"vlist-r",children:(0,a.jsx)(i.span,{className:"vlist",style:{height:"0.15em"},children:(0,a.jsx)(i.span,{})})})]})})]})]})})]}),", ",(0,a.jsxs)(i.span,{className:"katex",children:[(0,a.jsx)(i.span,{className:"katex-mathml",children:(0,a.jsx)(i.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,a.jsxs)(i.semantics,{children:[(0,a.jsx)(i.mrow,{children:(0,a.jsxs)(i.msub,{children:[(0,a.jsx)(i.mi,{children:"v"}),(0,a.jsx)(i.mn,{children:"2"})]})}),(0,a.jsx)(i.annotation,{encoding:"application/x-tex",children:"v_2"})]})})}),(0,a.jsx)(i.span,{className:"katex-html","aria-hidden":"true",children:(0,a.jsxs)(i.span,{className:"base",children:[(0,a.jsx)(i.span,{className:"strut",style:{height:"0.5806em",verticalAlign:"-0.15em"}}),(0,a.jsxs)(i.span,{className:"mord",children:[(0,a.jsx)(i.span,{className:"mord mathnormal",style:{marginRight:"0.03588em"},children:"v"}),(0,a.jsx)(i.span,{className:"msupsub",children:(0,a.jsxs)(i.span,{className:"vlist-t vlist-t2",children:[(0,a.jsxs)(i.span,{className:"vlist-r",children:[(0,a.jsx)(i.span,{className:"vlist",style:{height:"0.3011em"},children:(0,a.jsxs)(i.span,{style:{top:"-2.55em",marginLeft:"-0.0359em",marginRight:"0.05em"},children:[(0,a.jsx)(i.span,{className:"pstrut",style:{height:"2.7em"}}),(0,a.jsx)(i.span,{className:"sizing reset-size6 size3 mtight",children:(0,a.jsx)(i.span,{className:"mord mtight",children:"2"})})]})}),(0,a.jsx)(i.span,{className:"vlist-s",children:"\u200b"})]}),(0,a.jsx)(i.span,{className:"vlist-r",children:(0,a.jsx)(i.span,{className:"vlist",style:{height:"0.15em"},children:(0,a.jsx)(i.span,{})})})]})})]})]})})]})," e ",(0,a.jsxs)(i.span,{className:"katex",children:[(0,a.jsx)(i.span,{className:"katex-mathml",children:(0,a.jsx)(i.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,a.jsxs)(i.semantics,{children:[(0,a.jsx)(i.mrow,{children:(0,a.jsxs)(i.msub,{children:[(0,a.jsx)(i.mi,{children:"v"}),(0,a.jsx)(i.mn,{children:"3"})]})}),(0,a.jsx)(i.annotation,{encoding:"application/x-tex",children:"v_3"})]})})}),(0,a.jsx)(i.span,{className:"katex-html","aria-hidden":"true",children:(0,a.jsxs)(i.span,{className:"base",children:[(0,a.jsx)(i.span,{className:"strut",style:{height:"0.5806em",verticalAlign:"-0.15em"}}),(0,a.jsxs)(i.span,{className:"mord",children:[(0,a.jsx)(i.span,{className:"mord mathnormal",style:{marginRight:"0.03588em"},children:"v"}),(0,a.jsx)(i.span,{className:"msupsub",children:(0,a.jsxs)(i.span,{className:"vlist-t vlist-t2",children:[(0,a.jsxs)(i.span,{className:"vlist-r",children:[(0,a.jsx)(i.span,{className:"vlist",style:{height:"0.3011em"},children:(0,a.jsxs)(i.span,{style:{top:"-2.55em",marginLeft:"-0.0359em",marginRight:"0.05em"},children:[(0,a.jsx)(i.span,{className:"pstrut",style:{height:"2.7em"}}),(0,a.jsx)(i.span,{className:"sizing reset-size6 size3 mtight",children:(0,a.jsx)(i.span,{className:"mord mtight",children:"3"})})]})}),(0,a.jsx)(i.span,{className:"vlist-s",children:"\u200b"})]}),(0,a.jsx)(i.span,{className:"vlist-r",children:(0,a.jsx)(i.span,{className:"vlist",style:{height:"0.15em"},children:(0,a.jsx)(i.span,{})})})]})})]})]})})]}),", che sono, in generale, numeri reali, non rappresentabili in un numero finito di bit."]}),"\n",(0,a.jsxs)(i.p,{children:["Tramite i convertitori da analogico a digitale si utilizza per\xf2 una ",(0,a.jsx)(i.em,{children:"legge di corrispondenza"})," che associa, con un certo errore, a ogni valore reale ",(0,a.jsxs)(i.span,{className:"katex",children:[(0,a.jsx)(i.span,{className:"katex-mathml",children:(0,a.jsx)(i.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,a.jsxs)(i.semantics,{children:[(0,a.jsx)(i.mrow,{children:(0,a.jsx)(i.mi,{children:"v"})}),(0,a.jsx)(i.annotation,{encoding:"application/x-tex",children:"v"})]})})}),(0,a.jsx)(i.span,{className:"katex-html","aria-hidden":"true",children:(0,a.jsxs)(i.span,{className:"base",children:[(0,a.jsx)(i.span,{className:"strut",style:{height:"0.4306em"}}),(0,a.jsx)(i.span,{className:"mord mathnormal",style:{marginRight:"0.03588em"},children:"v"})]})})]})," un il valore ",(0,a.jsxs)(i.span,{className:"katex",children:[(0,a.jsx)(i.span,{className:"katex-mathml",children:(0,a.jsx)(i.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,a.jsxs)(i.semantics,{children:[(0,a.jsx)(i.mrow,{children:(0,a.jsx)(i.mi,{children:"x"})}),(0,a.jsx)(i.annotation,{encoding:"application/x-tex",children:"x"})]})})}),(0,a.jsx)(i.span,{className:"katex-html","aria-hidden":"true",children:(0,a.jsxs)(i.span,{className:"base",children:[(0,a.jsx)(i.span,{className:"strut",style:{height:"0.4306em"}}),(0,a.jsx)(i.span,{className:"mord mathnormal",children:"x"})]})})]})," rappresentabile su un numero finito di bit.\r\nIn questo caso, l'esercizio specifica che queste tensioni sono rappresentate in ",(0,a.jsx)(i.em,{children:"binario unipolare"}),": questo significa che i vari ",(0,a.jsxs)(i.span,{className:"katex",children:[(0,a.jsx)(i.span,{className:"katex-mathml",children:(0,a.jsx)(i.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,a.jsxs)(i.semantics,{children:[(0,a.jsx)(i.mrow,{children:(0,a.jsx)(i.mi,{children:"x"})}),(0,a.jsx)(i.annotation,{encoding:"application/x-tex",children:"x"})]})})}),(0,a.jsx)(i.span,{className:"katex-html","aria-hidden":"true",children:(0,a.jsxs)(i.span,{className:"base",children:[(0,a.jsx)(i.span,{className:"strut",style:{height:"0.4306em"}}),(0,a.jsx)(i.span,{className:"mord mathnormal",children:"x"})]})})]})," sono numeri naturali.\r\nQuesta associazione preserva gli ordinamenti: a ",(0,a.jsxs)(i.span,{className:"katex",children:[(0,a.jsx)(i.span,{className:"katex-mathml",children:(0,a.jsx)(i.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,a.jsxs)(i.semantics,{children:[(0,a.jsxs)(i.mrow,{children:[(0,a.jsxs)(i.msub,{children:[(0,a.jsx)(i.mi,{children:"x"}),(0,a.jsx)(i.mn,{children:"1"})]}),(0,a.jsx)(i.mo,{children:"\u2264"}),(0,a.jsxs)(i.msub,{children:[(0,a.jsx)(i.mi,{children:"x"}),(0,a.jsx)(i.mn,{children:"2"})]})]}),(0,a.jsx)(i.annotation,{encoding:"application/x-tex",children:"x_1 \\le x_2"})]})})}),(0,a.jsxs)(i.span,{className:"katex-html","aria-hidden":"true",children:[(0,a.jsxs)(i.span,{className:"base",children:[(0,a.jsx)(i.span,{className:"strut",style:{height:"0.786em",verticalAlign:"-0.15em"}}),(0,a.jsxs)(i.span,{className:"mord",children:[(0,a.jsx)(i.span,{className:"mord mathnormal",children:"x"}),(0,a.jsx)(i.span,{className:"msupsub",children:(0,a.jsxs)(i.span,{className:"vlist-t vlist-t2",children:[(0,a.jsxs)(i.span,{className:"vlist-r",children:[(0,a.jsx)(i.span,{className:"vlist",style:{height:"0.3011em"},children:(0,a.jsxs)(i.span,{style:{top:"-2.55em",marginLeft:"0em",marginRight:"0.05em"},children:[(0,a.jsx)(i.span,{className:"pstrut",style:{height:"2.7em"}}),(0,a.jsx)(i.span,{className:"sizing reset-size6 size3 mtight",children:(0,a.jsx)(i.span,{className:"mord mtight",children:"1"})})]})}),(0,a.jsx)(i.span,{className:"vlist-s",children:"\u200b"})]}),(0,a.jsx)(i.span,{className:"vlist-r",children:(0,a.jsx)(i.span,{className:"vlist",style:{height:"0.15em"},children:(0,a.jsx)(i.span,{})})})]})})]}),(0,a.jsx)(i.span,{className:"mspace",style:{marginRight:"0.2778em"}}),(0,a.jsx)(i.span,{className:"mrel",children:"\u2264"}),(0,a.jsx)(i.span,{className:"mspace",style:{marginRight:"0.2778em"}})]}),(0,a.jsxs)(i.span,{className:"base",children:[(0,a.jsx)(i.span,{className:"strut",style:{height:"0.5806em",verticalAlign:"-0.15em"}}),(0,a.jsxs)(i.span,{className:"mord",children:[(0,a.jsx)(i.span,{className:"mord mathnormal",children:"x"}),(0,a.jsx)(i.span,{className:"msupsub",children:(0,a.jsxs)(i.span,{className:"vlist-t vlist-t2",children:[(0,a.jsxs)(i.span,{className:"vlist-r",children:[(0,a.jsx)(i.span,{className:"vlist",style:{height:"0.3011em"},children:(0,a.jsxs)(i.span,{style:{top:"-2.55em",marginLeft:"0em",marginRight:"0.05em"},children:[(0,a.jsx)(i.span,{className:"pstrut",style:{height:"2.7em"}}),(0,a.jsx)(i.span,{className:"sizing reset-size6 size3 mtight",children:(0,a.jsx)(i.span,{className:"mord mtight",children:"2"})})]})}),(0,a.jsx)(i.span,{className:"vlist-s",children:"\u200b"})]}),(0,a.jsx)(i.span,{className:"vlist-r",children:(0,a.jsx)(i.span,{className:"vlist",style:{height:"0.15em"},children:(0,a.jsx)(i.span,{})})})]})})]})]})]})]})," corrisponde ",(0,a.jsxs)(i.span,{className:"katex",children:[(0,a.jsx)(i.span,{className:"katex-mathml",children:(0,a.jsx)(i.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,a.jsxs)(i.semantics,{children:[(0,a.jsxs)(i.mrow,{children:[(0,a.jsxs)(i.msub,{children:[(0,a.jsx)(i.mi,{children:"v"}),(0,a.jsx)(i.mn,{children:"1"})]}),(0,a.jsx)(i.mo,{children:"\u2264"}),(0,a.jsxs)(i.msub,{children:[(0,a.jsx)(i.mi,{children:"v"}),(0,a.jsx)(i.mn,{children:"2"})]})]}),(0,a.jsx)(i.annotation,{encoding:"application/x-tex",children:"v_1 \\le v_2"})]})})}),(0,a.jsxs)(i.span,{className:"katex-html","aria-hidden":"true",children:[(0,a.jsxs)(i.span,{className:"base",children:[(0,a.jsx)(i.span,{className:"strut",style:{height:"0.786em",verticalAlign:"-0.15em"}}),(0,a.jsxs)(i.span,{className:"mord",children:[(0,a.jsx)(i.span,{className:"mord mathnormal",style:{marginRight:"0.03588em"},children:"v"}),(0,a.jsx)(i.span,{className:"msupsub",children:(0,a.jsxs)(i.span,{className:"vlist-t vlist-t2",children:[(0,a.jsxs)(i.span,{className:"vlist-r",children:[(0,a.jsx)(i.span,{className:"vlist",style:{height:"0.3011em"},children:(0,a.jsxs)(i.span,{style:{top:"-2.55em",marginLeft:"-0.0359em",marginRight:"0.05em"},children:[(0,a.jsx)(i.span,{className:"pstrut",style:{height:"2.7em"}}),(0,a.jsx)(i.span,{className:"sizing reset-size6 size3 mtight",children:(0,a.jsx)(i.span,{className:"mord mtight",children:"1"})})]})}),(0,a.jsx)(i.span,{className:"vlist-s",children:"\u200b"})]}),(0,a.jsx)(i.span,{className:"vlist-r",children:(0,a.jsx)(i.span,{className:"vlist",style:{height:"0.15em"},children:(0,a.jsx)(i.span,{})})})]})})]}),(0,a.jsx)(i.span,{className:"mspace",style:{marginRight:"0.2778em"}}),(0,a.jsx)(i.span,{className:"mrel",children:"\u2264"}),(0,a.jsx)(i.span,{className:"mspace",style:{marginRight:"0.2778em"}})]}),(0,a.jsxs)(i.span,{className:"base",children:[(0,a.jsx)(i.span,{className:"strut",style:{height:"0.5806em",verticalAlign:"-0.15em"}}),(0,a.jsxs)(i.span,{className:"mord",children:[(0,a.jsx)(i.span,{className:"mord mathnormal",style:{marginRight:"0.03588em"},children:"v"}),(0,a.jsx)(i.span,{className:"msupsub",children:(0,a.jsxs)(i.span,{className:"vlist-t vlist-t2",children:[(0,a.jsxs)(i.span,{className:"vlist-r",children:[(0,a.jsx)(i.span,{className:"vlist",style:{height:"0.3011em"},children:(0,a.jsxs)(i.span,{style:{top:"-2.55em",marginLeft:"-0.0359em",marginRight:"0.05em"},children:[(0,a.jsx)(i.span,{className:"pstrut",style:{height:"2.7em"}}),(0,a.jsx)(i.span,{className:"sizing reset-size6 size3 mtight",children:(0,a.jsx)(i.span,{className:"mord mtight",children:"2"})})]})}),(0,a.jsx)(i.span,{className:"vlist-s",children:"\u200b"})]}),(0,a.jsx)(i.span,{className:"vlist-r",children:(0,a.jsx)(i.span,{className:"vlist",style:{height:"0.15em"},children:(0,a.jsx)(i.span,{})})})]})})]})]})]})]}),".\r\nPossiamo quindi tradurre il problema di minimo tra tensioni ",(0,a.jsxs)(i.span,{className:"katex",children:[(0,a.jsx)(i.span,{className:"katex-mathml",children:(0,a.jsx)(i.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,a.jsxs)(i.semantics,{children:[(0,a.jsx)(i.mrow,{children:(0,a.jsx)(i.mi,{children:"v"})}),(0,a.jsx)(i.annotation,{encoding:"application/x-tex",children:"v"})]})})}),(0,a.jsx)(i.span,{className:"katex-html","aria-hidden":"true",children:(0,a.jsxs)(i.span,{className:"base",children:[(0,a.jsx)(i.span,{className:"strut",style:{height:"0.4306em"}}),(0,a.jsx)(i.span,{className:"mord mathnormal",style:{marginRight:"0.03588em"},children:"v"})]})})]})," in un problema di minimo tra naturali ",(0,a.jsxs)(i.span,{className:"katex",children:[(0,a.jsx)(i.span,{className:"katex-mathml",children:(0,a.jsx)(i.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,a.jsxs)(i.semantics,{children:[(0,a.jsx)(i.mrow,{children:(0,a.jsx)(i.mi,{children:"x"})}),(0,a.jsx)(i.annotation,{encoding:"application/x-tex",children:"x"})]})})}),(0,a.jsx)(i.span,{className:"katex-html","aria-hidden":"true",children:(0,a.jsxs)(i.span,{className:"base",children:[(0,a.jsx)(i.span,{className:"strut",style:{height:"0.4306em"}}),(0,a.jsx)(i.span,{className:"mord mathnormal",children:"x"})]})})]}),"."]}),"\n",(0,a.jsxs)(i.p,{children:["Il risultato dovr\xe0 poi essere trasferito al consumatore usando un handshake ",(0,a.jsx)(i.code,{children:"dav_"}),"/",(0,a.jsx)(i.code,{children:"rfd"}),".\r\nPer far questo, deriviamo il seguente algoritmo per ",(0,a.jsx)(i.code,{children:"ABC"}),":"]}),"\n",(0,a.jsxs)(i.ul,{children:["\n",(0,a.jsxs)(i.li,{children:["A riposo: ",(0,a.jsx)(i.code,{children:"dav_"})," a 1, ",(0,a.jsx)(i.code,{children:"rfd"})," a 1"]}),"\n",(0,a.jsxs)(i.li,{children:["All'ottenimento di un nuovo dato da trasferire, si imposta l'uscita ",(0,a.jsx)(i.code,{children:"min"})," a tale dato ",(0,a.jsx)("u",{children:"e solo poi"})," si mette ",(0,a.jsx)(i.code,{children:"dav_"})," a 0 per segnalarlo. L'uscita ",(0,a.jsx)(i.code,{children:"min"})," non pu\xf2 oscillare o cambiare"]}),"\n",(0,a.jsxs)(i.li,{children:["Si attende la risposta ",(0,a.jsx)(i.code,{children:"rfd"})," a 0"]}),"\n",(0,a.jsxs)(i.li,{children:["Si mette ",(0,a.jsx)(i.code,{children:"dav_"})," a 1, ora l'uscita ",(0,a.jsx)(i.code,{children:"min"})," \xe8 di nuovo libera di oscillare o cambiare"]}),"\n",(0,a.jsxs)(i.li,{children:["Si aspetta la risposta con ",(0,a.jsx)(i.code,{children:"rfd"})," a 1"]}),"\n"]}),"\n",(0,a.jsxs)(i.p,{children:["Possiamo quindi scrivere la seguente descrizione in Verilog, scaricabile ",(0,a.jsx)(i.a,{href:"pathname:///2025-26/code/verilog/4/2021-01-08/descrizione.v",children:"qui"}),"."]}),"\n",(0,a.jsx)(i.pre,{children:(0,a.jsx)(i.code,{className:"language-verilog",metastring:"showLineNumbers",children:"module ABC(\r\n    x1, x2, x3,\r\n    eoc1, eoc2, eoc3,\r\n    soc,\r\n    min, dav_, rfd,\r\n    clock, reset_\r\n);\r\n    input [7:0] x1, x2, x3;\r\n    input eoc1, eoc2, eoc3;\r\n    output soc;\r\n    output [7:0]min;\r\n    output dav_;\r\n    input rfd;\r\n    input clock, reset_;\r\n\r\n    reg SOC;\r\n    assign soc = SOC;\r\n    reg [7:0] MIN;\r\n    assign min = MIN;\r\n    reg DAV_;\r\n    assign dav_ = DAV_;\r\n\r\n    reg [1:0] STAR;\r\n    localparam \r\n        S0 = 0,\r\n        S1 = 1,\r\n        S2 = 2,\r\n        S3 = 3;\r\n\r\n    wire [7:0] out_rc;\r\n    MINIMO_3 min_rc(\r\n        .a(x1), .b(x2), .c(x3),\r\n        .min(out_rc)\r\n    );\r\n\r\n    always @(reset_ == 0) #1 begin\r\n        SOC <= 0;\r\n        DAV_ <= 1;\r\n        STAR <= 0;\r\n    end\r\n\r\n    always @(posedge clock) if(reset_ == 1) #3 begin\r\n        casex (STAR)\r\n            S0: begin\r\n                SOC <= 1;\r\n                STAR <= ({eoc1, eoc2, eoc3} == 3'b000) ? S1 : S0;\r\n            end\r\n\r\n            S1: begin\r\n                SOC <= 0;\r\n                MIN <= out_rc;\r\n                STAR <= ({eoc1, eoc2, eoc3} == 3'b111) ? S2 : S1;\r\n            end\r\n\r\n            S2: begin\r\n                DAV_ <= 0;\r\n                STAR <= (rfd == 1) ? S2 : S3;\r\n            end\r\n\r\n            S3: begin\r\n                DAV_ <= 1;\r\n                STAR <= (rfd == 0) ? S3 : S0;\r\n            end\r\n\r\n        endcase\r\n    end\r\n\r\nendmodule\r\n\r\nmodule MINIMO_3(\r\n    a, b, c,\r\n    min\r\n);\r\n    input [7:0] a, b, c;\r\n    output [7:0] min;\r\n\r\n    assign #2 min = (a >= b) ? ((b >= c) ? c : b )\r\n                             : ((a >= c) ? c : a );\r\n\r\nendmodule\n"})}),"\n",(0,a.jsxs)(i.admonition,{title:"La descrizione della rete combinatoria \xe8 opzionale",type:"info",children:[(0,a.jsx)(i.p,{children:"Gli esercizi d'esame chiedono descrizione e sintesi per la rete sincronizzata,\r\nma solo la sintesi per la rete combinatoria.\r\n\xc8 quindi del tutto opzionale mostrare una descrizione di quest'ultima."}),(0,a.jsxs)(i.p,{children:["\xc8 spesso per\xf2 utile scrivere prima una descrizione, soprattutto se facilmente interpretabile.\r\nCos\xec facendo, in caso di errori nei test, sappiamo di dover debuggare ",(0,a.jsx)(i.em,{children:"solo"})," la descrizione della rete sincronizzata."]})]}),"\n",(0,a.jsx)(i.h2,{id:"esercizio-41-sintesi-della-rete-combinatoria",children:"Esercizio 4.1: Sintesi della rete combinatoria"}),"\n",(0,a.jsxs)(i.p,{children:["La rete da sintetizzare calcola il minimo di tre numeri naturali.\r\nCominciamo osservando che il minimo di tre numeri \xe8 un problema che si pu\xf2 scomporre per associativit\xe0: ",(0,a.jsxs)(i.span,{className:"katex",children:[(0,a.jsx)(i.span,{className:"katex-mathml",children:(0,a.jsx)(i.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,a.jsxs)(i.semantics,{children:[(0,a.jsxs)(i.mrow,{children:[(0,a.jsx)(i.mi,{children:"min"}),(0,a.jsx)(i.mo,{children:"\u2061"}),(0,a.jsx)(i.mo,{stretchy:"false",children:"("}),(0,a.jsx)(i.mi,{children:"a"}),(0,a.jsx)(i.mo,{separator:"true",children:","}),(0,a.jsx)(i.mi,{children:"b"}),(0,a.jsx)(i.mo,{separator:"true",children:","}),(0,a.jsx)(i.mi,{children:"c"}),(0,a.jsx)(i.mo,{stretchy:"false",children:")"}),(0,a.jsx)(i.mo,{children:"="}),(0,a.jsx)(i.mi,{children:"min"}),(0,a.jsx)(i.mo,{children:"\u2061"}),(0,a.jsx)(i.mo,{stretchy:"false",children:"("}),(0,a.jsx)(i.mi,{children:"min"}),(0,a.jsx)(i.mo,{children:"\u2061"}),(0,a.jsx)(i.mo,{stretchy:"false",children:"("}),(0,a.jsx)(i.mi,{children:"a"}),(0,a.jsx)(i.mo,{separator:"true",children:","}),(0,a.jsx)(i.mi,{children:"b"}),(0,a.jsx)(i.mo,{stretchy:"false",children:")"}),(0,a.jsx)(i.mo,{separator:"true",children:","}),(0,a.jsx)(i.mi,{children:"c"}),(0,a.jsx)(i.mo,{stretchy:"false",children:")"})]}),(0,a.jsx)(i.annotation,{encoding:"application/x-tex",children:"\\min(a, b, c) = \\min( \\min(a, b), c )"})]})})}),(0,a.jsxs)(i.span,{className:"katex-html","aria-hidden":"true",children:[(0,a.jsxs)(i.span,{className:"base",children:[(0,a.jsx)(i.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,a.jsx)(i.span,{className:"mop",children:"min"}),(0,a.jsx)(i.span,{className:"mopen",children:"("}),(0,a.jsx)(i.span,{className:"mord mathnormal",children:"a"}),(0,a.jsx)(i.span,{className:"mpunct",children:","}),(0,a.jsx)(i.span,{className:"mspace",style:{marginRight:"0.1667em"}}),(0,a.jsx)(i.span,{className:"mord mathnormal",children:"b"}),(0,a.jsx)(i.span,{className:"mpunct",children:","}),(0,a.jsx)(i.span,{className:"mspace",style:{marginRight:"0.1667em"}}),(0,a.jsx)(i.span,{className:"mord mathnormal",children:"c"}),(0,a.jsx)(i.span,{className:"mclose",children:")"}),(0,a.jsx)(i.span,{className:"mspace",style:{marginRight:"0.2778em"}}),(0,a.jsx)(i.span,{className:"mrel",children:"="}),(0,a.jsx)(i.span,{className:"mspace",style:{marginRight:"0.2778em"}})]}),(0,a.jsxs)(i.span,{className:"base",children:[(0,a.jsx)(i.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,a.jsx)(i.span,{className:"mop",children:"min"}),(0,a.jsx)(i.span,{className:"mopen",children:"("}),(0,a.jsx)(i.span,{className:"mop",children:"min"}),(0,a.jsx)(i.span,{className:"mopen",children:"("}),(0,a.jsx)(i.span,{className:"mord mathnormal",children:"a"}),(0,a.jsx)(i.span,{className:"mpunct",children:","}),(0,a.jsx)(i.span,{className:"mspace",style:{marginRight:"0.1667em"}}),(0,a.jsx)(i.span,{className:"mord mathnormal",children:"b"}),(0,a.jsx)(i.span,{className:"mclose",children:")"}),(0,a.jsx)(i.span,{className:"mpunct",children:","}),(0,a.jsx)(i.span,{className:"mspace",style:{marginRight:"0.1667em"}}),(0,a.jsx)(i.span,{className:"mord mathnormal",children:"c"}),(0,a.jsx)(i.span,{className:"mclose",children:")"})]})]})]}),".\r\nQuesto vuol dire che posso costruire una reti combinatoria per il minimo di tre numeri combinando solo reti per il minimo di due numeri.\r\nLo stesso principio si generalizza per il minimo di ",(0,a.jsxs)(i.span,{className:"katex",children:[(0,a.jsx)(i.span,{className:"katex-mathml",children:(0,a.jsx)(i.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,a.jsxs)(i.semantics,{children:[(0,a.jsx)(i.mrow,{children:(0,a.jsx)(i.mi,{children:"n"})}),(0,a.jsx)(i.annotation,{encoding:"application/x-tex",children:"n"})]})})}),(0,a.jsx)(i.span,{className:"katex-html","aria-hidden":"true",children:(0,a.jsxs)(i.span,{className:"base",children:[(0,a.jsx)(i.span,{className:"strut",style:{height:"0.4306em"}}),(0,a.jsx)(i.span,{className:"mord mathnormal",children:"n"})]})})]})," numeri."]}),"\n",(0,a.jsx)(i.p,{children:"Nell'esercizio 2.1 abbiamo visto come costruire una rete combinatoria per il massimo tra due numeri, utilizzando un comparatore.\r\nModificare tale rete per produrre il minimo anzich\xe9 il massimo \xe8 semplice, basta cambiare il multiplexer in fondo.\r\nDato che questo esercizio ci fornisce un sottrattore, possiamo usarlo direttamente anzich\xe9 costruirlo come nell'esercizio 2.1"}),"\n",(0,a.jsx)(i.pre,{children:(0,a.jsx)(i.code,{className:"language-verilog",metastring:"showLineNumbers",children:"module MINIMO_2(\r\n    a, b,\r\n    min\r\n);\r\n    input [7:0] a, b;\r\n    output [7:0] min;\r\n\r\n    wire b_out;\r\n    diff #( .N(8) ) d(\r\n        .x(a), .y(b), .b_in(1'b0),\r\n        .b_out(b_out)\r\n    );\r\n\r\n    assign #1 min = b_out ? a : b;\r\nendmodule\n"})}),"\n",(0,a.jsxs)(i.p,{children:["Essendo questa una sintesi di ",(0,a.jsx)(i.code,{children:"MINIMO_2"}),", possiamo usare questo componente per la sintesi di ",(0,a.jsx)(i.code,{children:"MINIMO_3"}),"."]}),"\n",(0,a.jsx)(i.pre,{children:(0,a.jsx)(i.code,{className:"language-verilog",metastring:"showLineNumbers",children:"module MINIMO_3(\r\n    a, b, c,\r\n    min\r\n);\r\n    input [7:0] a, b, c;\r\n    output [7:0] min;\r\n\r\n    // min_3(a, b, c) = min_2( min_2(a, b), c );\r\n\r\n    wire [7:0] m_ab_out;\r\n    MINIMO_2 m_ab(\r\n        .a(a), .b(b),\r\n        .min(m_ab_out)\r\n    );\r\n\r\n    MINIMO_2 m_abc(\r\n        .a(m_ab_out), .b(c),\r\n        .min(min)\r\n    );\r\nendmodule\n"})}),"\n",(0,a.jsx)(i.h2,{id:"esercizio-41-sintesi-di-rete-sincronizzata",children:"Esercizio 4.1: Sintesi di rete sincronizzata"}),"\n",(0,a.jsxs)(i.p,{children:["La ",(0,a.jsx)(i.em,{children:"descrizione"})," di una rete sincronizzata \xe8 molto utile a capire come si evolve nel tempo:\r\nmette in evidenza lo stato interno (registro STAR), i suoi registri operativi, e come questi cambiano nel tempo in base sia al loro contenuto sia agli ingressi della rete."]}),"\n",(0,a.jsx)(i.p,{children:"Quest'uso del Verilog \xe8 affine a un diagramma di stato della stessa rete: \xe8 certamente pi\xf9 prolisso (per rendere il codice non ambiguo e simulabile) ma \xe8 comunque facile seguire l'evoluzione della rete usando una descrizione Verilog allo stesso modo in cui si fa lo stesso con un diagramma di stato."}),"\n",(0,a.jsxs)(i.p,{children:["Una ",(0,a.jsx)(i.em,{children:"sintesi"}),", invece, si occupa di dirci come realizzare tale rete.\r\nIn teoria, per le descrizioni che scriviamo servirebbero solitamente pochi accorgimenti perch\xe9 siano direttamente realizzabili in hardware.\r\nIn pratica, per\xf2, questo porterebbe a un uso particolarmente costoso e inefficiente di silicio.\r\nSeguiamo quindi un ",(0,a.jsx)(i.em,{children:"algoritmo euristico"})," che ci porta ad hardware molto pi\xf9 efficiente, ragionevolmente vicino a qualcosa che ha senso realizzare."]}),"\n",(0,a.jsx)(i.admonition,{title:"Non esiste l'ottimo",type:"info",children:(0,a.jsx)(i.p,{children:"I ragionamenti fatti in questo corso sull'ottimalit\xe0 delle sintesi portano solo laddove ci pu\xf2 portare la matematica.\r\nPer andare oltre, bisogna entrare nei dettagli pratici, e affrontare trade-off tra processi di produzione, costi in termini di superfice, consumi energetici, esposizione a rischi di progettazione, etc.\r\nLa progettazione di circuiti integrati \xe8 un tema di ingegneria a s\xe9."})}),"\n",(0,a.jsx)(i.admonition,{title:"Corrispondenza tra sintesi e descrizione",type:"danger",children:(0,a.jsxs)(i.p,{children:["Una sintesi ",(0,a.jsx)("u",{children:"corrisponde"})," a una descrizione:\r\nmostra pi\xf9 in dettaglio come realizzare in hardware una rete che si comporta, esternamente, ",(0,a.jsx)(i.em,{children:"allo stesso modo"})," della descrizione.\r\nUna sintesi che si comporti in modo diverso dalla descrizione ",(0,a.jsx)("u",{children:"non ha alcun senso"}),"."]})}),"\n",(0,a.jsxs)(i.p,{children:["Il modello di sintesi che ci aspettiamo negli esercizi d'esame \xe8 il modello con ",(0,a.jsx)(i.strong,{children:"parte operativa"})," e ",(0,a.jsx)(i.strong,{children:"parte controllo"}),", dove la parte controllo \xe8 implementata secondo il modello ",(0,a.jsx)(i.strong,{children:"a microindirizzi"}),"."]}),"\n",(0,a.jsx)(i.p,{children:"Riassumendo, questo significa che:"}),"\n",(0,a.jsxs)(i.ul,{children:["\n",(0,a.jsxs)(i.li,{children:["la rete \xe8 divisa in una ",(0,a.jsx)(i.em,{children:"parte operativa"}),", che contiene solo i registri operativi e le relative reti combinatorie, e una ",(0,a.jsx)(i.em,{children:"parte controllo"}),", che contiene il solo registro di stato ",(0,a.jsx)(i.code,{children:"STAR"})]}),"\n",(0,a.jsxs)(i.li,{children:["La parte operativa riceve ",(0,a.jsx)(i.em,{children:"variabili di comando"})," dalla parte controllo, che determinano i comportamenti dei registri operativi"]}),"\n",(0,a.jsxs)(i.li,{children:["La parte controllo riceve ",(0,a.jsx)(i.em,{children:"variabili di condizionamento"})," dalla parte operativa, che determinano i salti a due vie della parte controllo"]}),"\n"]}),"\n","\n",(0,a.jsx)(i.p,{children:"Vedremo come seguire l'algoritmo passo passo per ottenere questa sintesi a partire dalla descrizione scritta prima."}),"\n",(0,a.jsx)(i.p,{children:"Da una parte, ci\xf2 che si valuta all'esame \xe8 solo quanto viene prodotto, mentre il processo seguito per scrivere codice \xe8 libera scelta dello studente.\r\nDall'altra, visto che il tempo \xe8 necessariamente limitato, avere un processo efficiente permette di esprimere meglio le proprie competenze in tale tempo."}),"\n",(0,a.jsxs)(i.p,{children:["Per questo, vedremo un processo efficiente per fare la sintesi sfruttando l'editor VS Code.\r\nQuesto sfrutta le scorciatoie dell'editor e l'editing multicaret.\r\nInoltre, avremo vari ",(0,a.jsx)(i.em,{children:"chekpoint"}),", indicati con \ud83d\udea9, dove il codice intermedio \xe8 compilabile e simulabile, permettendo di controllare di avere ancora lo stesso comportamento della descrizione."]}),"\n",(0,a.jsx)(i.h3,{id:"passo-0-ricopiare-su-un-nuovo-file",children:"Passo 0: ricopiare su un nuovo file"}),"\n",(0,a.jsxs)(i.p,{children:["Ricopiamo il nostro file di descrizione, sia ",(0,a.jsx)(i.code,{children:"descrizione.v"}),", su un nuovo file per la sintesi, sia ",(0,a.jsx)(i.code,{children:"sintesi.v"}),'.\r\nNel resto delle istruzioni, assumeremo quindi la descrizione "congelata" e modificheremo il file ',(0,a.jsx)(i.code,{children:"sintesi.v"}),"."]}),"\n",(0,a.jsx)(i.h3,{id:"passo-1-rendere-la-descrizione-omogenea",children:"Passo 1: rendere la descrizione omogenea"}),"\n",(0,a.jsx)(i.p,{children:"Questo processo sfrutta pattern nel codice per eseguire tutte le manipolazioni della descrizione in modo efficiente.\r\nIl primo \xe8 quindi regolarizzare la descrizione secondo tali pattern."}),"\n",(0,a.jsxs)(i.p,{children:["Per questo, puntiamo a un blocco ",(0,a.jsx)(i.code,{children:"always @(posedge clock)"})," dove:"]}),"\n",(0,a.jsxs)(i.ul,{children:["\n",(0,a.jsxs)(i.li,{children:["Ogni stato contiene esplicitamente il comportamento di ciascun registro, anche se questo \xe8 ",(0,a.jsx)(i.em,{children:"conservare"}),"."]}),"\n",(0,a.jsxs)(i.li,{children:["L'assegnamento di ciascun registro \xe8 su una riga ",(0,a.jsx)(i.em,{children:"diversa"}),"."]}),"\n",(0,a.jsx)(i.li,{children:"Le righe corrispondenti ai vari registri appaiono nello stesso ordine in tutti gli stati."}),"\n",(0,a.jsxs)(i.li,{children:["Tutti gli stati e assegmenti seguono la stessa spaziatura: o tutti ",(0,a.jsx)(i.code,{children:"REG<="})," o tutti ",(0,a.jsx)(i.code,{children:"REG\u2423<="}),"; o tutti ",(0,a.jsx)(i.code,{children:"SX: begin\u23ce"})," o tutti ",(0,a.jsx)(i.code,{children:"SX:\u23cebegin"}),"; ",(0,a.jsx)(i.code,{children:"end"})," su una riga a s\xe9."]}),"\n"]}),"\n",(0,a.jsx)(i.p,{children:"Per il terzo punto, qualunque ordine va bene, purch\xe9 sia coerente.\r\nOtteniamo quindi il seguente codice \ud83d\udea9."}),"\n",(0,a.jsx)(i.pre,{children:(0,a.jsx)(i.code,{className:"language-verilog",children:"    always @(posedge clock) if(reset_ == 1) #3 begin\r\n        casex (STAR)\r\n            S0: begin\r\n                SOC <= 1;\r\n                DAV_ <= DAV_;\r\n                MIN <= MIN;\r\n                STAR <= ({eoc1, eoc2, eoc3} == 3'b000) ? S1 : S0;\r\n            end\r\n            S1: begin\r\n                SOC <= 0;\r\n                DAV_ <= DAV_;\r\n                MIN <= out_rc;\r\n                STAR <= ({eoc1, eoc2, eoc3} == 3'b111) ? S2 : S1;\r\n            end\r\n            S2: begin\r\n                SOC <= SOC;\r\n                DAV_ <= 0;\r\n                MIN <= MIN;\r\n                STAR <= (rfd == 1) ? S2 : S3;\r\n            end\r\n            S3: begin\r\n                SOC <= SOC;\r\n                DAV_ <= 1;\r\n                MIN <= MIN;\r\n                STAR <= (rfd == 0) ? S3 : S0;\r\n            end\r\n        endcase\r\n    end\n"})}),"\n",(0,a.jsxs)(i.admonition,{title:"Corrispondenza tra sintesi e descrizione",type:"danger",children:[(0,a.jsxs)(i.p,{children:["Se il comportamento di un registro in un dato stato \xe8 assente nella descrizione, questo \xe8 implicitamente ",(0,a.jsx)(i.em,{children:"conservazione"}),", e cos\xec deve apparire nella sintesi."]}),(0,a.jsxs)(i.p,{children:["Quando si vuole utilizzare un comportamento esplicito per ottimizzazioni, questo va fatto ",(0,a.jsx)("u",{children:"a partire dalla descrizione"}),"."]})]}),"\n",(0,a.jsx)(i.h3,{id:"passo-2-separazione-dei-blocchi-operativi",children:"Passo 2: separazione dei blocchi operativi"}),"\n",(0,a.jsxs)(i.p,{children:["Separiamo ora i blocchi operativi dei registri - incluso ",(0,a.jsx)(i.code,{children:"STAR"}),".\r\nPer farlo, cominciamo con ricopiare il blocco ",(0,a.jsx)(i.code,{children:"always @(posedge clock)"})," tante volte quanti sono i registri.\r\nCiascuna di queste copie verr\xe0 poi modificata per lasciare ",(0,a.jsx)(i.em,{children:"solo"})," gli assegnamenti di uno specifico registro, usando l'editing multicaret."]}),"\n",(0,a.jsxs)(i.p,{children:["Vediamo per esempio come ottenere il blocco operativo del registro ",(0,a.jsx)(i.code,{children:"SOC"}),".\r\nSelezioniamo la prima occorrenza di ",(0,a.jsx)(i.code,{children:"SOC <="}),", e premiamo ",(0,a.jsx)(i.code,{children:"ctrl + d"})," tre volte per selezionare tutti gli statement di assegnamento a ",(0,a.jsx)(i.code,{children:"SOC <="}),".\r\nQueste sono ciascuna la prima riga del proprio stato, e vogliamo che diventino ",(0,a.jsx)(i.em,{children:"l'unica"})," riga del proprio stato.\r\nPossiamo farlo cancellando le 4 righe sotto, usando i tasti ",(0,a.jsx)(i.code,{children:"home"})," e ",(0,a.jsx)(i.code,{children:"end"})," per muoversi tra righe di dimensioni diverse.\r\nUna volta rimasto un solo assegnemento, possiamo rimuovere anche i ",(0,a.jsx)(i.code,{children:"begin ... end"}),"."]}),"\n","\n",(0,a.jsx)(o(),{preload:!0,controls:!0,muted:!0,width:"100%",height:"auto",url:(0,c.Ay)("/2025-26/video/verilog/4/sintesi-2.webm")}),"\n","\n",(0,a.jsx)(i.p,{children:"Facciamo quindi lo stesso per tutti i registri, e separiamo anche gli statement di reset.\r\nOtteniamo quindi il seguente codice \ud83d\udea9."}),"\n",(0,a.jsx)(i.pre,{children:(0,a.jsx)(i.code,{className:"language-verilog",children:"    always @(reset_ == 0) #1 SOC <= 0;\r\n    always @(posedge clock) if(reset_ == 1) #3 begin\r\n        casex (STAR)\r\n            S0: SOC <= 1;\r\n            S1: SOC <= 0;\r\n            S2: SOC <= SOC;\r\n            S3: SOC <= SOC;\r\n        endcase\r\n    end\r\n    \r\n    always @(reset_ == 0) #1 DAV_ <= 1;\r\n    always @(posedge clock) if(reset_ == 1) #3 begin\r\n        casex (STAR)\r\n            S0: DAV_ <= DAV_;\r\n            S1: DAV_ <= DAV_;\r\n            S2: DAV_ <= 0;\r\n            S3: DAV_ <= 1;\r\n        endcase\r\n    end\r\n    \r\n    always @(posedge clock) if(reset_ == 1) #3 begin\r\n        casex (STAR)\r\n            S0: MIN <= MIN;\r\n            S1: MIN <= out_rc;\r\n            S2: MIN <= MIN;\r\n            S3: MIN <= MIN;\r\n        endcase\r\n    end\r\n    \r\n    always @(reset_ == 0) #1 STAR <= 0;\r\n    always @(posedge clock) if(reset_ == 1) #3 begin\r\n        casex (STAR)\r\n            S0: STAR <= ({eoc1, eoc2, eoc3} == 3'b000) ? S1 : S0;\r\n            S1: STAR <= ({eoc1, eoc2, eoc3} == 3'b111) ? S2 : S1;\r\n            S2: STAR <= (rfd == 1) ? S2 : S3;\r\n            S3: STAR <= (rfd == 0) ? S3 : S0;\r\n        endcase\r\n    end\n"})}),"\n",(0,a.jsx)(i.h3,{id:"passo-3-variabili-di-comando",children:"Passo 3: variabili di comando"}),"\n",(0,a.jsxs)(i.p,{children:["In questo passo definiamo per ciascun registro il numero minimo di variabili di comando necessarie per pilotarne il comportamento.\r\nQuesto numero dipende dal numero di compartomenti ",(0,a.jsx)(i.em,{children:"distinti"})," di tale registro.\r\nNel caso di ",(0,a.jsx)(i.code,{children:"SOC"})," e ",(0,a.jsx)(i.code,{children:"DAV_"}),", abbiamo tre comportamenti: 1, 0 e conservazione.\r\nNel caso di ",(0,a.jsx)(i.code,{children:"MIN"})," ne abbiamo due: campionamento di ",(0,a.jsx)(i.code,{children:"out_rc"})," o conservazione."]}),"\n",(0,a.jsx)(i.p,{children:"A livello di codice, dovremmo:"}),"\n",(0,a.jsxs)(i.ul,{children:["\n",(0,a.jsxs)(i.li,{children:["sostituire i ",(0,a.jsx)(i.code,{children:"casex"})," basati su ",(0,a.jsx)(i.code,{children:"STAR"})," con ",(0,a.jsx)(i.code,{children:"casex"})," basati sulle variabili di comando"]}),"\n",(0,a.jsx)(i.li,{children:"aggiungere la definizione delle variabili di comando"}),"\n"]}),"\n",(0,a.jsx)(i.p,{children:"Pu\xf2 essere utile fare questo per passaggi successivi, anche se non compilabili, per mantenere il riferimento con la descrizione e riconoscere eventuali errori."}),"\n",(0,a.jsxs)(i.p,{children:["Prendiamo il caso del registro ",(0,a.jsx)(i.code,{children:"SOC"}),", questo si svolge in tre passi:"]}),"\n",(0,a.jsxs)(i.ul,{children:["\n",(0,a.jsx)(i.li,{children:"Si aggiungono delle variabili di comando, senza cancellare gli stati"}),"\n",(0,a.jsx)(i.li,{children:"Si aggiunge la definizione di queste variabili, con riferimento agli stati"}),"\n",(0,a.jsx)(i.li,{children:"Si cancellano gli stati lasciati prima, ottenendo codice compilabile"}),"\n"]}),"\n",(0,a.jsx)(i.p,{children:"Al passo 1, avremo"}),"\n",(0,a.jsx)(i.pre,{children:(0,a.jsx)(i.code,{className:"language-verilog",children:"    always @(reset_ == 0) #1 SOC <= 0;\r\n    always @(posedge clock) if(reset_ == 1) #3 begin\r\n        casex ({b1, b0})\r\n            2'b00 S0: SOC <= 1;\r\n            2'b01 S1: SOC <= 0;\r\n            2'b1X S2: SOC <= SOC;\r\n            2'b1X S3: SOC <= SOC;\r\n        endcase\r\n    end\n"})}),"\n",(0,a.jsx)(i.p,{children:"Al passo 2, scriviamo"}),"\n",(0,a.jsx)(i.pre,{children:(0,a.jsx)(i.code,{className:"language-verilog",children:"    wire b1, b0;\r\n    assign #1 {b1, b0} = \r\n        (STAR == S0)? 2'b00 :\r\n        (STAR == S1)? 2'b01 :\r\n        (STAR == S2)? 2'b1X :\r\n        (STAR == S3)? 2'b1X :\r\n        /*default*/   \n"})}),"\n",(0,a.jsx)(i.p,{children:"Questa notazione a tabella torna molto utile pi\xf9 avanti, quando scriveremo la ROM."}),"\n",(0,a.jsxs)(i.p,{children:["Al passo 3, cancelliamo gli stati dal blocco ",(0,a.jsx)(i.code,{children:"@(posedge clock)"})," per riottenere codice valido, ed eliminiamo i doppioni."]}),"\n",(0,a.jsx)(i.pre,{children:(0,a.jsx)(i.code,{className:"language-verilog",children:"    always @(reset_ == 0) #1 SOC <= 0;\r\n    always @(posedge clock) if(reset_ == 1) #3 begin\r\n        casex ({b1, b0})\r\n            2'b00: SOC <= 1;\r\n            2'b01: SOC <= 0;\r\n            2'b1X: SOC <= SOC;\r\n        endcase\r\n    end\n"})}),"\n","\n",(0,a.jsx)(i.p,{children:"Il video seguente mostra come questo procedimento pu\xf2 essere applicato a tutti i registri dell'esercizio."}),"\n",(0,a.jsx)(o(),{preload:!0,controls:!0,muted:!0,width:"100%",height:"auto",url:(0,c.Ay)("/2025-26/video/verilog/4/sintesi-3.webm")}),"\n","\n",(0,a.jsx)(i.p,{children:"Otteniamo quindi il seguente codice \ud83d\udea9."}),"\n",(0,a.jsx)(i.pre,{children:(0,a.jsx)(i.code,{className:"language-verilog",children:"    always @(reset_ == 0) #1 SOC <= 0;\r\n    always @(posedge clock) if(reset_ == 1) #3 begin\r\n        casex ({b1, b0})\r\n            2'b00: SOC <= 1;\r\n            2'b01: SOC <= 0;\r\n            2'b1X: SOC <= SOC;\r\n        endcase\r\n    end\r\n\r\n    always @(reset_ == 0) #1 DAV_ <= 1;\r\n    always @(posedge clock) if(reset_ == 1) #3 begin\r\n        casex ({b3, b2})\r\n            2'b00: DAV_ <= DAV_;\r\n            2'b01: DAV_ <= 0;\r\n            2'b1X: DAV_ <= 1;\r\n        endcase\r\n    end\r\n\r\n    always @(posedge clock) if(reset_ == 1) #3 begin\r\n        casex (b4)\r\n            1'b0: MIN <= MIN;\r\n            1'b1: MIN <= out_rc;\r\n        endcase\r\n    end\r\n\r\n    wire b4, b3, b2, b1, b0;\r\n    assign #1 {b4, b3, b2, b1, b0} =\r\n        (STAR == S0) ? 5'b00000 :\r\n        (STAR == S1) ? 5'b10001 :\r\n        (STAR == S2) ? 5'b0011X :\r\n        (STAR == S3) ? 5'b01X1X :\r\n        /*default*/    5'bXXXXX ;\n"})}),"\n",(0,a.jsx)(i.admonition,{title:"Ottimizzare la codifica",type:"info",children:(0,a.jsxs)(i.p,{children:["La procedura mostrata definisce le variabili di comando e le rispettive codifiche ",(0,a.jsx)(i.em,{children:"indipendentemente"}),".\r\n\xc8 talvolta possibile ridurre il numero complessivo di variabili di comando trovando codifiche che permettano di usare la stessa variabile per pi\xf9 registri.\r\nQuesta \xe8 una ottimizzazione ",(0,a.jsx)("u",{children:"solo"})," se non si aggiunge alcuna variabile di comando a nessun registro."]})}),"\n",(0,a.jsxs)(i.admonition,{title:"Non usare la codifica dello stato",type:"warning",children:[(0,a.jsxs)(i.p,{children:["L'obiettivo delle variabili di comando \xe8 ottimizzare la dimensione dei multiplexer in input a ciascun registro:\r\nusare il registro ",(0,a.jsx)(i.code,{children:"STAR"})," significa usare un multiplexer a tanti ingressi quanti sono gli stati, mentre un registro operativo ha tipicamente molti meno comportamenti distinti."]}),(0,a.jsxs)(i.p,{children:["Usare direttamente la codifica dello stato \xe8 un errore grave, a meno che non si ",(0,a.jsx)(i.em,{children:"dimostri"})," che sia proprio la codifica pi\xf9 efficiente.\r\nA tale scopo, usare commenti nel codice."]})]}),"\n",(0,a.jsx)(i.h3,{id:"passo-4-variabili-di-condizionamento",children:"Passo 4: variabili di condizionamento"}),"\n",(0,a.jsxs)(i.p,{children:["In questo passo definiamo il numero minimo di variabili necessarie per guidare i cambi di stato della parte controllo.\r\nPer far questo, dobbiamo guardare alle condizioni ",(0,a.jsx)(i.em,{children:"indipendenti"})," dei salti a due vie."]}),"\n",(0,a.jsx)(i.pre,{children:(0,a.jsx)(i.code,{className:"language-verilog",children:"    always @(reset_ == 0) #1 STAR <= 0;\r\n    always @(posedge clock) if(reset_ == 1) #3 begin\r\n        casex (STAR)\r\n            S0: STAR <= ({eoc1, eoc2, eoc3} == 3'b000) ? S1 : S0;\r\n            S1: STAR <= ({eoc1, eoc2, eoc3} == 3'b111) ? S2 : S1;\r\n            S2: STAR <= (rfd == 1) ? S2 : S3;\r\n            S3: STAR <= (rfd == 0) ? S3 : S0;\r\n        endcase\r\n    end\n"})}),"\n",(0,a.jsxs)(i.p,{children:["In questo caso notiamo che le condizioni di ",(0,a.jsx)(i.code,{children:"S2"})," e ",(0,a.jsx)(i.code,{children:"S3"})," sono una la negazione dell'altra: non sono indipendenti.\r\nPossiamo guidare entrambi i salti con una sola variabile di condizionamento, se invertiamo uno dei due salti. In questo caso, scegliamo di invertire il salto in ",(0,a.jsx)(i.code,{children:"S3"}),"."]}),"\n",(0,a.jsx)(i.p,{children:"Otteniamo quindi il seguente codice \ud83d\udea9."}),"\n",(0,a.jsx)(i.pre,{children:(0,a.jsx)(i.code,{className:"language-verilog",children:"    wire c2, c1, c0;\r\n    assign #1 c0 = {eoc1, eoc2, eoc3} == 3'b000;\r\n    assign #1 c1 = {eoc1, eoc2, eoc3} == 3'b111;\r\n    assign #1 c2 = rfd == 1;\r\n\r\n    always @(reset_ == 0) #1 STAR <= 0;\r\n    always @(posedge clock) if(reset_ == 1) #3 begin\r\n        casex (STAR)\r\n            S0: STAR <= c0 ? S1 : S0;\r\n            S1: STAR <= c1 ? S2 : S1;\r\n            S2: STAR <= c2 ? S2 : S3;\r\n            S3: STAR <= c2 ? S0 : S3;\r\n        endcase\r\n    end\n"})}),"\n",(0,a.jsxs)(i.p,{children:["Le variabili di condizionamento vanno sintetizzate a livello di bit, sostituendo ai confronti con ",(0,a.jsx)(i.code,{children:"=="})," le corrispondenti espressioni con porte logiche.\r\nIn questo caso, otteniamo \ud83d\udea9"]}),"\n",(0,a.jsx)(i.pre,{children:(0,a.jsx)(i.code,{className:"language-verilog",children:"    assign #1 c0 = ~eoc1 & ~eoc2 & ~eoc3;\r\n    assign #1 c1 = eoc1 & eoc2 & eoc3;\r\n    assign #1 c2 = rfd;\n"})}),"\n",(0,a.jsx)(i.admonition,{title:"Quando invertire i salti",type:"tip",children:(0,a.jsxs)(i.p,{children:["Viene considerata valida anche una sintesi che usi il numero minimo di variabili di condizionamento ma senza invertire i salti nel Verilog.\r\nPer esempio, si pu\xf2 scrivere ",(0,a.jsx)(i.code,{children:"S3: STAR <= ~c2 ? S3 : S0;"}),".\r\nTuttavia non si ha questa libert\xe0 nella ROM, dove l'inversione \xe8 obbligatoria.\r\nDato che la ROM si fa di solito in fondo \xe8 facile dimenticarsene, ed \xe8 quindi consigliato di invertire gi\xe0 nel Verilog della parte controllo."]})}),"\n",(0,a.jsx)(i.admonition,{title:"Sintesi a livello di bit",type:"note",children:(0,a.jsxs)(i.p,{children:["La richiesta di sintesi delle variabili di condizionamento \xe8 flessibile per esercizi dove si hanno molti bit (per esempio, un registro ",(0,a.jsx)(i.code,{children:"COUNT"})," a 16 bit ).\r\nNel dubbio, si pu\xf2 chiedere durante l'esame."]})}),"\n",(0,a.jsx)(i.h3,{id:"passo-5-separare-le-parti",children:"Passo 5: separare le parti"}),"\n",(0,a.jsx)(i.p,{children:"Fin a questo punto abbiamo modificato il codice della rete senza separare effettivamente la parte operativa dalla parte controllo.\r\nQuesto \xe8 utile per mantenere la rete simulabile e controllare di non aver introdotto nuovi errori rispetto alla descrizione."}),"\n",(0,a.jsxs)(i.p,{children:["Arrivati a questo punto possiamo separare le parti.\r\nNella parte operativa andranno i registri operativi, le reti combinatorie che ne pilotano gli ingressi, e le reti combinatorie che generano le variabili di condizionamento.\r\nA questa parte vengono inoltre collegati gli ingressi e le uscite della rete complessiva.\r\nNella parte controllo, invece, ci sar\xe0 solo il registro ",(0,a.jsx)(i.code,{children:"STAR"})," e la ROM a microindirizzi, di cui scriviamo in Verilog, in particolare, la parte che genera le variabili di controllo."]}),"\n",(0,a.jsx)(i.p,{children:"Otteniamo quindi il seguente codice \ud83d\udea9."}),"\n",(0,a.jsx)(i.pre,{children:(0,a.jsx)(i.code,{className:"language-verilog",metastring:"showLineNumbers",children:"module ABC(\r\n    x1, x2, x3,\r\n    eoc1, eoc2, eoc3,\r\n    soc,\r\n    min, dav_, rfd,\r\n    clock, reset_\r\n);\r\n    input [7:0] x1, x2, x3;\r\n    input eoc1, eoc2, eoc3;\r\n    output soc;\r\n    output [7:0] min;\r\n    output dav_;\r\n    input rfd;\r\n    input clock, reset_;\r\n\r\n    wire b4, b3, b2, b1, b0;\r\n    wire c2, c1, c0;\r\n\r\n    ABC_PO po(\r\n        x1, x2, x3,\r\n        eoc1, eoc2, eoc3,\r\n        soc,\r\n        min, dav_, rfd,\r\n        b4, b3, b2, b1, b0,\r\n        c2, c1, c0\r\n        clock, reset_,\r\n    );\r\n\r\n    ABC_PC pc(\r\n        b4, b3, b2, b1, b0,\r\n        c2, c1, c0\r\n        clock, reset_,\r\n    );\r\nendmodule\r\n\r\nmodule ABC_PO(\r\n    x1, x2, x3,\r\n    eoc1, eoc2, eoc3,\r\n    soc,\r\n    min, dav_, rfd,\r\n    b4, b3, b2, b1, b0,\r\n    c2, c1, c0\r\n    clock, reset_,\r\n);\r\n    input [7:0] x1, x2, x3;\r\n    input eoc1, eoc2, eoc3;\r\n    output soc;\r\n    output [7:0] min;\r\n    output dav_;\r\n    input rfd;\r\n    input clock, reset_;\r\n\r\n    reg SOC;\r\n    assign soc = SOC;\r\n    reg [7:0] MIN;\r\n    assign min = MIN;\r\n    reg DAV_;\r\n    assign dav_ = DAV_;\r\n\r\n    wire [7:0] out_rc;\r\n    MINIMO_3 min_rc(\r\n        .a(x1), .b(x2), .c(x3),\r\n        .min(out_rc)\r\n    );\r\n\r\n    input b4, b3, b2, b1, b0;\r\n    output c2, c1, c0;\r\n\r\n    assign #1 c0 = ~eoc1 & ~eoc2 & ~eoc3;\r\n    assign #1 c1 = eoc1 & eoc2 & eoc3;\r\n    assign #1 c2 = rfd;\r\n\r\n    always @(reset_ == 0) #1 SOC <= 0;\r\n    always @(posedge clock) if(reset_ == 1) #3 begin\r\n        casex ({b1, b0})\r\n            2'b00: SOC <= 1;\r\n            2'b01: SOC <= 0;\r\n            2'b1X: SOC <= SOC;\r\n        endcase\r\n    end\r\n\r\n    always @(reset_ == 0) #1 DAV_ <= 1;\r\n    always @(posedge clock) if(reset_ == 1) #3 begin\r\n        casex ({b3, b2})\r\n            2'b00: DAV_ <= DAV_;\r\n            2'b01: DAV_ <= 0;\r\n            2'b1X: DAV_ <= 1;\r\n        endcase\r\n    end\r\n\r\n    always @(posedge clock) if(reset_ == 1) #3 begin\r\n        casex (b4)\r\n            1'b0: MIN <= MIN;\r\n            1'b1: MIN <= out_rc;\r\n        endcase\r\n    end\r\nendmodule\r\n\r\nmodule ABC_PC(\r\n    b4, b3, b2, b1, b0,\r\n    c2, c1, c0\r\n    clock, reset_,\r\n);\r\n    input clock, reset_;\r\n\r\n    output b4, b3, b2, b1, b0;\r\n    input c2, c1, c0;\r\n\r\n    reg [1:0] STAR;\r\n    localparam \r\n        S0 = 0,\r\n        S1 = 1,\r\n        S2 = 2,\r\n        S3 = 3;\r\n\r\n    assign #1 {b4, b3, b2, b1, b0} =\r\n        (STAR == S0) ? 5'b00000 :\r\n        (STAR == S1) ? 5'b10001 :\r\n        (STAR == S2) ? 5'b0011X :\r\n        (STAR == S3) ? 5'b01X1X :\r\n        /*default*/    5'bXXXXX ;\r\n\r\n    always @(reset_ == 0) #1 STAR <= 0;\r\n    always @(posedge clock) if(reset_ == 1) #3 begin\r\n        casex (STAR)\r\n            S0: STAR <= c0 ? S1 : S0;\r\n            S1: STAR <= c1 ? S2 : S1;\r\n            S2: STAR <= c2 ? S2 : S3;\r\n            S3: STAR <= c2 ? S0 : S3;\r\n        endcase\r\n    end\r\nendmodule\r\n\r\n// sintesi di rete combinatoria omessa\n"})}),"\n",(0,a.jsx)(i.h3,{id:"passo-6-la-rom",children:"Passo 6: la ROM"}),"\n",(0,a.jsxs)(i.p,{children:["Secondo il modello a microindirizzi, la parte controllo \xe8 implementata come una ROM che usa il registro ",(0,a.jsx)(i.code,{children:"STAR"})," come ",(0,a.jsx)(i.em,{children:"microindirizzo"}),", e fornisce in uscita le variabili di controllo per la parte operativa cos\xec come ",(0,a.jsx)(i.code,{children:"c_eff"}),", ",(0,a.jsx)(i.code,{children:"m_true"})," e ",(0,a.jsx)(i.code,{children:"m_false"}),".\r\nQuesti ultimi tre elementi, insieme alle variabili di condizionamento in ingresso dalla parte operativa, sono utilizzati con dei multiplexer in cascata per determinare lo stato successivo della rete.\r\nLo schema circuitale \xe8 il seguente."]}),"\n",(0,a.jsx)("img",{src:(0,c.Ay)("2025-26/img/verilog/4/rom-microindirizzi.drawio.png"),style:{maxWidth:"min(100%, 44rem)"},alt:"\r\nSchema di una ROM basata su microindirizzi.\r\nLa ROM prende in ingresso STAR, e produce le variabili di comando, 'c_eff', 'm_true' e 'm_false'.\r\nLo stato successivo, 'next_addr', \xe8 determinato da un multiplexer che prende in ingresso 'm_true' e 'm_false' ed \xe8 pilotato dalla variabile di condizionamento efficace.\r\nQuesta \xe8 prodotta da un'altro multiplexer, che prende in ingresso le variabili di condizionamento da 'c0' a 'cN' ed \xe8 pilotato da 'c_eff'.\r\n"}),"\n",(0,a.jsx)(i.p,{children:"Fare la sintesi direttamente come ROM \xe8 possibile, ma \xe8 ben pi\xf9 tedioso e difficile da debuggare.\r\nPer questo manteniamo il linguaggio di trasferimento tra registri per indicare in Verilog il comportamento di STAR, e scriviamo invece come commento nel codice una tabella che mostri il contenuto della ROM."}),"\n",(0,a.jsxs)(i.p,{children:["Per evitare ogni ambiguit\xe0, si comincia specificando codifiche binarie per gli stati e i ",(0,a.jsx)(i.em,{children:"nomi"})," delle variabili di comando.\r\nDopodich\xe9, si pu\xf2 riempire la tabella con quanto scritto in Verilog."]}),"\n",(0,a.jsx)(i.pre,{children:(0,a.jsx)(i.code,{className:"language-verilog",children:"/*\r\n    S0 = 00, S1 = 01, S2 = 10, S3 = 11\r\n    c0 = 00, c1 = 01, c2 = 1X\r\n\r\n    M-addr |  b4, b3, b2, b1, b0 | c_eff | M-addr-T | M-addr-F\r\n    ----------------------------------------------------------\r\n    00     | 00000               | 00    | 01       | 00\r\n    01     | 01100               | 01    | 10       | 01      \r\n    10     | 1X001               | 1X    | 10       | 11\r\n    11     | 1X01X               | 1X    | 00       | 11\r\n*/\n"})}),"\n",(0,a.jsxs)(i.p,{children:["A questo punto la sintesi \xe8 completa. \xc8 scaricabile ",(0,a.jsx)(i.a,{href:"pathname:///2025-26/code/verilog/4/2021-01-08/sintesi.v",children:"qui"}),"."]}),"\n",(0,a.jsxs)(i.p,{children:["Menzioniamo a parte il caso dei salti incondizionati, del tipo del tipo ",(0,a.jsx)(i.code,{children:"STAR <= S1"}),".\r\nIn questo caso, va scritta la ROM in modo che ",(0,a.jsx)(i.code,{children:"next_address"})," sia ",(0,a.jsx)(i.code,{children:"S1"})," per qualunque valore delle variabili di condizionamento.\r\nQuesto si pu\xf2 ottenere mettendo sia ",(0,a.jsx)(i.code,{children:"m_true"})," che ",(0,a.jsx)(i.code,{children:"m_false"})," a ",(0,a.jsx)(i.code,{children:"S1"}),", lasciando non-specificato ",(0,a.jsx)(i.code,{children:"c_eff"}),". In tabella, questo si traduce in"]}),"\n",(0,a.jsx)(i.pre,{children:(0,a.jsx)(i.code,{className:"language-verilog",children:"/*\r\n    ... | c_eff | M-addr-T | M-addr-F\r\n    ----------------------------------\r\n    ... | X     | 01       | 01\r\n*/\n"})}),"\n",(0,a.jsx)(i.admonition,{title:"Formattazione della tabella",type:"note",children:(0,a.jsxs)(i.p,{children:["Non essendo parte del codice, non c'\xe8 una sintassi o formattazione precisa da seguire per la tabella, purch\xe9 sia non-ambigua quando letta dai docenti.\r\nQuesto include le varie alternative come ",(0,a.jsx)(i.code,{children:"m-true"}),", ",(0,a.jsx)(i.code,{children:"m-addr-true"}),", ",(0,a.jsx)(i.code,{children:"m-T"})," etc., o usare ",(0,a.jsx)(i.code,{children:"?"})," al posto di ",(0,a.jsx)(i.code,{children:"X"}),"."]})}),"\n",(0,a.jsxs)(i.admonition,{title:"Valori non specificati",type:"note",children:[(0,a.jsx)(i.p,{children:"La tabella della ROM \xe8 difatto una tabella di verit\xe0 per una rete combinatoria, che \xe8 quindi sintetizzabile utilizzando i metodi visti come le mappe di Karnaugh."}),(0,a.jsx)(i.p,{children:"I valori non specificati per variabili di comando e condizionamento sono quindi utili per permettere ottimizzazioni in tale sintesi."})]}),"\n",(0,a.jsxs)(i.admonition,{title:"Salti incondizionati, non indeterminati",type:"warning",children:[(0,a.jsxs)(i.p,{children:["\xc8 purtroppo frequente vedere ROM dove uno o entrambi gli indirizzi ",(0,a.jsx)(i.code,{children:"m_true"})," o ",(0,a.jsx)(i.code,{children:"m_false"})," sono non specificati, come nell'esempio seguente"]}),(0,a.jsx)(i.pre,{children:(0,a.jsx)(i.code,{className:"language-verilog",children:"/*\r\n    ... | c_eff | M-addr-T | M-addr-F\r\n    ----------------------------------\r\n    ... | X     | 01       | X          Errore!\r\n*/\n"})}),(0,a.jsxs)(i.p,{children:["Una ROM del genere \xe8 priva di senso, perch\xe9 determina una rete che salta ",(0,a.jsx)(i.em,{children:"a uno stato a caso"}),"."]})]})]})}function x(e={}){const{wrapper:i}={...(0,r.R)(),...e.components};return i?(0,a.jsx)(i,{...e,children:(0,a.jsx)(p,{...e})}):p(e)}}}]);