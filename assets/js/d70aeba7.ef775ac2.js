"use strict";(self.webpackChunkreti_logiche_esercitazioni=self.webpackChunkreti_logiche_esercitazioni||[]).push([[8440],{69856:(e,s,a)=>{a.r(s),a.d(s,{assets:()=>t,contentTitle:()=>o,default:()=>h,frontMatter:()=>c,metadata:()=>n,toc:()=>m});const n=JSON.parse('{"id":"esercitazioni/Assembler/Esercitazioni/Esercitazione 3","title":"Esercitazione 3","description":"","source":"@site/versioned_docs/version-2025-26/esercitazioni/Assembler/Esercitazioni/3. Esercitazione 3.mdx","sourceDirName":"esercitazioni/Assembler/Esercitazioni","slug":"/esercitazioni/Assembler/Esercitazioni/Esercitazione 3","permalink":"/reti-logiche-esercitazioni/esercitazioni/Assembler/Esercitazioni/Esercitazione 3","draft":false,"unlisted":false,"tags":[],"version":"2025-26","sidebarPosition":3,"frontMatter":{"description":""},"sidebar":"esercitazioniSidebar","previous":{"title":"Esercitazione 2","permalink":"/reti-logiche-esercitazioni/esercitazioni/Assembler/Esercitazioni/Esercitazione 2"},"next":{"title":"Documentazione","permalink":"/reti-logiche-esercitazioni/category/documentazione"}}');var i=a(74848),r=a(28453),l=a(86025);const c={description:""},o="Esercitazione 3",t={},m=[{value:"Soluzioni passo-passo esercizi per casa",id:"soluzioni-passo-passo-esercizi-per-casa",level:2},{value:"Esercizio 1.2: istruzioni stringa, soluzione passo-passo",id:"esercizio-12-istruzioni-stringa-soluzione-passo-passo",level:3},{value:"Esercizio 1.6: esercizio di debugging, soluzione passo-passo",id:"esercizio-16-esercizio-di-debugging-soluzione-passo-passo",level:3},{value:"Esercizio 3.1: esercizio d&#39;esame 2021-01-08",id:"esercizio-31-esercizio-desame-2021-01-08",level:2},{value:"Esercizi per casa",id:"esercizi-per-casa",level:2},{value:"Esercizio 3.2",id:"esercizio-32",level:3},{value:"Esercizio 3.3",id:"esercizio-33",level:3},{value:"Esercizio 3.4",id:"esercizio-34",level:3},{value:"Esercizio 3.5",id:"esercizio-35",level:3}];function d(e){const s={a:"a",admonition:"admonition",annotation:"annotation",blockquote:"blockquote",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",math:"math",mfrac:"mfrac",mi:"mi",mn:"mn",mo:"mo",mrow:"mrow",p:"p",pre:"pre",semantics:"semantics",span:"span",strong:"strong",ul:"ul",...(0,r.R)(),...e.components},{Details:a}=s;return a||function(e,s){throw new Error("Expected "+(s?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(s.header,{children:(0,i.jsx)(s.h1,{id:"esercitazione-3",children:"Esercitazione 3"})}),"\n",(0,i.jsx)(s.h2,{id:"soluzioni-passo-passo-esercizi-per-casa",children:"Soluzioni passo-passo esercizi per casa"}),"\n",(0,i.jsx)(s.h3,{id:"esercizio-12-istruzioni-stringa-soluzione-passo-passo",children:"Esercizio 1.2: istruzioni stringa, soluzione passo-passo"}),"\n",(0,i.jsx)(s.p,{children:"Ricordiamo la traccia dell'esercizio:"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{children:"1. Leggere messaggio da terminale.\n2. Convertire le lettere minuscole in maiuscolo, usando le istruzioni stringa.\n3. Stampare messaggio modificato.\n"})}),"\n",(0,i.jsx)(s.p,{children:"Le istruzioni stringa sono un esempio di set di istruzioni specializzate, cio\xe8 istruzioni che non sono pensate per implementare algoritmi generici, ma sono invece pensate per fornire supporto hardware efficiente a uno specifico set di operazioni che alcuni algoritmi necessitano.\nInfatti, ci si pu\xf2 aspettare che tra due programmi equivalenti, uno scritto con sole istruzioni generali e l'altro scritto con istruzioni specializzate, il secondo sar\xe0 molto pi\xf9 performante del primo.\nAltri esempi comuni sono le istruzioni a supporto di crittografia, encoding e decoding di stream multimediali, e, pi\xf9 recentemente, neural networks."}),"\n",(0,i.jsx)(s.p,{children:"Questi set di istruzioni sono per\xf2 pi\xf9 \"rigidi\" delle istruzioni a uso generale.\nCi impongono infatti dei modi specifici di organizzare dati e codice, perch\xe9 questi devono essere compatibili con il modo in cui l'algoritmo eseguito da un'istruzione \xe8 implementato in hardware."}),"\n",(0,i.jsx)(s.p,{children:"Nell'esercizio 1.1 abbiamo considerato due modi di scorrere i due array.\nNel primo, che \xe8 quello che abbiamo scelto, si carica l'indirizzo di inizio del vettore, e si usa un altro registro come indice, usando l'indirizzazione con indice.\nNel secondo, si usa un registro come puntatore alla cella corrente, inizializzato all'indirizzo di inizio del vettore e poi incrementato (della quantit\xe0 giusta) per passare all'elemento successivo.\nIn entrambi i casi, siamo liberi di usare i registri che vogliamo, per esempio non abbiamo nessun problema se scriviamo il programma di prima come segue:"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-assembler",children:"    lea msg_in, %eax\n    lea msg_out, %ebx\n    mov $0, %edx\nloop:   \n    movb (%eax, %edx), %cl\n    ...\n"})}),"\n",(0,i.jsxs)(s.p,{children:["Infatti, usare ",(0,i.jsx)(s.code,{children:"esi"})," ed ",(0,i.jsx)(s.code,{children:"edi"})," come registri puntatori, ed ",(0,i.jsx)(s.code,{children:"ecx"})," come registro di indice, \xe8 del tutto opzionale."]}),"\n",(0,i.jsxs)(s.p,{children:["Tutto questo cambia quando si vogliono usare istruzioni specializzate come le istruzioni stringa.\nQueste ci impongono di usare ",(0,i.jsx)(s.code,{children:"esi"})," come puntatore al vettore sorgente, ",(0,i.jsx)(s.code,{children:"edi"})," come puntatore al vettore destinatario, ",(0,i.jsx)(s.code,{children:"eax"})," come registro dove scrivere o da cui leggere il valore da trasferire, ",(0,i.jsx)(s.code,{children:"ecx"})," come contatore delle ripetizioni da eseguire, etc.\nUna volta scelte le istruzioni da usare, dobbiamo quindi assicurarci di seguire quanto imposto dall'istruzione."]}),"\n",(0,i.jsxs)(s.p,{children:["Per questo esercizio siamo interessati alla ",(0,i.jsx)(s.code,{children:"lods"}),", che legge un valore dal vettore e ne sposta il puntatore allo step successivo, e la ",(0,i.jsx)(s.code,{children:"stos"}),", che scrive un valore nel vettore.\nPartiamo dal riscrivere il ",(0,i.jsx)(s.code,{children:"punto_2"})," dell'esercizio 1.1 in modo da rendere l'algoritmo compatibile."]}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-assembler",children:"...\npunto_2:\n    lea msg_in, %esi\n    lea msg_out, %edi\nloop:\n// highlight-start\n    movb (%esi), %al\n    inc %esi\n// highlight-end\n    cmp $'a', %al\n    jb post_check\n    cmp $'z', %al\n    ja post_check\n    and $0xdf, %al\npost_check:\n// highlight-start\n    movb %al, (%edi)\n    inc %edi\n// highlight-end\n    cmp $0x0d, %al\n    jne loop\n...\n"})}),"\n",(0,i.jsxs)(s.p,{children:["Abbiamo dunque rimosso l'uso di ",(0,i.jsx)(s.code,{children:"ecx"})," come indice, e usiamo ",(0,i.jsx)(s.code,{children:"esi"})," ed ",(0,i.jsx)(s.code,{children:"edi"})," come puntatori.\nIl fatto di usare la ",(0,i.jsx)(s.code,{children:"inc"})," \xe8 legato alla dimensione dei dati, cio\xe8 1 byte.\nDovremmo invece scrivere ",(0,i.jsx)(s.code,{children:"add $2, %esi"})," o ",(0,i.jsx)(s.code,{children:"add $4, %esi"})," per dati su 2 o 4 byte.\nAltra nota \xe8 che ",(0,i.jsx)(s.em,{children:"incrementiamo"})," i puntatori, anzich\xe9 decrementarli, perch\xe9 stiamo eseguendo l'operazione da sinistra verso destra."]}),"\n",(0,i.jsxs)(s.p,{children:["Siamo pronti adesso a sostituire le istruzioni evidenziate con delle istruzioni stringa.\nIl sorgente finale \xe8 scaricabile ",(0,i.jsx)(s.a,{href:"pathname:///2025-26/code/assembler/1/maiusc-str.s",children:"qui"}),"."]}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-assembler",children:"...\npunto_2:\n    lea msg_in, %esi\n    lea msg_out, %edi\n    // highlight-start\n    cld\n    // highlight-end\nloop:\n// highlight-start\n    lodsb\n// highlight-end\n    cmp $'a', %al\n    jb post_check\n    cmp $'z', %al\n    ja post_check\n    and $0xdf, %al\npost_check:\n// highlight-start\n    stosb\n// highlight-end\n    cmp $0x0d, %al\n    jne loop\n...\n"})}),"\n",(0,i.jsxs)(s.p,{children:["L'istruzione ",(0,i.jsx)(s.code,{children:"cld"})," serve a impostare a 0 il flag di direzione, che serve a indicare alle istruzioni stringa se andare da sinistra verso destra o il contrario.\nDato che tutti i registri sono impliciti, dobbiamo sempre specificare la dimensione delle istruzioni, in questo caso ",(0,i.jsx)(s.code,{children:"b"}),"."]}),"\n",(0,i.jsx)(s.p,{children:"Come esercizio, pu\xf2 essere interessante osservare con il debugger l'evoluzione dei registri, osservando come si eseguono pi\xf9 operazioni con una sola istruzione."}),"\n",(0,i.jsx)(s.h3,{id:"esercizio-16-esercizio-di-debugging-soluzione-passo-passo",children:"Esercizio 1.6: esercizio di debugging, soluzione passo-passo"}),"\n",(0,i.jsx)(s.p,{children:"Ricordiamo la traccia dell'esercizio:"}),"\n",(0,i.jsxs)(s.blockquote,{children:["\n",(0,i.jsxs)(s.p,{children:["Scrivere un programma che, a partire dalla sezione ",(0,i.jsx)(s.code,{children:".data"})," che segue (e scaricabile ",(0,i.jsx)(s.a,{href:"pathname:///2025-26/code/assembler/1/per-casa/conta_num.s",children:"qui"}),"), conta e stampa il numero di occorrenze di ",(0,i.jsx)(s.code,{children:"numero"})," in ",(0,i.jsx)(s.code,{children:"array"}),"."]}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-assembler",children:'.include "./files/utility.s"\n\n.data\narray:      .word 1, 256, 256, 512, 42, 2048, 1024, 1, 0\narray_len:  .long 9\nnumero:     .word 1\n'})}),"\n"]}),"\n",(0,i.jsx)(s.p,{children:"Questa \xe8 invece la soluzione proposta dall'esercizio:"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-assembler",metastring:"showLineNumbers",children:'.include "./files/utility.s"\n\n.data\narray:      .word 1, 256, 256, 512, 42, 2048, 1024, 1, 0\narray_len:  .long 9\nnumero:     .word 1\n\n.text\n\n_main:\n    nop\n    mov $0, %cl\n    mov numero, %ax\n    mov $0, %esi\n\ncomp: \n    cmp array_len, %esi\n    je fine\n    cmpw array(%esi), %ax\n    jne poi\n    inc %cl\n\npoi:  \n    inc %esi\n    jmp comp\n\nfine: \n    mov %cl, %al\n    call outdecimal_byte\n    ret\n\n'})}),"\n",(0,i.jsx)(s.p,{children:"Come prima cosa, cerchiamo di capire, a grandi linee, cosa cerca di fare questo programma."}),"\n",(0,i.jsxs)(s.p,{children:["Notiamo l'uso di ",(0,i.jsx)(s.code,{children:"%cl"}),": dall'inizializzazione a riga 12, l'incremento condizionato a righe 19-21, e la stampa a righe 28-29, si evince che ",(0,i.jsx)(s.code,{children:"%cl"})," \xe8 usato come contatore dei successi, ossia di quante volte \xe8 stato trovato ",(0,i.jsx)(s.code,{children:"numero"})," in ",(0,i.jsx)(s.code,{children:"array"}),".\nNotiamo che ",(0,i.jsx)(s.code,{children:"%ax"})," viene inizializzato con ",(0,i.jsx)(s.code,{children:"numero"})," e, prima della stampa, mai aggiornato.\nInfine, ",(0,i.jsx)(s.code,{children:"%esi"})," viene inizializzato a 0 e incrementato a fine di ogni ciclo, confrontandolo con ",(0,i.jsx)(s.code,{children:"array_len"})," per determinare quando uscire dal loop.\nInfine, a riga 19 notiamo il confronto tra un valore di ",(0,i.jsx)(s.code,{children:"array"}),", indicizzato con ",(0,i.jsx)(s.code,{children:"%esi"}),", e ",(0,i.jsx)(s.code,{children:"%ax"}),", che contiene ",(0,i.jsx)(s.code,{children:"numero"}),"."]}),"\n",(0,i.jsxs)(s.p,{children:["Si ricostruisce quindi questa logica: scorro valore per valore ",(0,i.jsx)(s.code,{children:"array"}),", indicizzandolo con ",(0,i.jsx)(s.code,{children:"%esi"}),", e lo confronto con ",(0,i.jsx)(s.code,{children:"numero"}),", che \xe8 appoggiato su ",(0,i.jsx)(s.code,{children:"%ax"})," (perch\xe9 il confronto tra due valori in memoria non \xe8 possibile con ",(0,i.jsx)(s.code,{children:"cmp"}),"). Utilizzo ",(0,i.jsx)(s.code,{children:"%cl"})," come contatore dei successi, e alla fine dello scorrimento ne stampo il valore."]}),"\n",(0,i.jsx)(s.p,{children:"Fin qui nessuna sorpresa, il programma sembra seguire lo schema che si seguirebbe con un normale programma in C:"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-C",children:"int cl = 0;\nfor(int esi = 0; esi < array_len; esi++){\n    if(array[esi] == numero)\n        cl++;\n}\n"})}),"\n",(0,i.jsx)(s.p,{children:"Proviamo ad eseguire il programma: ci si aspetta che stampi 2. Invece, stampa 3.\nDobbiamo passare al debugger."}),"\n",(0,i.jsxs)(s.p,{children:["Quello che ci conviene guardare \xe8 quello che succede ad ogni loop, in particolare alla riga 19, dove la ",(0,i.jsx)(s.code,{children:"cmpw"})," confronta un valore di ",(0,i.jsx)(s.code,{children:"array"})," con ",(0,i.jsx)(s.code,{children:"%ax"}),", che contiene ",(0,i.jsx)(s.code,{children:"numero"}),".\nPer\xf2, la ",(0,i.jsx)(s.code,{children:"cmpw"})," utilizza un indirizzamento complesso che, come descritto nella ",(0,i.jsx)(s.a,{href:"/reti-logiche-esercitazioni/esercitazioni/Assembler/Documentazione/Debugger%20gdb#ispezione-della-memoria",children:"documentazione"}),", richiede una sintassi pi\xf9 complicata nel debugger.\nCambio quindi quella istruzione in una serie equivalente che sia pi\xf9 facile da osservare col debugger."]}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-assembler",metastring:"showLineNumbers",children:'.include "./files/utility.s"\n\n.data\narray:      .word 1, 256, 256, 512, 42, 2048, 1024, 1, 0\narray_len:  .long 9\nnumero:     .word 1\n\n.text\n\n_main:\n    nop\n    mov $0, %cl\n    mov numero, %ax\n    mov $0, %esi\n\ncomp: \n    cmp array_len, %esi\n    je fine\n// highlight-start\n    movw array(%esi), %bx\n    cmpw %bx, %ax\n// highlight-end\n    jne poi\n    inc %cl\n\npoi:  \n    inc %esi\n    jmp comp\n\nfine: \n    mov %cl, %al\n    call outdecimal_byte\n    ret\n\n'})}),"\n",(0,i.jsxs)(s.p,{children:["Assemblo, avvio il debugger, e setto un breakpoint alla riga 20 con ",(0,i.jsx)(s.code,{children:"break 20"}),".\nLascio girare il programma con ",(0,i.jsx)(s.code,{children:"continue"}),", che quasi immediatamente raggiunge la riga 20 e si ferma.\nRicordiamo che il debugger si ferma ",(0,i.jsx)(s.em,{children:"prima"})," di eseguire una istruzione."]}),"\n",(0,i.jsxs)(s.p,{children:["Vediamo lo stato dei registri, con ",(0,i.jsx)(s.code,{children:"i r ax bx cl esi"})," (mostra solo quelli che ci interessano)."]}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-gdb",children:"(gdb) i r ax bx cl esi\nax             0x1                 1\nbx             0x1                 1\ncl             0x0                 0\nesi            0x0                 0\n"})}),"\n",(0,i.jsxs)(s.p,{children:["Fin qui, tutto come ci si aspetta: ",(0,i.jsx)(s.code,{children:"%ax"})," che contiene ",(0,i.jsx)(s.code,{children:"numero"}),", ",(0,i.jsx)(s.code,{children:"%bx"})," contiene il numero alla prima cella di ",(0,i.jsx)(s.code,{children:"array"}),", i due contatori ",(0,i.jsx)(s.code,{children:"%cl"})," e ",(0,i.jsx)(s.code,{children:"%esi"})," sono a 0.\nFacciamo ",(0,i.jsx)(s.code,{children:"step"})," per vedere l'esito del confronto: dopo la riga 21 l'esecuzione giunge alla riga 22, indicando che il salto non \xe8 stato fatto perch\xe9 la ",(0,i.jsx)(s.code,{children:"jne"})," \xe8 stata eseguita dopo un confronto tra valori uguali."]}),"\n",(0,i.jsxs)(s.p,{children:["Continuiamo con ",(0,i.jsx)(s.code,{children:"step"})," controllando che il comportamento sia quello atteso, fino a giungere di nuovo alla riga 20."]}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-gdb",children:"(gdb) i r ax bx cl esi\nax             0x1                 1\nbx             0x0                 0\ncl             0x1                 1\nesi            0x1                 1\n"})}),"\n",(0,i.jsxs)(s.p,{children:["Qui abbiamo la prima sorpresa. In ",(0,i.jsx)(s.code,{children:"%bx"})," troviamo 0, ma il secondo valore di ",(0,i.jsx)(s.code,{children:"array"})," \xe8 256.\nSe continuiamo, vediamo che 256 compare come terzo valore, poi 1 come quarto, poi 256 come quinto.\nAbbiamo quindi dei valori aggiuntivi che compaiono durante lo scorrimento del vettore ma che non sono presenti nell'allocazione a riga 4.\nContinuando ancora, vediamo che i 9 valori coperti dal programma non sono affatto tutti e 9 quelli a riga 4, e che effettivamente il valore 1 compare 3 volte."]}),"\n",(0,i.jsxs)(s.p,{children:["Con questo, abbiamo intanto confinato il problema: la logica di confronto e conteggio funziona, il problema \xe8 nella ",(0,i.jsx)(s.em,{children:"lettura"})," di valori da ",(0,i.jsx)(s.code,{children:"array"}),"."]}),"\n",(0,i.jsxs)(s.p,{children:["Per capire cosa sta succedendo, dobbiamo ricordare come si comporta l'allocazione in memoria di valori su pi\xf9 byte: abbiamo infatti a che fare con ",(0,i.jsx)(s.em,{children:"word"}),", composte da 2 byte ciascuna, e ciascun indirizzo in memoria corrisponde a una locazione di un solo byte."]}),"\n",(0,i.jsxs)(s.p,{children:["L'architettura x86 \xe8 ",(0,i.jsx)(s.em,{children:"little-endian"}),", che significa ",(0,i.jsx)(s.strong,{children:"little end first"}),", ",(0,i.jsx)(s.a,{href:"https://en.wikipedia.org/wiki/Endianness",children:"un riferimento a I viaggi di Gulliver"}),".\nQuesto si traduce nel fatto che quando un valore di ",(0,i.jsxs)(s.span,{className:"katex",children:[(0,i.jsx)(s.span,{className:"katex-mathml",children:(0,i.jsx)(s.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,i.jsxs)(s.semantics,{children:[(0,i.jsx)(s.mrow,{children:(0,i.jsx)(s.mi,{children:"n"})}),(0,i.jsx)(s.annotation,{encoding:"application/x-tex",children:"n"})]})})}),(0,i.jsx)(s.span,{className:"katex-html","aria-hidden":"true",children:(0,i.jsxs)(s.span,{className:"base",children:[(0,i.jsx)(s.span,{className:"strut",style:{height:"0.4306em"}}),(0,i.jsx)(s.span,{className:"mord mathnormal",children:"n"})]})})]})," byte viene salvato in memoria ",(0,i.jsx)(s.em,{children:"a partire"})," dall'indirizzo ",(0,i.jsxs)(s.span,{className:"katex",children:[(0,i.jsx)(s.span,{className:"katex-mathml",children:(0,i.jsx)(s.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,i.jsxs)(s.semantics,{children:[(0,i.jsx)(s.mrow,{children:(0,i.jsx)(s.mi,{children:"a"})}),(0,i.jsx)(s.annotation,{encoding:"application/x-tex",children:"a"})]})})}),(0,i.jsx)(s.span,{className:"katex-html","aria-hidden":"true",children:(0,i.jsxs)(s.span,{className:"base",children:[(0,i.jsx)(s.span,{className:"strut",style:{height:"0.4306em"}}),(0,i.jsx)(s.span,{className:"mord mathnormal",children:"a"})]})})]}),", il byte meno significativo del valore viene salvato in ",(0,i.jsxs)(s.span,{className:"katex",children:[(0,i.jsx)(s.span,{className:"katex-mathml",children:(0,i.jsx)(s.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,i.jsxs)(s.semantics,{children:[(0,i.jsx)(s.mrow,{children:(0,i.jsx)(s.mi,{children:"a"})}),(0,i.jsx)(s.annotation,{encoding:"application/x-tex",children:"a"})]})})}),(0,i.jsx)(s.span,{className:"katex-html","aria-hidden":"true",children:(0,i.jsxs)(s.span,{className:"base",children:[(0,i.jsx)(s.span,{className:"strut",style:{height:"0.4306em"}}),(0,i.jsx)(s.span,{className:"mord mathnormal",children:"a"})]})})]}),", il secondo meno significativo in ",(0,i.jsxs)(s.span,{className:"katex",children:[(0,i.jsx)(s.span,{className:"katex-mathml",children:(0,i.jsx)(s.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,i.jsxs)(s.semantics,{children:[(0,i.jsxs)(s.mrow,{children:[(0,i.jsx)(s.mi,{children:"a"}),(0,i.jsx)(s.mo,{children:"+"}),(0,i.jsx)(s.mn,{children:"1"})]}),(0,i.jsx)(s.annotation,{encoding:"application/x-tex",children:"a+1"})]})})}),(0,i.jsxs)(s.span,{className:"katex-html","aria-hidden":"true",children:[(0,i.jsxs)(s.span,{className:"base",children:[(0,i.jsx)(s.span,{className:"strut",style:{height:"0.6667em",verticalAlign:"-0.0833em"}}),(0,i.jsx)(s.span,{className:"mord mathnormal",children:"a"}),(0,i.jsx)(s.span,{className:"mspace",style:{marginRight:"0.2222em"}}),(0,i.jsx)(s.span,{className:"mbin",children:"+"}),(0,i.jsx)(s.span,{className:"mspace",style:{marginRight:"0.2222em"}})]}),(0,i.jsxs)(s.span,{className:"base",children:[(0,i.jsx)(s.span,{className:"strut",style:{height:"0.6444em"}}),(0,i.jsx)(s.span,{className:"mord",children:"1"})]})]})]}),", e cos\xec via fino al pi\xf9 significativo in ",(0,i.jsxs)(s.span,{className:"katex",children:[(0,i.jsx)(s.span,{className:"katex-mathml",children:(0,i.jsx)(s.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,i.jsxs)(s.semantics,{children:[(0,i.jsxs)(s.mrow,{children:[(0,i.jsx)(s.mi,{children:"a"}),(0,i.jsx)(s.mo,{children:"+"}),(0,i.jsx)(s.mo,{stretchy:"false",children:"("}),(0,i.jsx)(s.mi,{children:"n"}),(0,i.jsx)(s.mo,{children:"\u2212"}),(0,i.jsx)(s.mn,{children:"1"}),(0,i.jsx)(s.mo,{stretchy:"false",children:")"})]}),(0,i.jsx)(s.annotation,{encoding:"application/x-tex",children:"a+(n-1)"})]})})}),(0,i.jsxs)(s.span,{className:"katex-html","aria-hidden":"true",children:[(0,i.jsxs)(s.span,{className:"base",children:[(0,i.jsx)(s.span,{className:"strut",style:{height:"0.6667em",verticalAlign:"-0.0833em"}}),(0,i.jsx)(s.span,{className:"mord mathnormal",children:"a"}),(0,i.jsx)(s.span,{className:"mspace",style:{marginRight:"0.2222em"}}),(0,i.jsx)(s.span,{className:"mbin",children:"+"}),(0,i.jsx)(s.span,{className:"mspace",style:{marginRight:"0.2222em"}})]}),(0,i.jsxs)(s.span,{className:"base",children:[(0,i.jsx)(s.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,i.jsx)(s.span,{className:"mopen",children:"("}),(0,i.jsx)(s.span,{className:"mord mathnormal",children:"n"}),(0,i.jsx)(s.span,{className:"mspace",style:{marginRight:"0.2222em"}}),(0,i.jsx)(s.span,{className:"mbin",children:"\u2212"}),(0,i.jsx)(s.span,{className:"mspace",style:{marginRight:"0.2222em"}})]}),(0,i.jsxs)(s.span,{className:"base",children:[(0,i.jsx)(s.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,i.jsx)(s.span,{className:"mord",children:"1"}),(0,i.jsx)(s.span,{className:"mclose",children:")"})]})]})]}),"."]}),"\n",(0,i.jsxs)(s.p,{children:["Possiamo quindi immaginare cos\xec il nostro ",(0,i.jsx)(s.code,{children:"array"})," in memoria."]}),"\n",(0,i.jsxs)("figure",{children:[(0,i.jsx)("img",{src:(0,l.Ay)("/2025-26/img/assembler/esercitazioni/3/layout-1.drawio.png"),style:{maxWidth:"min(100%, 30rem)"},alt:"\nLo schema mostra come i primi 3 valori (le word 0x0001 = 1, 0x0100 = 256 e 0x0100 = 256) sono scritti in memoria in 6 byte consecutivi:\n0x01, 0x00, 0x00, 0x01, 0x00, 0x01.\nGli indirizzi di questi byte sono consecutivi: la prima coppia comincia ad 'array', la seconda ad 'array+2', la terza ad 'array+4'.\n",title:"\nCome le 3 word sono scritti in memoria in 6 byte consecutivi.\nGli indirizzi di questi byte sono consecutivi: la prima coppia comincia ad 'array', la seconda ad 'array+2', la terza ad 'array+4'.\n"}),(0,i.jsx)("figcaption",{children:(0,i.jsxs)(s.p,{children:["Layout di ",(0,i.jsx)(s.code,{children:"array"})," in memoria."]})})]}),"\n",(0,i.jsxs)(s.p,{children:["La lettura di una ",(0,i.jsx)(s.em,{children:"word"})," dalla memoria funziona quindi cos\xec: dato l'indirizzo ",(0,i.jsxs)(s.span,{className:"katex",children:[(0,i.jsx)(s.span,{className:"katex-mathml",children:(0,i.jsx)(s.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,i.jsxs)(s.semantics,{children:[(0,i.jsx)(s.mrow,{children:(0,i.jsx)(s.mi,{children:"a"})}),(0,i.jsx)(s.annotation,{encoding:"application/x-tex",children:"a"})]})})}),(0,i.jsx)(s.span,{className:"katex-html","aria-hidden":"true",children:(0,i.jsxs)(s.span,{className:"base",children:[(0,i.jsx)(s.span,{className:"strut",style:{height:"0.4306em"}}),(0,i.jsx)(s.span,{className:"mord mathnormal",children:"a"})]})})]}),", vengono letti i due byte agli indirizzi ",(0,i.jsxs)(s.span,{className:"katex",children:[(0,i.jsx)(s.span,{className:"katex-mathml",children:(0,i.jsx)(s.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,i.jsxs)(s.semantics,{children:[(0,i.jsx)(s.mrow,{children:(0,i.jsx)(s.mi,{children:"a"})}),(0,i.jsx)(s.annotation,{encoding:"application/x-tex",children:"a"})]})})}),(0,i.jsx)(s.span,{className:"katex-html","aria-hidden":"true",children:(0,i.jsxs)(s.span,{className:"base",children:[(0,i.jsx)(s.span,{className:"strut",style:{height:"0.4306em"}}),(0,i.jsx)(s.span,{className:"mord mathnormal",children:"a"})]})})]})," e ",(0,i.jsxs)(s.span,{className:"katex",children:[(0,i.jsx)(s.span,{className:"katex-mathml",children:(0,i.jsx)(s.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,i.jsxs)(s.semantics,{children:[(0,i.jsxs)(s.mrow,{children:[(0,i.jsx)(s.mi,{children:"a"}),(0,i.jsx)(s.mo,{children:"+"}),(0,i.jsx)(s.mn,{children:"1"})]}),(0,i.jsx)(s.annotation,{encoding:"application/x-tex",children:"a+1"})]})})}),(0,i.jsxs)(s.span,{className:"katex-html","aria-hidden":"true",children:[(0,i.jsxs)(s.span,{className:"base",children:[(0,i.jsx)(s.span,{className:"strut",style:{height:"0.6667em",verticalAlign:"-0.0833em"}}),(0,i.jsx)(s.span,{className:"mord mathnormal",children:"a"}),(0,i.jsx)(s.span,{className:"mspace",style:{marginRight:"0.2222em"}}),(0,i.jsx)(s.span,{className:"mbin",children:"+"}),(0,i.jsx)(s.span,{className:"mspace",style:{marginRight:"0.2222em"}})]}),(0,i.jsxs)(s.span,{className:"base",children:[(0,i.jsx)(s.span,{className:"strut",style:{height:"0.6444em"}}),(0,i.jsx)(s.span,{className:"mord",children:"1"})]})]})]})," e contatenati nell'ordine ",(0,i.jsxs)(s.span,{className:"katex",children:[(0,i.jsx)(s.span,{className:"katex-mathml",children:(0,i.jsx)(s.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,i.jsxs)(s.semantics,{children:[(0,i.jsxs)(s.mrow,{children:[(0,i.jsx)(s.mo,{stretchy:"false",children:"("}),(0,i.jsx)(s.mi,{children:"a"}),(0,i.jsx)(s.mo,{children:"+"}),(0,i.jsx)(s.mn,{children:"1"}),(0,i.jsx)(s.mo,{separator:"true",children:","}),(0,i.jsx)(s.mi,{children:"a"}),(0,i.jsx)(s.mo,{stretchy:"false",children:")"})]}),(0,i.jsx)(s.annotation,{encoding:"application/x-tex",children:"(a+1, a)"})]})})}),(0,i.jsxs)(s.span,{className:"katex-html","aria-hidden":"true",children:[(0,i.jsxs)(s.span,{className:"base",children:[(0,i.jsx)(s.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,i.jsx)(s.span,{className:"mopen",children:"("}),(0,i.jsx)(s.span,{className:"mord mathnormal",children:"a"}),(0,i.jsx)(s.span,{className:"mspace",style:{marginRight:"0.2222em"}}),(0,i.jsx)(s.span,{className:"mbin",children:"+"}),(0,i.jsx)(s.span,{className:"mspace",style:{marginRight:"0.2222em"}})]}),(0,i.jsxs)(s.span,{className:"base",children:[(0,i.jsx)(s.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,i.jsx)(s.span,{className:"mord",children:"1"}),(0,i.jsx)(s.span,{className:"mpunct",children:","}),(0,i.jsx)(s.span,{className:"mspace",style:{marginRight:"0.1667em"}}),(0,i.jsx)(s.span,{className:"mord mathnormal",children:"a"}),(0,i.jsx)(s.span,{className:"mclose",children:")"})]})]})]}),".\nUna istruzione come ",(0,i.jsx)(s.code,{children:"movw a, %bx"}),", quindi, salver\xe0 il contenuto di ",(0,i.jsxs)(s.span,{className:"katex",children:[(0,i.jsx)(s.span,{className:"katex-mathml",children:(0,i.jsx)(s.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,i.jsxs)(s.semantics,{children:[(0,i.jsxs)(s.mrow,{children:[(0,i.jsx)(s.mi,{children:"a"}),(0,i.jsx)(s.mo,{children:"+"}),(0,i.jsx)(s.mn,{children:"1"})]}),(0,i.jsx)(s.annotation,{encoding:"application/x-tex",children:"a+1"})]})})}),(0,i.jsxs)(s.span,{className:"katex-html","aria-hidden":"true",children:[(0,i.jsxs)(s.span,{className:"base",children:[(0,i.jsx)(s.span,{className:"strut",style:{height:"0.6667em",verticalAlign:"-0.0833em"}}),(0,i.jsx)(s.span,{className:"mord mathnormal",children:"a"}),(0,i.jsx)(s.span,{className:"mspace",style:{marginRight:"0.2222em"}}),(0,i.jsx)(s.span,{className:"mbin",children:"+"}),(0,i.jsx)(s.span,{className:"mspace",style:{marginRight:"0.2222em"}})]}),(0,i.jsxs)(s.span,{className:"base",children:[(0,i.jsx)(s.span,{className:"strut",style:{height:"0.6444em"}}),(0,i.jsx)(s.span,{className:"mord",children:"1"})]})]})]})," in ",(0,i.jsx)(s.code,{children:"%bh"})," e il contenuto di ",(0,i.jsxs)(s.span,{className:"katex",children:[(0,i.jsx)(s.span,{className:"katex-mathml",children:(0,i.jsx)(s.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,i.jsxs)(s.semantics,{children:[(0,i.jsx)(s.mrow,{children:(0,i.jsx)(s.mi,{children:"a"})}),(0,i.jsx)(s.annotation,{encoding:"application/x-tex",children:"a"})]})})}),(0,i.jsx)(s.span,{className:"katex-html","aria-hidden":"true",children:(0,i.jsxs)(s.span,{className:"base",children:[(0,i.jsx)(s.span,{className:"strut",style:{height:"0.4306em"}}),(0,i.jsx)(s.span,{className:"mord mathnormal",children:"a"})]})})]})," in ",(0,i.jsx)(s.code,{children:"%bl"}),"."]}),"\n",(0,i.jsxs)(s.p,{children:["Per la lettura di pi\xf9 ",(0,i.jsx)(s.em,{children:"word"})," consecutive, dobbiamo assicurarci di incrementare l'indirizzo di 2 alla volta: come mostrato in figura, il secondo valore \xe8 memorizzato a partire da ",(0,i.jsxs)(s.span,{className:"katex",children:[(0,i.jsx)(s.span,{className:"katex-mathml",children:(0,i.jsx)(s.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,i.jsxs)(s.semantics,{children:[(0,i.jsxs)(s.mrow,{children:[(0,i.jsx)(s.mi,{children:"a"}),(0,i.jsx)(s.mi,{children:"r"}),(0,i.jsx)(s.mi,{children:"r"}),(0,i.jsx)(s.mi,{children:"a"}),(0,i.jsx)(s.mi,{children:"y"}),(0,i.jsx)(s.mo,{children:"+"}),(0,i.jsx)(s.mn,{children:"2"})]}),(0,i.jsx)(s.annotation,{encoding:"application/x-tex",children:"array+2"})]})})}),(0,i.jsxs)(s.span,{className:"katex-html","aria-hidden":"true",children:[(0,i.jsxs)(s.span,{className:"base",children:[(0,i.jsx)(s.span,{className:"strut",style:{height:"0.7778em",verticalAlign:"-0.1944em"}}),(0,i.jsx)(s.span,{className:"mord mathnormal",children:"a"}),(0,i.jsx)(s.span,{className:"mord mathnormal",style:{marginRight:"0.02778em"},children:"rr"}),(0,i.jsx)(s.span,{className:"mord mathnormal",children:"a"}),(0,i.jsx)(s.span,{className:"mord mathnormal",style:{marginRight:"0.03588em"},children:"y"}),(0,i.jsx)(s.span,{className:"mspace",style:{marginRight:"0.2222em"}}),(0,i.jsx)(s.span,{className:"mbin",children:"+"}),(0,i.jsx)(s.span,{className:"mspace",style:{marginRight:"0.2222em"}})]}),(0,i.jsxs)(s.span,{className:"base",children:[(0,i.jsx)(s.span,{className:"strut",style:{height:"0.6444em"}}),(0,i.jsx)(s.span,{className:"mord",children:"2"})]})]})]}),", il terzo da ",(0,i.jsxs)(s.span,{className:"katex",children:[(0,i.jsx)(s.span,{className:"katex-mathml",children:(0,i.jsx)(s.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,i.jsxs)(s.semantics,{children:[(0,i.jsxs)(s.mrow,{children:[(0,i.jsx)(s.mi,{children:"a"}),(0,i.jsx)(s.mi,{children:"r"}),(0,i.jsx)(s.mi,{children:"r"}),(0,i.jsx)(s.mi,{children:"a"}),(0,i.jsx)(s.mi,{children:"y"}),(0,i.jsx)(s.mo,{children:"+"}),(0,i.jsx)(s.mn,{children:"4"})]}),(0,i.jsx)(s.annotation,{encoding:"application/x-tex",children:"array+4"})]})})}),(0,i.jsxs)(s.span,{className:"katex-html","aria-hidden":"true",children:[(0,i.jsxs)(s.span,{className:"base",children:[(0,i.jsx)(s.span,{className:"strut",style:{height:"0.7778em",verticalAlign:"-0.1944em"}}),(0,i.jsx)(s.span,{className:"mord mathnormal",children:"a"}),(0,i.jsx)(s.span,{className:"mord mathnormal",style:{marginRight:"0.02778em"},children:"rr"}),(0,i.jsx)(s.span,{className:"mord mathnormal",children:"a"}),(0,i.jsx)(s.span,{className:"mord mathnormal",style:{marginRight:"0.03588em"},children:"y"}),(0,i.jsx)(s.span,{className:"mspace",style:{marginRight:"0.2222em"}}),(0,i.jsx)(s.span,{className:"mbin",children:"+"}),(0,i.jsx)(s.span,{className:"mspace",style:{marginRight:"0.2222em"}})]}),(0,i.jsxs)(s.span,{className:"base",children:[(0,i.jsx)(s.span,{className:"strut",style:{height:"0.6444em"}}),(0,i.jsx)(s.span,{className:"mord",children:"4"})]})]})]}),", e cos\xec via."]}),"\n",(0,i.jsx)(s.p,{children:"Tornando per\xf2 al codice dell'esercizio, questo non succede:"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-assembler",children:"comp: \n// highlight-start\n    cmp array_len, %esi\n// highlight-end\n    je fine\n// highlight-start\n    movw array(%esi), %bx\n// highlight-end\n    cmpw %bx, %ax\n    jne poi\n    inc %cl\n\npoi:  \n// highlight-start\n    inc %esi\n// highlight-end\n    jmp comp\n\n"})}),"\n",(0,i.jsxs)(s.p,{children:["Ecco quindi spiegato cosa legge il programma dalla memoria:\nquando alla seconda iterazione si esegue ",(0,i.jsx)(s.code,{children:"movb array(%esi), %bx"}),", con ",(0,i.jsx)(s.code,{children:"%esi"})," che vale 1, si sta leggendo un valore composto dal byte meno significativo del secondo valore concatenato con il byte pi\xf9 significativo del primo.\nQuesto valore \xe8 del tutto estraneo e privo di senso se confrontato con ",(0,i.jsx)(s.code,{children:"array"})," cos\xec come \xe8 stato dichiarato e allocato, ma nell'eseguire le istruzioni il processore non sa e non controlla niente di tutto ci\xf2."]}),"\n",(0,i.jsxs)("figure",{children:[(0,i.jsx)("img",{src:(0,l.Ay)("/2025-26/img/assembler/esercitazioni/3/layout-2.drawio.png"),style:{maxWidth:"min(100%, 30rem)"},alt:"\nStesso schema di prima, con delle letture errate evidenziate. \nLeggendo due byte a partire da 'array+1' troviamo {0x00, 0x00} = 0x0000 = 0; a partire da 'array+3' troviamo {0x01, 0x00} = 0x0001 = 1.\nEntrambi i valori non fanno parte dell'array dichiarato.\n",title:"\nStesso schema di prima, con delle letture errate evidenziate. \nLeggendo due byte a partire da 'array+1' troviamo {0x00, 0x00} = 0x0000 = 0; a partire da 'array+3' troviamo {0x01, 0x00} = 0x0001 = 1.\nEntrambi i valori non fanno parte dell'array dichiarato.\n"}),(0,i.jsx)("figcaption",{children:(0,i.jsxs)(s.p,{children:["Lettura erronea di ",(0,i.jsx)(s.code,{children:"array"}),": sbagliando l'incremento dell'indirizzo, leggiamo dei byte senza alcuna relazione fra loro dalla memoria e li interpretiamo come parti di una word."]})})]}),"\n",(0,i.jsxs)(s.p,{children:["Abbiamo due strade per correggere questo errore.\nIl primo approccio \xe8 quello di incrementare ",(0,i.jsx)(s.code,{children:"%esi"})," di 2 alla volta, cos\xec che l'indirizzamento ",(0,i.jsx)(s.code,{children:"array(%esi)"})," risulti corretto.\nCon questo schema per\xf2 ",(0,i.jsx)(s.code,{children:"%esi"})," dovr\xe0 assumere i valori ",(0,i.jsxs)(s.span,{className:"katex",children:[(0,i.jsx)(s.span,{className:"katex-mathml",children:(0,i.jsx)(s.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,i.jsxs)(s.semantics,{children:[(0,i.jsxs)(s.mrow,{children:[(0,i.jsx)(s.mn,{children:"0"}),(0,i.jsx)(s.mo,{separator:"true",children:","}),(0,i.jsx)(s.mn,{children:"2"}),(0,i.jsx)(s.mo,{separator:"true",children:","}),(0,i.jsx)(s.mo,{children:"\u2026"}),(0,i.jsx)(s.mn,{children:"16"})]}),(0,i.jsx)(s.annotation,{encoding:"application/x-tex",children:"0, 2, \\dots 16"})]})})}),(0,i.jsx)(s.span,{className:"katex-html","aria-hidden":"true",children:(0,i.jsxs)(s.span,{className:"base",children:[(0,i.jsx)(s.span,{className:"strut",style:{height:"0.8389em",verticalAlign:"-0.1944em"}}),(0,i.jsx)(s.span,{className:"mord",children:"0"}),(0,i.jsx)(s.span,{className:"mpunct",children:","}),(0,i.jsx)(s.span,{className:"mspace",style:{marginRight:"0.1667em"}}),(0,i.jsx)(s.span,{className:"mord",children:"2"}),(0,i.jsx)(s.span,{className:"mpunct",children:","}),(0,i.jsx)(s.span,{className:"mspace",style:{marginRight:"0.1667em"}}),(0,i.jsx)(s.span,{className:"minner",children:"\u2026"}),(0,i.jsx)(s.span,{className:"mspace",style:{marginRight:"0.1667em"}}),(0,i.jsx)(s.span,{className:"mord",children:"16"})]})})]}),", cosa che lo rende non pi\xf9 un contatore confrontabile direttamente con ",(0,i.jsx)(s.code,{children:"array_len"})," come fatto a riga 17.\nSi dovr\xe0 gestire tale confronto in altro modo, per esempio usando un registro separato come contatore."]}),"\n",(0,i.jsxs)(s.p,{children:["La seconda strada \xe8 quella di usare il fattore di ",(0,i.jsx)(s.em,{children:"scala"})," dell'indirizzamento, che \xe8 pensato proprio per essere utilizzato in casi come questo.\nInfatti, ",(0,i.jsx)(s.code,{children:"array(, %esi, 2)"})," calcoler\xe0 l'indirizzo ",(0,i.jsxs)(s.span,{className:"katex",children:[(0,i.jsx)(s.span,{className:"katex-mathml",children:(0,i.jsx)(s.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,i.jsxs)(s.semantics,{children:[(0,i.jsxs)(s.mrow,{children:[(0,i.jsx)(s.mi,{children:"a"}),(0,i.jsx)(s.mi,{children:"r"}),(0,i.jsx)(s.mi,{children:"r"}),(0,i.jsx)(s.mi,{children:"a"}),(0,i.jsx)(s.mi,{children:"y"}),(0,i.jsx)(s.mo,{children:"+"}),(0,i.jsx)(s.mn,{children:"2"}),(0,i.jsx)(s.mo,{children:"\u2217"}),(0,i.jsx)(s.mi,{children:"e"}),(0,i.jsx)(s.mi,{children:"s"}),(0,i.jsx)(s.mi,{children:"i"})]}),(0,i.jsx)(s.annotation,{encoding:"application/x-tex",children:"array + 2 * esi"})]})})}),(0,i.jsxs)(s.span,{className:"katex-html","aria-hidden":"true",children:[(0,i.jsxs)(s.span,{className:"base",children:[(0,i.jsx)(s.span,{className:"strut",style:{height:"0.7778em",verticalAlign:"-0.1944em"}}),(0,i.jsx)(s.span,{className:"mord mathnormal",children:"a"}),(0,i.jsx)(s.span,{className:"mord mathnormal",style:{marginRight:"0.02778em"},children:"rr"}),(0,i.jsx)(s.span,{className:"mord mathnormal",children:"a"}),(0,i.jsx)(s.span,{className:"mord mathnormal",style:{marginRight:"0.03588em"},children:"y"}),(0,i.jsx)(s.span,{className:"mspace",style:{marginRight:"0.2222em"}}),(0,i.jsx)(s.span,{className:"mbin",children:"+"}),(0,i.jsx)(s.span,{className:"mspace",style:{marginRight:"0.2222em"}})]}),(0,i.jsxs)(s.span,{className:"base",children:[(0,i.jsx)(s.span,{className:"strut",style:{height:"0.6444em"}}),(0,i.jsx)(s.span,{className:"mord",children:"2"}),(0,i.jsx)(s.span,{className:"mspace",style:{marginRight:"0.2222em"}}),(0,i.jsx)(s.span,{className:"mbin",children:"\u2217"}),(0,i.jsx)(s.span,{className:"mspace",style:{marginRight:"0.2222em"}})]}),(0,i.jsxs)(s.span,{className:"base",children:[(0,i.jsx)(s.span,{className:"strut",style:{height:"0.6595em"}}),(0,i.jsx)(s.span,{className:"mord mathnormal",children:"es"}),(0,i.jsx)(s.span,{className:"mord mathnormal",children:"i"})]})]})]}),".\nDa notare la virgola subito dopo la parentesi, che sta a indicare che il registro ",(0,i.jsx)(s.em,{children:"base"})," \xe8 stato omesso, mentre ",(0,i.jsx)(s.code,{children:"%esi"})," \xe8 ",(0,i.jsx)(s.em,{children:"indice"}),"."]}),"\n",(0,i.jsxs)(s.p,{children:["Per concludere, torniamo sul codice C che abbiamo visto prima come modello di questo programma: come viene gestito l\xec questo problema?\nIn quel codice C non vi \xe8 alcun errore perch\xe9 ",(0,i.jsx)(s.code,{children:"array[esi]"}),", sfruttando la tipizzazione e l'aritmetica dei puntatori, applica sempre i fattori di scala corretti.\nInfatti, mentre il processore che esegue istruzioni assembler non ha idea del significato di tali istruzioni, linguaggi di livello pi\xf9 alto introducono concetti come i tipi proprio per permettere di esprimere questi significati e occuparsene a tempo di compilazione per produrre assembler corretto."]}),"\n",(0,i.jsxs)(s.p,{children:["Il codice finale, scaricabile ",(0,i.jsx)(s.a,{href:"pathname:///2025-26/code/assembler/2/conta_num_debug_sol.s",children:"qui"}),", \xe8 il seguente:"]}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-assembler",metastring:"showLineNumbers",children:'.include "./files/utility.s"\n\n.data\narray:      .word 1, 256, 256, 512, 42, 2048, 1024, 1, 0\narray_len:  .long 9\nnumero:     .word 1\n\n.text\n\n_main:\n    nop\n    mov $0, %cl\n    mov numero, %ax\n    mov $0, %esi\n\ncomp: \n    cmp array_len, %esi\n    je fine\n// highlight-start\n    cmpw array(, %esi, 2), %ax\n// highlight-end\n    jne poi\n    inc %cl\n\npoi:  \n    inc %esi\n    jmp comp\n\nfine: \n    mov %cl, %al\n    call outdecimal_byte\n    ret\n\n'})}),"\n",(0,i.jsx)(s.h2,{id:"esercizio-31-esercizio-desame-2021-01-08",children:"Esercizio 3.1: esercizio d'esame 2021-01-08"}),"\n",(0,i.jsxs)(s.p,{children:["Il testo con soluzione si trova ",(0,i.jsx)(s.a,{href:"http://docenti.ing.unipi.it/~a080368/Teaching/RetiLogiche/pdf/Esami/210108/210108_1.zip",children:"qui"}),"."]}),"\n",(0,i.jsx)(s.admonition,{title:"Provare da s\xe9",type:"tip",children:(0,i.jsx)(s.p,{children:"Provare a svolgere da s\xe9 l'esercizio, prima di guardare la soluzione o andare oltre per la discussione."})}),"\n",(0,i.jsx)(s.p,{children:"Questo esercizio pone principalmente tre spunti."}),"\n",(0,i.jsxs)(s.p,{children:["Il primo \xe8 la gestione dell'input, da eseguire con un loop di ",(0,i.jsx)(s.code,{children:"inchar"})," e controlli, facendo ",(0,i.jsx)(s.code,{children:"outchar"})," solo quando il carattere \xe8 accettato.\nQuesto \xe8 stato gi\xe0 visto, per esempio, nell'esercizio 2.1."]}),"\n",(0,i.jsxs)(s.p,{children:["Il secondo spunto riguarda il ",(0,i.jsx)(s.em,{children:"dimensionamento"})," dei dati da gestire.\nInfatti, dobbiamo scegliere se usare 8, 16 o 32 bit, e possiamo farlo solo cercando di capire su quanti bit sta il numero pi\xf9 grande che possiamo gestire."]}),"\n",(0,i.jsxs)(s.p,{children:["Data la natura del problema, \xe8 facile intuire che questo si trova quando ",(0,i.jsxs)(s.span,{className:"katex",children:[(0,i.jsx)(s.span,{className:"katex-mathml",children:(0,i.jsx)(s.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,i.jsxs)(s.semantics,{children:[(0,i.jsxs)(s.mrow,{children:[(0,i.jsx)(s.mi,{children:"N"}),(0,i.jsx)(s.mo,{children:"="}),(0,i.jsx)(s.mn,{children:"9"})]}),(0,i.jsx)(s.annotation,{encoding:"application/x-tex",children:"N = 9"})]})})}),(0,i.jsxs)(s.span,{className:"katex-html","aria-hidden":"true",children:[(0,i.jsxs)(s.span,{className:"base",children:[(0,i.jsx)(s.span,{className:"strut",style:{height:"0.6833em"}}),(0,i.jsx)(s.span,{className:"mord mathnormal",style:{marginRight:"0.10903em"},children:"N"}),(0,i.jsx)(s.span,{className:"mspace",style:{marginRight:"0.2778em"}}),(0,i.jsx)(s.span,{className:"mrel",children:"="}),(0,i.jsx)(s.span,{className:"mspace",style:{marginRight:"0.2778em"}})]}),(0,i.jsxs)(s.span,{className:"base",children:[(0,i.jsx)(s.span,{className:"strut",style:{height:"0.6444em"}}),(0,i.jsx)(s.span,{className:"mord",children:"9"})]})]})]})," e ",(0,i.jsxs)(s.span,{className:"katex",children:[(0,i.jsx)(s.span,{className:"katex-mathml",children:(0,i.jsx)(s.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,i.jsxs)(s.semantics,{children:[(0,i.jsxs)(s.mrow,{children:[(0,i.jsx)(s.mi,{children:"k"}),(0,i.jsx)(s.mo,{children:"="}),(0,i.jsx)(s.mn,{children:"9"})]}),(0,i.jsx)(s.annotation,{encoding:"application/x-tex",children:"k = 9"})]})})}),(0,i.jsxs)(s.span,{className:"katex-html","aria-hidden":"true",children:[(0,i.jsxs)(s.span,{className:"base",children:[(0,i.jsx)(s.span,{className:"strut",style:{height:"0.6944em"}}),(0,i.jsx)(s.span,{className:"mord mathnormal",style:{marginRight:"0.03148em"},children:"k"}),(0,i.jsx)(s.span,{className:"mspace",style:{marginRight:"0.2778em"}}),(0,i.jsx)(s.span,{className:"mrel",children:"="}),(0,i.jsx)(s.span,{className:"mspace",style:{marginRight:"0.2778em"}})]}),(0,i.jsxs)(s.span,{className:"base",children:[(0,i.jsx)(s.span,{className:"strut",style:{height:"0.6444em"}}),(0,i.jsx)(s.span,{className:"mord",children:"9"})]})]})]}),".\nDovremmo stampare un triangolo 9 righe, ciascuna composta da 1 a 9 numeri, a partire da 1 e di passo 9.\nDa una parte, potremmo ricordarci questa \xe8 una sequenza nota: la somma di ",(0,i.jsxs)(s.span,{className:"katex",children:[(0,i.jsx)(s.span,{className:"katex-mathml",children:(0,i.jsx)(s.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,i.jsxs)(s.semantics,{children:[(0,i.jsxs)(s.mrow,{children:[(0,i.jsx)(s.mn,{children:"1"}),(0,i.jsx)(s.mo,{children:"+"}),(0,i.jsx)(s.mn,{children:"2"}),(0,i.jsx)(s.mo,{children:"+"}),(0,i.jsx)(s.mi,{mathvariant:"normal",children:"."}),(0,i.jsx)(s.mi,{mathvariant:"normal",children:"."}),(0,i.jsx)(s.mi,{mathvariant:"normal",children:"."}),(0,i.jsx)(s.mo,{children:"+"}),(0,i.jsx)(s.mi,{children:"n"})]}),(0,i.jsx)(s.annotation,{encoding:"application/x-tex",children:"1 + 2 + ... + n"})]})})}),(0,i.jsxs)(s.span,{className:"katex-html","aria-hidden":"true",children:[(0,i.jsxs)(s.span,{className:"base",children:[(0,i.jsx)(s.span,{className:"strut",style:{height:"0.7278em",verticalAlign:"-0.0833em"}}),(0,i.jsx)(s.span,{className:"mord",children:"1"}),(0,i.jsx)(s.span,{className:"mspace",style:{marginRight:"0.2222em"}}),(0,i.jsx)(s.span,{className:"mbin",children:"+"}),(0,i.jsx)(s.span,{className:"mspace",style:{marginRight:"0.2222em"}})]}),(0,i.jsxs)(s.span,{className:"base",children:[(0,i.jsx)(s.span,{className:"strut",style:{height:"0.7278em",verticalAlign:"-0.0833em"}}),(0,i.jsx)(s.span,{className:"mord",children:"2"}),(0,i.jsx)(s.span,{className:"mspace",style:{marginRight:"0.2222em"}}),(0,i.jsx)(s.span,{className:"mbin",children:"+"}),(0,i.jsx)(s.span,{className:"mspace",style:{marginRight:"0.2222em"}})]}),(0,i.jsxs)(s.span,{className:"base",children:[(0,i.jsx)(s.span,{className:"strut",style:{height:"0.6667em",verticalAlign:"-0.0833em"}}),(0,i.jsx)(s.span,{className:"mord",children:"..."}),(0,i.jsx)(s.span,{className:"mspace",style:{marginRight:"0.2222em"}}),(0,i.jsx)(s.span,{className:"mbin",children:"+"}),(0,i.jsx)(s.span,{className:"mspace",style:{marginRight:"0.2222em"}})]}),(0,i.jsxs)(s.span,{className:"base",children:[(0,i.jsx)(s.span,{className:"strut",style:{height:"0.4306em"}}),(0,i.jsx)(s.span,{className:"mord mathnormal",children:"n"})]})]})]})," \xe8 ",(0,i.jsxs)(s.span,{className:"katex",children:[(0,i.jsx)(s.span,{className:"katex-mathml",children:(0,i.jsx)(s.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,i.jsxs)(s.semantics,{children:[(0,i.jsx)(s.mrow,{children:(0,i.jsxs)(s.mfrac,{children:[(0,i.jsxs)(s.mrow,{children:[(0,i.jsx)(s.mi,{children:"n"}),(0,i.jsx)(s.mo,{stretchy:"false",children:"("}),(0,i.jsx)(s.mi,{children:"n"}),(0,i.jsx)(s.mo,{children:"+"}),(0,i.jsx)(s.mn,{children:"1"}),(0,i.jsx)(s.mo,{stretchy:"false",children:")"})]}),(0,i.jsx)(s.mn,{children:"2"})]})}),(0,i.jsx)(s.annotation,{encoding:"application/x-tex",children:"\\frac{n(n+1)}{2}"})]})})}),(0,i.jsx)(s.span,{className:"katex-html","aria-hidden":"true",children:(0,i.jsxs)(s.span,{className:"base",children:[(0,i.jsx)(s.span,{className:"strut",style:{height:"1.355em",verticalAlign:"-0.345em"}}),(0,i.jsxs)(s.span,{className:"mord",children:[(0,i.jsx)(s.span,{className:"mopen nulldelimiter"}),(0,i.jsx)(s.span,{className:"mfrac",children:(0,i.jsxs)(s.span,{className:"vlist-t vlist-t2",children:[(0,i.jsxs)(s.span,{className:"vlist-r",children:[(0,i.jsxs)(s.span,{className:"vlist",style:{height:"1.01em"},children:[(0,i.jsxs)(s.span,{style:{top:"-2.655em"},children:[(0,i.jsx)(s.span,{className:"pstrut",style:{height:"3em"}}),(0,i.jsx)(s.span,{className:"sizing reset-size6 size3 mtight",children:(0,i.jsx)(s.span,{className:"mord mtight",children:(0,i.jsx)(s.span,{className:"mord mtight",children:"2"})})})]}),(0,i.jsxs)(s.span,{style:{top:"-3.23em"},children:[(0,i.jsx)(s.span,{className:"pstrut",style:{height:"3em"}}),(0,i.jsx)(s.span,{className:"frac-line",style:{borderBottomWidth:"0.04em"}})]}),(0,i.jsxs)(s.span,{style:{top:"-3.485em"},children:[(0,i.jsx)(s.span,{className:"pstrut",style:{height:"3em"}}),(0,i.jsx)(s.span,{className:"sizing reset-size6 size3 mtight",children:(0,i.jsxs)(s.span,{className:"mord mtight",children:[(0,i.jsx)(s.span,{className:"mord mathnormal mtight",children:"n"}),(0,i.jsx)(s.span,{className:"mopen mtight",children:"("}),(0,i.jsx)(s.span,{className:"mord mathnormal mtight",children:"n"}),(0,i.jsx)(s.span,{className:"mbin mtight",children:"+"}),(0,i.jsx)(s.span,{className:"mord mtight",children:"1"}),(0,i.jsx)(s.span,{className:"mclose mtight",children:")"})]})})]})]}),(0,i.jsx)(s.span,{className:"vlist-s",children:"\u200b"})]}),(0,i.jsx)(s.span,{className:"vlist-r",children:(0,i.jsx)(s.span,{className:"vlist",style:{height:"0.345em"},children:(0,i.jsx)(s.span,{})})})]})}),(0,i.jsx)(s.span,{className:"mclose nulldelimiter"})]})]})})]}),", quindi abbiamo  ",(0,i.jsxs)(s.span,{className:"katex",children:[(0,i.jsx)(s.span,{className:"katex-mathml",children:(0,i.jsx)(s.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,i.jsxs)(s.semantics,{children:[(0,i.jsxs)(s.mrow,{children:[(0,i.jsx)(s.mn,{children:"9"}),(0,i.jsx)(s.mo,{children:"\u22c5"}),(0,i.jsx)(s.mn,{children:"10"}),(0,i.jsx)(s.mi,{mathvariant:"normal",children:"/"}),(0,i.jsx)(s.mn,{children:"2"}),(0,i.jsx)(s.mo,{children:"="}),(0,i.jsx)(s.mn,{children:"45"})]}),(0,i.jsx)(s.annotation,{encoding:"application/x-tex",children:"9 \\cdot 10/2 = 45"})]})})}),(0,i.jsxs)(s.span,{className:"katex-html","aria-hidden":"true",children:[(0,i.jsxs)(s.span,{className:"base",children:[(0,i.jsx)(s.span,{className:"strut",style:{height:"0.6444em"}}),(0,i.jsx)(s.span,{className:"mord",children:"9"}),(0,i.jsx)(s.span,{className:"mspace",style:{marginRight:"0.2222em"}}),(0,i.jsx)(s.span,{className:"mbin",children:"\u22c5"}),(0,i.jsx)(s.span,{className:"mspace",style:{marginRight:"0.2222em"}})]}),(0,i.jsxs)(s.span,{className:"base",children:[(0,i.jsx)(s.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,i.jsx)(s.span,{className:"mord",children:"10/2"}),(0,i.jsx)(s.span,{className:"mspace",style:{marginRight:"0.2778em"}}),(0,i.jsx)(s.span,{className:"mrel",children:"="}),(0,i.jsx)(s.span,{className:"mspace",style:{marginRight:"0.2778em"}})]}),(0,i.jsxs)(s.span,{className:"base",children:[(0,i.jsx)(s.span,{className:"strut",style:{height:"0.6444em"}}),(0,i.jsx)(s.span,{className:"mord",children:"45"})]})]})]})," elementi.\nTuttavia, un approccio pi\xf9 semplice porta a un risultato simile: di sicuro il triangolo avr\xe0 meno elementi di un quadrato di lato 9, composto da ",(0,i.jsxs)(s.span,{className:"katex",children:[(0,i.jsx)(s.span,{className:"katex-mathml",children:(0,i.jsx)(s.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,i.jsxs)(s.semantics,{children:[(0,i.jsxs)(s.mrow,{children:[(0,i.jsx)(s.mn,{children:"9"}),(0,i.jsx)(s.mo,{children:"\u22c5"}),(0,i.jsx)(s.mn,{children:"9"}),(0,i.jsx)(s.mo,{children:"="}),(0,i.jsx)(s.mn,{children:"81"})]}),(0,i.jsx)(s.annotation,{encoding:"application/x-tex",children:"9 \\cdot 9 = 81"})]})})}),(0,i.jsxs)(s.span,{className:"katex-html","aria-hidden":"true",children:[(0,i.jsxs)(s.span,{className:"base",children:[(0,i.jsx)(s.span,{className:"strut",style:{height:"0.6444em"}}),(0,i.jsx)(s.span,{className:"mord",children:"9"}),(0,i.jsx)(s.span,{className:"mspace",style:{marginRight:"0.2222em"}}),(0,i.jsx)(s.span,{className:"mbin",children:"\u22c5"}),(0,i.jsx)(s.span,{className:"mspace",style:{marginRight:"0.2222em"}})]}),(0,i.jsxs)(s.span,{className:"base",children:[(0,i.jsx)(s.span,{className:"strut",style:{height:"0.6444em"}}),(0,i.jsx)(s.span,{className:"mord",children:"9"}),(0,i.jsx)(s.span,{className:"mspace",style:{marginRight:"0.2778em"}}),(0,i.jsx)(s.span,{className:"mrel",children:"="}),(0,i.jsx)(s.span,{className:"mspace",style:{marginRight:"0.2778em"}})]}),(0,i.jsxs)(s.span,{className:"base",children:[(0,i.jsx)(s.span,{className:"strut",style:{height:"0.6444em"}}),(0,i.jsx)(s.span,{className:"mord",children:"81"})]})]})]})," elementi e, dato che la diagonale \xe8 inclusa, avr\xe0 pi\xf9 della met\xe0 di questo, cio\xe8 ",(0,i.jsxs)(s.span,{className:"katex",children:[(0,i.jsx)(s.span,{className:"katex-mathml",children:(0,i.jsx)(s.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,i.jsxs)(s.semantics,{children:[(0,i.jsxs)(s.mrow,{children:[(0,i.jsx)(s.mn,{children:"81"}),(0,i.jsx)(s.mi,{mathvariant:"normal",children:"/"}),(0,i.jsx)(s.mn,{children:"2"})]}),(0,i.jsx)(s.annotation,{encoding:"application/x-tex",children:"81 / 2"})]})})}),(0,i.jsx)(s.span,{className:"katex-html","aria-hidden":"true",children:(0,i.jsxs)(s.span,{className:"base",children:[(0,i.jsx)(s.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,i.jsx)(s.span,{className:"mord",children:"81/2"})]})})]}),".\nPossiamo quindi dire con questo ragionamento che sono pi\xf9 di ",(0,i.jsxs)(s.span,{className:"katex",children:[(0,i.jsx)(s.span,{className:"katex-mathml",children:(0,i.jsx)(s.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,i.jsxs)(s.semantics,{children:[(0,i.jsx)(s.mrow,{children:(0,i.jsx)(s.mn,{children:"41"})}),(0,i.jsx)(s.annotation,{encoding:"application/x-tex",children:"41"})]})})}),(0,i.jsx)(s.span,{className:"katex-html","aria-hidden":"true",children:(0,i.jsxs)(s.span,{className:"base",children:[(0,i.jsx)(s.span,{className:"strut",style:{height:"0.6444em"}}),(0,i.jsx)(s.span,{className:"mord",children:"41"})]})})]})," elementi e meno di ",(0,i.jsxs)(s.span,{className:"katex",children:[(0,i.jsx)(s.span,{className:"katex-mathml",children:(0,i.jsx)(s.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,i.jsxs)(s.semantics,{children:[(0,i.jsx)(s.mrow,{children:(0,i.jsx)(s.mn,{children:"81"})}),(0,i.jsx)(s.annotation,{encoding:"application/x-tex",children:"81"})]})})}),(0,i.jsx)(s.span,{className:"katex-html","aria-hidden":"true",children:(0,i.jsxs)(s.span,{className:"base",children:[(0,i.jsx)(s.span,{className:"strut",style:{height:"0.6444em"}}),(0,i.jsx)(s.span,{className:"mord",children:"81"})]})})]}),", mentre usando la formula esatta troviamo che sono ",(0,i.jsxs)(s.span,{className:"katex",children:[(0,i.jsx)(s.span,{className:"katex-mathml",children:(0,i.jsx)(s.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,i.jsxs)(s.semantics,{children:[(0,i.jsx)(s.mrow,{children:(0,i.jsx)(s.mn,{children:"45"})}),(0,i.jsx)(s.annotation,{encoding:"application/x-tex",children:"45"})]})})}),(0,i.jsx)(s.span,{className:"katex-html","aria-hidden":"true",children:(0,i.jsxs)(s.span,{className:"base",children:[(0,i.jsx)(s.span,{className:"strut",style:{height:"0.6444em"}}),(0,i.jsx)(s.span,{className:"mord",children:"45"})]})})]}),"."]}),"\n",(0,i.jsxs)(s.p,{children:["Dato che incrementiamo di passo 9 ogni volta, il numero di posizione ",(0,i.jsxs)(s.span,{className:"katex",children:[(0,i.jsx)(s.span,{className:"katex-mathml",children:(0,i.jsx)(s.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,i.jsxs)(s.semantics,{children:[(0,i.jsx)(s.mrow,{children:(0,i.jsx)(s.mi,{children:"j"})}),(0,i.jsx)(s.annotation,{encoding:"application/x-tex",children:"j"})]})})}),(0,i.jsx)(s.span,{className:"katex-html","aria-hidden":"true",children:(0,i.jsxs)(s.span,{className:"base",children:[(0,i.jsx)(s.span,{className:"strut",style:{height:"0.854em",verticalAlign:"-0.1944em"}}),(0,i.jsx)(s.span,{className:"mord mathnormal",style:{marginRight:"0.05724em"},children:"j"})]})})]})," sar\xe0 ",(0,i.jsxs)(s.span,{className:"katex",children:[(0,i.jsx)(s.span,{className:"katex-mathml",children:(0,i.jsx)(s.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,i.jsxs)(s.semantics,{children:[(0,i.jsxs)(s.mrow,{children:[(0,i.jsx)(s.mo,{stretchy:"false",children:"("}),(0,i.jsx)(s.mi,{children:"j"}),(0,i.jsx)(s.mo,{children:"\u2212"}),(0,i.jsx)(s.mn,{children:"1"}),(0,i.jsx)(s.mo,{stretchy:"false",children:")"}),(0,i.jsx)(s.mo,{children:"\u22c5"}),(0,i.jsx)(s.mn,{children:"9"}),(0,i.jsx)(s.mo,{children:"+"}),(0,i.jsx)(s.mn,{children:"1"})]}),(0,i.jsx)(s.annotation,{encoding:"application/x-tex",children:"(j-1) \\cdot 9 + 1"})]})})}),(0,i.jsxs)(s.span,{className:"katex-html","aria-hidden":"true",children:[(0,i.jsxs)(s.span,{className:"base",children:[(0,i.jsx)(s.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,i.jsx)(s.span,{className:"mopen",children:"("}),(0,i.jsx)(s.span,{className:"mord mathnormal",style:{marginRight:"0.05724em"},children:"j"}),(0,i.jsx)(s.span,{className:"mspace",style:{marginRight:"0.2222em"}}),(0,i.jsx)(s.span,{className:"mbin",children:"\u2212"}),(0,i.jsx)(s.span,{className:"mspace",style:{marginRight:"0.2222em"}})]}),(0,i.jsxs)(s.span,{className:"base",children:[(0,i.jsx)(s.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,i.jsx)(s.span,{className:"mord",children:"1"}),(0,i.jsx)(s.span,{className:"mclose",children:")"}),(0,i.jsx)(s.span,{className:"mspace",style:{marginRight:"0.2222em"}}),(0,i.jsx)(s.span,{className:"mbin",children:"\u22c5"}),(0,i.jsx)(s.span,{className:"mspace",style:{marginRight:"0.2222em"}})]}),(0,i.jsxs)(s.span,{className:"base",children:[(0,i.jsx)(s.span,{className:"strut",style:{height:"0.7278em",verticalAlign:"-0.0833em"}}),(0,i.jsx)(s.span,{className:"mord",children:"9"}),(0,i.jsx)(s.span,{className:"mspace",style:{marginRight:"0.2222em"}}),(0,i.jsx)(s.span,{className:"mbin",children:"+"}),(0,i.jsx)(s.span,{className:"mspace",style:{marginRight:"0.2222em"}})]}),(0,i.jsxs)(s.span,{className:"base",children:[(0,i.jsx)(s.span,{className:"strut",style:{height:"0.6444em"}}),(0,i.jsx)(s.span,{className:"mord",children:"1"})]})]})]}),".\nConsiderando per la stima di prima il 41-esimo elemento, abbiamo ",(0,i.jsxs)(s.span,{className:"katex",children:[(0,i.jsx)(s.span,{className:"katex-mathml",children:(0,i.jsx)(s.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,i.jsxs)(s.semantics,{children:[(0,i.jsxs)(s.mrow,{children:[(0,i.jsx)(s.mn,{children:"40"}),(0,i.jsx)(s.mo,{children:"\u22c5"}),(0,i.jsx)(s.mn,{children:"9"}),(0,i.jsx)(s.mo,{children:"+"}),(0,i.jsx)(s.mn,{children:"1"}),(0,i.jsx)(s.mo,{children:"="}),(0,i.jsx)(s.mn,{children:"361"})]}),(0,i.jsx)(s.annotation,{encoding:"application/x-tex",children:"40 \\cdot 9 + 1 = 361"})]})})}),(0,i.jsxs)(s.span,{className:"katex-html","aria-hidden":"true",children:[(0,i.jsxs)(s.span,{className:"base",children:[(0,i.jsx)(s.span,{className:"strut",style:{height:"0.6444em"}}),(0,i.jsx)(s.span,{className:"mord",children:"40"}),(0,i.jsx)(s.span,{className:"mspace",style:{marginRight:"0.2222em"}}),(0,i.jsx)(s.span,{className:"mbin",children:"\u22c5"}),(0,i.jsx)(s.span,{className:"mspace",style:{marginRight:"0.2222em"}})]}),(0,i.jsxs)(s.span,{className:"base",children:[(0,i.jsx)(s.span,{className:"strut",style:{height:"0.7278em",verticalAlign:"-0.0833em"}}),(0,i.jsx)(s.span,{className:"mord",children:"9"}),(0,i.jsx)(s.span,{className:"mspace",style:{marginRight:"0.2222em"}}),(0,i.jsx)(s.span,{className:"mbin",children:"+"}),(0,i.jsx)(s.span,{className:"mspace",style:{marginRight:"0.2222em"}})]}),(0,i.jsxs)(s.span,{className:"base",children:[(0,i.jsx)(s.span,{className:"strut",style:{height:"0.6444em"}}),(0,i.jsx)(s.span,{className:"mord",children:"1"}),(0,i.jsx)(s.span,{className:"mspace",style:{marginRight:"0.2778em"}}),(0,i.jsx)(s.span,{className:"mrel",children:"="}),(0,i.jsx)(s.span,{className:"mspace",style:{marginRight:"0.2778em"}})]}),(0,i.jsxs)(s.span,{className:"base",children:[(0,i.jsx)(s.span,{className:"strut",style:{height:"0.6444em"}}),(0,i.jsx)(s.span,{className:"mord",children:"361"})]})]})]}),", mentre l'81-esimo elemento (che non sar\xe0 mai presente) sarebbe ",(0,i.jsxs)(s.span,{className:"katex",children:[(0,i.jsx)(s.span,{className:"katex-mathml",children:(0,i.jsx)(s.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,i.jsxs)(s.semantics,{children:[(0,i.jsxs)(s.mrow,{children:[(0,i.jsx)(s.mn,{children:"80"}),(0,i.jsx)(s.mo,{children:"\u22c5"}),(0,i.jsx)(s.mn,{children:"9"}),(0,i.jsx)(s.mo,{children:"+"}),(0,i.jsx)(s.mn,{children:"1"}),(0,i.jsx)(s.mo,{children:"="}),(0,i.jsx)(s.mn,{children:"721"})]}),(0,i.jsx)(s.annotation,{encoding:"application/x-tex",children:"80 \\cdot 9 + 1 = 721"})]})})}),(0,i.jsxs)(s.span,{className:"katex-html","aria-hidden":"true",children:[(0,i.jsxs)(s.span,{className:"base",children:[(0,i.jsx)(s.span,{className:"strut",style:{height:"0.6444em"}}),(0,i.jsx)(s.span,{className:"mord",children:"80"}),(0,i.jsx)(s.span,{className:"mspace",style:{marginRight:"0.2222em"}}),(0,i.jsx)(s.span,{className:"mbin",children:"\u22c5"}),(0,i.jsx)(s.span,{className:"mspace",style:{marginRight:"0.2222em"}})]}),(0,i.jsxs)(s.span,{className:"base",children:[(0,i.jsx)(s.span,{className:"strut",style:{height:"0.7278em",verticalAlign:"-0.0833em"}}),(0,i.jsx)(s.span,{className:"mord",children:"9"}),(0,i.jsx)(s.span,{className:"mspace",style:{marginRight:"0.2222em"}}),(0,i.jsx)(s.span,{className:"mbin",children:"+"}),(0,i.jsx)(s.span,{className:"mspace",style:{marginRight:"0.2222em"}})]}),(0,i.jsxs)(s.span,{className:"base",children:[(0,i.jsx)(s.span,{className:"strut",style:{height:"0.6444em"}}),(0,i.jsx)(s.span,{className:"mord",children:"1"}),(0,i.jsx)(s.span,{className:"mspace",style:{marginRight:"0.2778em"}}),(0,i.jsx)(s.span,{className:"mrel",children:"="}),(0,i.jsx)(s.span,{className:"mspace",style:{marginRight:"0.2778em"}})]}),(0,i.jsxs)(s.span,{className:"base",children:[(0,i.jsx)(s.span,{className:"strut",style:{height:"0.6444em"}}),(0,i.jsx)(s.span,{className:"mord",children:"721"})]})]})]}),".\nIl valore esatto, se ci ricordiamo la formula di cui sopra, \xe8 invece ",(0,i.jsxs)(s.span,{className:"katex",children:[(0,i.jsx)(s.span,{className:"katex-mathml",children:(0,i.jsx)(s.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,i.jsxs)(s.semantics,{children:[(0,i.jsxs)(s.mrow,{children:[(0,i.jsx)(s.mn,{children:"44"}),(0,i.jsx)(s.mo,{children:"\u22c5"}),(0,i.jsx)(s.mn,{children:"9"}),(0,i.jsx)(s.mo,{children:"+"}),(0,i.jsx)(s.mn,{children:"1"}),(0,i.jsx)(s.mo,{children:"="}),(0,i.jsx)(s.mn,{children:"397"})]}),(0,i.jsx)(s.annotation,{encoding:"application/x-tex",children:"44 \\cdot 9 + 1 = 397"})]})})}),(0,i.jsxs)(s.span,{className:"katex-html","aria-hidden":"true",children:[(0,i.jsxs)(s.span,{className:"base",children:[(0,i.jsx)(s.span,{className:"strut",style:{height:"0.6444em"}}),(0,i.jsx)(s.span,{className:"mord",children:"44"}),(0,i.jsx)(s.span,{className:"mspace",style:{marginRight:"0.2222em"}}),(0,i.jsx)(s.span,{className:"mbin",children:"\u22c5"}),(0,i.jsx)(s.span,{className:"mspace",style:{marginRight:"0.2222em"}})]}),(0,i.jsxs)(s.span,{className:"base",children:[(0,i.jsx)(s.span,{className:"strut",style:{height:"0.7278em",verticalAlign:"-0.0833em"}}),(0,i.jsx)(s.span,{className:"mord",children:"9"}),(0,i.jsx)(s.span,{className:"mspace",style:{marginRight:"0.2222em"}}),(0,i.jsx)(s.span,{className:"mbin",children:"+"}),(0,i.jsx)(s.span,{className:"mspace",style:{marginRight:"0.2222em"}})]}),(0,i.jsxs)(s.span,{className:"base",children:[(0,i.jsx)(s.span,{className:"strut",style:{height:"0.6444em"}}),(0,i.jsx)(s.span,{className:"mord",children:"1"}),(0,i.jsx)(s.span,{className:"mspace",style:{marginRight:"0.2778em"}}),(0,i.jsx)(s.span,{className:"mrel",children:"="}),(0,i.jsx)(s.span,{className:"mspace",style:{marginRight:"0.2778em"}})]}),(0,i.jsxs)(s.span,{className:"base",children:[(0,i.jsx)(s.span,{className:"strut",style:{height:"0.6444em"}}),(0,i.jsx)(s.span,{className:"mord",children:"397"})]})]})]}),".\nUn tale numero deve essere rappresentato su pi\xf9 di 8 bit, ma sta senza problemi in 16 bit: svolgeremo quindi i nostri calcoli usando delle ",(0,i.jsx)(s.em,{children:"word"})," di 16 bit."]}),"\n",(0,i.jsx)(s.p,{children:"Non resta quindi che fare la stampa del triangolo.\nQuesto si pu\xf2 scrivere come un doppio loop, dove il loop interno usa il contatore esterno per determinare quando uscire stampando una nuova riga, mentre un registro contatore viene utilizzato durante ogni ciclo per calcolare il nuovo numero da stampare.\nIn (pseudo) C, tale ciclo avrebbe una forma simile:"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-C",children:"short c = 1; // word da 16 bit\nfor(int i = 0; i < n; i++) {\n    for(int j = 0; j < i + 1; j++) {\n        outdecimal_word(c);\n        outchar(' ');\n        c += k;\n    }\n    outline()\n}\n"})}),"\n",(0,i.jsx)(s.h2,{id:"esercizi-per-casa",children:"Esercizi per casa"}),"\n",(0,i.jsx)(s.h3,{id:"esercizio-32",children:"Esercizio 3.2"}),"\n",(0,i.jsx)(s.p,{children:"Scrivere un programma che svolge quanto segue."}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{children:"# leggere 2 numeri interi in base 10, calcolarne il prodotto, e stampare il risultato.\n\n# lettura:\n# come primo carattere leggere il segno del numero, cio\xe8 un '+' o un '-'\n# segue il modulo del numero, minore di 256\n\n# stampa:\n# stampare prima il segno del numero (+ o -), poi il modulo in cifre decimali\n"})}),"\n",(0,i.jsx)(s.h3,{id:"esercizio-33",children:"Esercizio 3.3"}),"\n",(0,i.jsxs)(s.p,{children:["Quello che segue (e scaricabile ",(0,i.jsx)(s.a,{href:"pathname:///2024-25/code/assembler/1/per-casa/imul_debug.s",children:"qui"}),") \xe8 un tentativo di soluzione dell'esercizio precedente.\nContiene tuttavia uno o pi\xf9 bug. Trovarli e correggerli."]}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-assembler",metastring:"showLineNumbers",children:".include \"./files/utility.s\"\n\nmess1:  .asciz \"inserire il primo numero intero:\\r\" \nmess2:  .asciz \"inserire il secondo numero intero:\\r\"\nmess3:  .asciz \"il prodotto dei due numeri e':\\r\"\na:      .word 0\nb:      .word 0\n\n_main:      \n    nop\n    lea mess1, %ebx\n    call outline\n    call in_intero\n    mov %ax, a\n\n    lea mess2, %ebx\n    call outline\n    call in_intero\n    mov %ax, b\n\n    mov a, %ax\n    mov b, %bx\n    imul %bx\n\n    lea mess3, %ebx\n    call outline\n    call out_intero\n    ret\n\n# legge un intero composto da segno e modulo minore di 256\n# ne lascia la rappresentazione in complemento alla radice base 2 in ax\nin_intero:\n    push %ebx\n    mov $0, %bl\nin_segno_loop:   \n    call inchar\n    cmp $'+', %al\n    je in_segno_poi\n    cmp $'-', %al\n    jne in_segno_loop\n    mov $1, %bl\nin_segno_poi:\n    call outchar\n    call indecimal_word\n    call newline\n    cmp $1, %bl\n    jne in_intero_fine\n    neg %ax\nin_intero_fine:\n    pop %ebx\n    ret\n\n# legge la rappresentazione di un numero intero in complemento alla radice base 2 in eax\n# lo stampa come segno seguito dalle cifre decimali\nout_intero:\n    push %ebx\n    mov %eax, %ebx\n    cmp $0, %ebx\n    ja out_intero_pos\n    jmp out_intero_neg\nout_intero_pos:\n    mov $'+', %al\n    call outchar\n    jmp out_intero_poi\nout_intero_neg:\n    mov $'-', %al\n    call outchar\n    neg %ebx\n    jmp out_intero_poi\nout_intero_poi:\n    mov %ebx, %eax\n    call outdecimal_long\n    pop %ebx\n    ret\n"})}),"\n",(0,i.jsxs)(a,{children:[(0,i.jsx)("summary",{children:"Soluzione passo-passo"}),(0,i.jsx)(s.p,{children:"Per brevit\xe0, e vista la documentazione dei sottoprogrammi, lascio al lettore l'interpretazione a grandi linee del programma.\nPasseremo direttamente ai problemi incontrati testando il programma."}),(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{children:"inserire il primo numero intero:\n+30\nSegmentation fault\n"})}),(0,i.jsxs)(s.p,{children:["L'errore, sicuramente gi\xe0 ben noto, \xe8 in realt\xe0\tun risultato tipico di una ",(0,i.jsx)(s.em,{children:"vasta"}),' gamma di errori.\nDi per s\xe9 significa semplicemente "tentativo di accesso in una zona di memoria a cui non si pu\xf2 accedere per fare quello che si voleva fare".\nNon spiega, per esempio, cos\'\xe8 che si voleva fare e perch\xe9 \xe8 sbagliato.']}),(0,i.jsx)(s.p,{children:"Vediamo tramite il debugger."}),(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-gdb",children:"Program received signal SIGSEGV, Segmentation fault.\n    _main () at /mnt/c/reti_logiche/assembler/lezioni/2/imul_debug.s:14\n14          mov %ax, a\n"})}),(0,i.jsxs)(s.p,{children:["Questo ci dice che il problema \xe8 il tentativo di scrivere all'indirizzo ",(0,i.jsxs)(s.span,{className:"katex",children:[(0,i.jsx)(s.span,{className:"katex-mathml",children:(0,i.jsx)(s.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,i.jsxs)(s.semantics,{children:[(0,i.jsx)(s.mrow,{children:(0,i.jsx)(s.mi,{children:"a"})}),(0,i.jsx)(s.annotation,{encoding:"application/x-tex",children:"a"})]})})}),(0,i.jsx)(s.span,{className:"katex-html","aria-hidden":"true",children:(0,i.jsxs)(s.span,{className:"base",children:[(0,i.jsx)(s.span,{className:"strut",style:{height:"0.4306em"}}),(0,i.jsx)(s.span,{className:"mord mathnormal",children:"a"})]})})]}),", che \xe8 la word allocata poco pi\xf9 su.\nIl problema qui \xe8 che il programma non ha nessuna distinzione tra ",(0,i.jsx)(s.code,{children:".data"})," e ",(0,i.jsx)(s.code,{children:".text"}),": di default \xe8 tutto ",(0,i.jsx)(s.code,{children:".text"}),", dove non si pu\xf2 scrivere perch\xe9 non ci \xe8 permesso, normalmente, sovrascrivere le istruzioni del programma.\nIl problema inverso si avrebbe tentando di ",(0,i.jsx)(s.em,{children:"eseguire"})," dalla sezione ",(0,i.jsx)(s.code,{children:".data"}),"."]}),(0,i.jsx)(s.p,{children:"Correggiamo l'errore aggiungendo le dichiarazioni di queste due sezioni."}),(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-assembler",metastring:"showLineNumbers",children:'.include "./files/utility.s"\n\n// highlight-start\n.data\n// highlight-end\nmess1:  .asciz "inserire il primo numero intero:\\r" \nmess2:  .asciz "inserire il secondo numero intero:\\r"\nmess3:  .asciz "il prodotto dei due numeri e\':\\r"\na:      .word 0\nb:      .word 0\n\n// highlight-start\n.text\n// highlight-end\n_main:\n...\n'})}),(0,i.jsx)(s.p,{children:"Ritestiamo quindi il programma:"}),(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{children:"inserire il primo numero intero:\n+30\ninserire il secondo numero intero:\n+20\nil prodotto dei due numeri e':\n+600\n"})}),(0,i.jsxs)(s.p,{children:["Fin qui, sembra andare bene.\nRicordiamoci per\xf2 di testare ",(0,i.jsx)(s.em,{children:"tutti i casi di interesse"}),", in particolare i ",(0,i.jsx)(s.em,{children:"casi limite"}),".\nLe specifiche dell'esercizio ci chiedono di considerare numeri interi di modulo inferiore a 256."]}),(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{children:"inserire il primo numero intero:\n+255\ninserire il secondo numero intero:\n+255\nil prodotto dei due numeri e':\n+65025\n"})}),(0,i.jsx)(s.p,{children:"Corretto."}),(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{children:"inserire il primo numero intero:\n-255\ninserire il secondo numero intero:\n+255\nil prodotto dei due numeri e':\n+511\n"})}),(0,i.jsxs)(s.p,{children:["Decisamente non corretto.\nVerifichiamo col debugger.\nPer prima cosa, ci assicuriamo che la lettura di numeri negativi sia corretta.\nMettiamo un brekpoint a riga 16 (riga 14 prima dell'aggiunta di ",(0,i.jsx)(s.code,{children:".data"})," e ",(0,i.jsx)(s.code,{children:".text"}),"), e verifichiamo cosa viene letto quando inseriamo ",(0,i.jsx)(s.code,{children:"-255"}),"."]}),(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-gdb",children:"(gdb) b 16\nBreakpoint 2 at 0x56556774: file /mnt/c/reti_logiche/assembler/lezioni/2/imul_debug.s, line 16.\n(gdb) c\nContinuing.\ninserire il primo numero intero:\n-255\n\nBreakpoint 2, _main () at /mnt/c/reti_logiche/assembler/lezioni/2/imul_debug.s:16\n16          mov %ax, a\n(gdb) i r ax\nax             0xff01              -255\n(gdb)\n"})}),(0,i.jsxs)(s.p,{children:["Fin qui \xe8 bene, il problema non sembra essere nella lettura di interi da tastiera.\nProseguiamo quindi alla moltiplicazione, e controlliamone il risultato.\nLa ",(0,i.jsx)(s.code,{children:"imul"})," utilizzata \xe8 a 16 bit, che da documentazione vediamo usa ",(0,i.jsx)(s.code,{children:"%ax"})," come operando implicito, ",(0,i.jsx)(s.code,{children:"%bx"})," come operando esplicito, e ",(0,i.jsx)(s.code,{children:"%dx_%ax"})," come destinatario del calcolo."]}),(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-gdb",children:"Breakpoint 3, _main () at /mnt/c/reti_logiche/assembler/lezioni/2/imul_debug.s:25\n25          imul %bx\n(gdb) i r ax bx\nax             0xff01              -255\nbx             0xff                255\n(gdb) s\n27          lea mess3, %ebx\n(gdb) i r dx ax\ndx             0xffff              -1\nax             0x1ff               511\n(gdb)\n"})}),(0,i.jsxs)(s.p,{children:["Concatenando i due registri otteniamo ",(0,i.jsx)(s.code,{children:"0xffff01ff"}),", ricordando, in particolare per ",(0,i.jsx)(s.code,{children:"%ax"}),", che ",(0,i.jsx)(s.code,{children:"gdb"})," omette nelle stampe gli zeri all'inizio di esadecimali.\nPossiamo verificare questo valore convertendo da esadecimale a decimale con una calcolatrice da programmatore.\nDato che si parla di interi, \xe8 importante impostare la calcolatrice sul numero di bit giusti, in questo caso 32.\nNella calcolatrice di Windows, questo significa impostare la modalit\xe0 ",(0,i.jsx)(s.code,{children:"DWORD"}),"."]}),(0,i.jsxs)("figure",{children:[(0,i.jsx)("img",{src:(0,l.Ay)("/2025-26/img/assembler/esercitazioni/3/w11_programmer_calc.png"),style:{maxWidth:"min(100%, 24rem)"},alt:"\nSchermata della calcolatrice da programmatore di Windows.\nLa modalit\xe0 di calcolo \xe8 impostata su DWORD, cio\xe8 32 bit.\nIl valore inserito, in modalit\xe0 esadecimale, \xe8 ffff01ff.\nLa calcolatrice mostra la conversione in numero intero decimale -65025.\n",title:"\nUtilizzando la modalit\xe0 DWORD, cio\xe8 32 bit, l'esadecimale ffff01ff \xe8 convertito nel numero intero decimale -65025.\n"}),(0,i.jsx)("figcaption",{children:(0,i.jsx)(s.p,{children:"Uso della calcolatrice da programmatore in Windows 11 per convertire da esadecimale a intero decimale."})})]}),(0,i.jsxs)(s.p,{children:["Il risultato \xe8 -65025, che \xe8 quello che ci aspettiamo.\nAnche qui, quindi, \xe8 bene: resta allora la stampa di questo valore, cio\xe8 il sottoprogramma ",(0,i.jsx)(s.code,{children:"out_intero"}),"."]}),(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-assembler",children:"# legge la rappresentazione di un numero intero in complemento alla radice base 2 in eax\n# lo stampa come segno seguito dalle cifre decimali\nout_intero:\n    ...\n"})}),(0,i.jsxs)(s.p,{children:["Vediamo qui la prima discrepanza: il sottoprogramma si aspetta il risultato in ",(0,i.jsx)(s.code,{children:"%eax"}),", ma noi sappiamo che la ",(0,i.jsx)(s.code,{children:"imul"})," lo lascia in ",(0,i.jsx)(s.code,{children:"%dx_%ax"}),".\nCi si pu\xf2 chiedere quale dei due correggere, se il sottoprogramma o il programma che lo usa.\nIn generale, \xe8 una buona cambiare le specifiche di un componente interno (il sottoprogramma) solo quando queste ",(0,i.jsx)(s.em,{children:"non hanno senso"}),".\n\xc8 quindi il componente esterno (il programma) che non rispetta le specifiche d'uso di quello interno, e che va cambiato."]}),(0,i.jsxs)(s.p,{children:["Assicuriamoci allora di lasciare il risultato nel registro giusto prima di ",(0,i.jsx)(s.code,{children:"call out_intero"}),"."]}),(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-assembler",children:"...\n    mov a, %ax\n    mov b, %bx\n    imul %bx\n\n// highlight-start\n    shl $16, %edx\n    movw %ax, %dx\n    movl %edx, %eax\n// highlight-end\n\n    lea mess3, %ebx\n    call outline\n    call out_intero\n...\n"})}),(0,i.jsx)(s.p,{children:"Riproviamo ad eseguire:"}),(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{children:"inserire il primo numero intero:\n-255\ninserire il secondo numero intero:\n+255\nil prodotto dei due numeri e':\n+4294902271\n"})}),(0,i.jsxs)(s.p,{children:["Il risultato \xe8 cambiato, ma \xe8 comunque sbagliato.\nRitorniamo al debugger, cominciando dalla ",(0,i.jsx)(s.code,{children:"call"})," di ",(0,i.jsx)(s.code,{children:"out_intero"}),", verificando di avere il valore corretto in ",(0,i.jsx)(s.code,{children:"%eax"}),"."]}),(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-gdb",children:"Breakpoint 2, _main () at /mnt/c/reti_logiche/assembler/lezioni/2/imul_debug.s:33\n33          call out_intero\n(gdb) i r eax\neax            0xffff01ff          -65025\n(gdb) \n"})}),(0,i.jsxs)(s.p,{children:["Il valore in ",(0,i.jsx)(s.code,{children:"%eax"})," \xe8 corretto, il problema allora \xe8 nel sottoprogramma.\nProseguiamo nel sottoprogramma, cercando di capire come funziona e dove potrebbe sbagliare.\nLa prima cosa che notiamo \xe8 che ",(0,i.jsx)(s.code,{children:"out_intero"})," ha due rami, ",(0,i.jsx)(s.code,{children:"out_intero_pos"})," e ",(0,i.jsx)(s.code,{children:"out_intero_neg"}),", dove stampa segni diversi e, in caso di numero negativo, usa la ",(0,i.jsx)(s.code,{children:"neg"})," per ottenere l'opposto.\nQuando si giunge a ",(0,i.jsx)(s.code,{children:"out_intero_poi"}),", stampa il modulo del numero usando ",(0,i.jsx)(s.code,{children:"outdecimal_long"})," (che, ricordiamo, supporta solo numeri naturali).\nTuttavia, nella nostra esecuzione abbiamo un negativo che viene stampato come naturale."]}),(0,i.jsxs)(s.p,{children:["Verifichiamo seguendo l'esecuzione con ",(0,i.jsx)(s.code,{children:"step"}),", che entra nel sottoprogramma ",(0,i.jsx)(s.code,{children:"out_intero"}),":"]}),(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-gdb",children:"(gdb) s\nout_intero () at /mnt/c/reti_logiche/assembler/lezioni/2/imul_debug.s:62\n62          push %ebx\n(gdb) s\n63          mov %eax, %ebx\n(gdb) s\n64          cmp $0, %ebx\n(gdb) i r ebx\nebx            0xffff01ff          -65025\n(gdb) s\n65          ja out_intero_pos\n(gdb) s\nout_intero_pos () at /mnt/c/reti_logiche/assembler/lezioni/2/imul_debug.s:68\n68          mov $'+', %al\n(gdb) \n"})}),(0,i.jsxs)(s.p,{children:["Effettivamente, nonostante ",(0,i.jsx)(s.code,{children:"%ebx"})," sia un numero negativo, il salto a ",(0,i.jsx)(s.code,{children:"out_intero_pos"})," viene eseguito.\nGuardiamo per\xf2 pi\xf9 attentamente: l'istruzione di salto \xe8 ",(0,i.jsx)(s.code,{children:"ja"}),", che interpreta il confronto come ",(0,i.jsx)(s.em,{children:"tra numeri naturali"}),".\nIn effetti, qualunque valore di ",(0,i.jsx)(s.code,{children:"%ebx"})," diverso da 0, se interpretato come naturale, risulta maggiore di 0.\nCorreggiamo quindi utilizzando ",(0,i.jsx)(s.code,{children:"jg"}),", e ritestiamo."]}),(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-assembler",children:"    cmp $0, %ebx\n// highlight-start\n    jg out_intero_pos\n// highlight-end\n    jmp out_intero_neg\n"})}),(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{children:"inserire il primo numero intero:\n-255\ninserire il secondo numero intero:\n+255\nil prodotto dei due numeri e':\n-65025\n"})}),(0,i.jsx)(s.p,{children:"Si dovrebbe ora continuare con altri test (combinazioni di segni, uso di 0) fino a convincersi che funzioni.\nPer questa soluzione ci fermiamo qui."}),(0,i.jsxs)(s.p,{children:["Il codice finale, scaricabile ",(0,i.jsx)(s.a,{href:"pathname:///2025-26/code/assembler/2/imul_debug_sol.s",children:"qui"}),", \xe8 il seguente:"]}),(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-assembler",metastring:"showLineNumbers",children:".include \"./files/utility.s\"\n\n.data\nmess1:  .asciz \"inserire il primo numero intero:\\r\" \nmess2:  .asciz \"inserire il secondo numero intero:\\r\"\nmess3:  .asciz \"il prodotto dei due numeri e':\\r\"\na:      .word 0\nb:      .word 0\n\n.text\n_main:      \n    nop\n    lea mess1, %ebx\n    call outline\n    call in_intero\n    mov %ax, a\n\n    lea mess2, %ebx\n    call outline\n    call in_intero\n    mov %ax, b\n\n    mov a, %ax\n    mov b, %bx\n    imul %bx\n\n    shl $16, %edx\n    movw %ax, %dx\n    movl %edx, %eax\n\n    lea mess3, %ebx\n    call outline\n    call out_intero\n    ret\n\n# legge un intero composto da segno e modulo minore di 256\n# ne lascia la rappresentazione in complemento alla radice base 2 in ax\nin_intero:\n    push %ebx\n    mov $0, %bl\nin_segno_loop:   \n    call inchar\n    cmp $'+', %al\n    je in_segno_poi\n    cmp $'-', %al\n    jne in_segno_loop\n    mov $1, %bl\nin_segno_poi:\n    call outchar\n    call indecimal_word\n    call newline\n    cmp $1, %bl\n    jne in_intero_fine\n    neg %ax\nin_intero_fine:\n    pop %ebx\n    ret\n\n# legge la rappresentazione di un numero intero in complemento alla radice base 2 in eax\n# lo stampa come segno seguito dalle cifre decimali\nout_intero:\n    push %ebx\n    mov %eax, %ebx\n    cmp $0, %ebx\n    jg out_intero_pos\n    jmp out_intero_neg\nout_intero_pos:\n    mov $'+', %al\n    call outchar\n    jmp out_intero_poi\nout_intero_neg:\n    mov $'-', %al\n    call outchar\n    neg %ebx\n    jmp out_intero_poi\nout_intero_poi:\n    mov %ebx, %eax\n    call outdecimal_long\n    pop %ebx\n    ret\n\n"})})]}),"\n",(0,i.jsx)(s.h3,{id:"esercizio-34",children:"Esercizio 3.4"}),"\n",(0,i.jsxs)(s.p,{children:["Quello che segue (e scaricabile  ",(0,i.jsx)(s.a,{href:"pathname:///2025-26/code/assembler/2/per-casa/substr_debug.s",children:"qui"}),") \xe8 un tentativo di soluzione per le seguenti specifiche:"]}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{children:"# Leggere una riga dal terminale, che DEVE contenere almeno 2 caratteri '_'\n# Identificare e stampa la sottostringa delimitata dai primi due caratteri '_'\n"})}),"\n",(0,i.jsxs)(s.p,{children:["Un esempio di output (",(0,i.jsx)(s.a,{href:"pathname:///2025-26/code/assembler/2/per-casa/esempio.txt",children:"qui"})," in formato txt) \xe8 il seguente"]}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{children:"questa e' una _prova_ !!\nprova\n"})}),"\n",(0,i.jsx)(s.p,{children:"Contiene tuttavia uno o pi\xf9 bug. Trovarli e correggerli."}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-assembler",metastring:"showLineNumbers",children:".include \"./files/utility.s\"\n\n.data\n\nmsg_in: .fill 80, 1, 0\n\n.text\n_main:  \n    nop\n    mov $80, %cx\n    lea msg_in, %ebx\n    call inline\n\n    cld\n    mov $'_', %al\n    lea msg_in, %esi\n    mov $80, %cx\n\n    repne scasb\n    mov %esi, %ebx\n    repne scasb\n    mov %esi, %ecx\n    sub %ebx, %ecx\n    call outline\n\n    ret\n\n"})}),"\n",(0,i.jsxs)(a,{children:[(0,i.jsx)("summary",{children:"Soluzione"}),(0,i.jsxs)(s.p,{children:["Il programma usa ",(0,i.jsx)(s.code,{children:"repne scasb"})," per scorrere il vettore finch\xe9 non trova il carattere in ",(0,i.jsx)(s.code,{children:"%al"}),", cio\xe8 ",(0,i.jsx)(s.code,{children:"_"}),".\nDopo la prima scansione, salva l'indirizzo attuale per usarlo come indirizzo di partenza della sottostringa.\nDopo la seconda scansione, fa una sottrazione di indirizzi per trovare il numero di caratteri che compongono la sottostringa.\nUsando indirizzo di partenza e numero caratteri, stampa quindi a terminale."]}),(0,i.jsx)(s.p,{children:"I bug da trovare sono i seguenti:"}),(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["Le istruzioni ",(0,i.jsx)(s.code,{children:"rep"})," utilizzano ",(0,i.jsx)(s.code,{children:"%ecx"}),", ma la riga 17 inizializza solo ",(0,i.jsx)(s.code,{children:"%cx"}),". Questo funziona solo se, per puro caso, la parte alta di ",(0,i.jsx)(s.code,{children:"%ecx"})," \xe8 a 0 ad inizio programma."]}),"\n",(0,i.jsxs)(s.li,{children:["L'istruzione ",(0,i.jsx)(s.code,{children:"scasb"})," ha l'indirizzo del vettore come destinatario implicito in ",(0,i.jsx)(s.code,{children:"%edi"}),", non ",(0,i.jsx)(s.code,{children:"%esi"}),"."]}),"\n",(0,i.jsxs)(s.li,{children:["La ",(0,i.jsx)(s.code,{children:"repne scasb"})," termina ",(0,i.jsx)(s.em,{children:"dopo"})," aver scansionato il carattere che rispetta l'equivalenza. Questo vuol dire che dopo la prima scansione abbiamo l'indirizzo del carattere dopo il primo ",(0,i.jsx)(s.code,{children:"_"})," (corretto) ma dopo la seconda scansione abbiamo l'indirizzo del carattere dopo il secondo ",(0,i.jsx)(s.code,{children:"_"}),": la sottrazione calcola una sottostringa che include il ",(0,i.jsx)(s.code,{children:"_"})," di terminazione."]}),"\n",(0,i.jsxs)(s.li,{children:["Il sottoprogramma usato \xe8 quello sbagliato: ",(0,i.jsx)(s.code,{children:"outline"})," stampa finch\xe9 non incrontra ",(0,i.jsx)(s.code,{children:"\\r"}),", per indicare il numero di caratteri da stampare va usato ",(0,i.jsx)(s.code,{children:"outmess"}),"."]}),"\n"]}),(0,i.jsxs)(s.p,{children:["Il codice dopo le correzioni \xe8 quindi il seguente, scaricabile ",(0,i.jsx)(s.a,{href:"pathname:///2025-26/code/assembler/3/substr_debug_sol.s",children:"qui"}),"."]}),(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-assembler",metastring:"showLineNumbers",children:".include \"./files/utility.s\"\n\n.data\n\nmsg_in: .fill 80, 1, 0\n\n.text\n_main:  \n    nop\n    mov $80, %cx\n    lea msg_in, %ebx\n    call inline\n\n    cld\n    mov $'_', %al\n// highlight-start\n    lea msg_in, %edi\n    mov $80, %cx\n// highlight-end\n\n    repne scasb\n// highlight-start\n    mov %edi, %ebx\n// highlight-end\n    repne scasb\n// highlight-start    \n    mov %edi, %ecx\n// highlight-end\n    sub %ebx, %ecx\n// highlight-start    \n    dec %ecx\n    call outmess\n// highlight-end\n\n    ret\n\n"})}),(0,i.jsxs)(s.p,{children:["Si sottolinea inoltre una debolezza della soluzione: la sottrazione fra puntatori funziona solo perch\xe9 la scala \xe8 1, cio\xe8 maneggiamo valori da 1 byte, per cui c'\xe8 corrispondenza fra la differenza di due indirizzi e il numero di elementi fra loro.\nUna soluzione pi\xf9 robusta \xe8 utilizzare la differenza del contantore ",(0,i.jsx)(s.code,{children:"%ecx"})," anzich\xe9 di puntatori.\nIn alternativa, si pu\xf2 utilizzare shift a destra dopo la sottrazione per tener conto di una scala maggiore di 1, ma \xe8 un metodo che rende facile sbagliare (bisogna stare attenti all'ordine tra shift e decremento)."]}),(0,i.jsx)(s.p,{children:"Si pu\xf2 verificare ci\xf2 svolgendo un esercizio simile a questo basato ma basato su word, per esempio con serie di valori decimali delimitati da 0."})]}),"\n",(0,i.jsx)(s.h3,{id:"esercizio-35",children:"Esercizio 3.5"}),"\n",(0,i.jsx)(s.p,{children:"A partire dalla soluzione dell'esercizio precedente, estendere il programma per rispettare le seguenti specifiche:"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{children:"# Leggere una riga dal terminale\n# Identificare e stampa la sottostringa delimitata dai primi due caratteri '_'\n# Se un solo carattere '_' e' presente, assumere che la sottostringa cominci \n# ad inizio stringa e finisca prima del carattere '_'\n# Se nessun carattere '_' e' presente, stampare l'intera stringa\n"})}),"\n",(0,i.jsxs)(a,{children:[(0,i.jsx)("summary",{children:"Soluzione"}),(0,i.jsxs)(s.p,{children:["Il programma dell'esercizio 3.4 viene complicato dalla richiesta di gestire dei valori di default, in caso siano presenti uno o nessun delimitatore ",(0,i.jsx)(s.code,{children:"_"}),".\nQuesto vuol dire gestire il caso in cui una ",(0,i.jsx)(s.code,{children:"repne scasb"})," termina non perch\xe9 ha trovato il carattere, ma perch\xe9 ",(0,i.jsx)(s.code,{children:"%ecx"})," \xe8 stato decrementato fino a 0."]}),(0,i.jsxs)(s.p,{children:["Questo si implementa come dei semplici check su ",(0,i.jsx)(s.code,{children:"%ecx"})," dopo ciascuna ",(0,i.jsx)(s.code,{children:"repne scasb"}),", in caso sia 0 si va a un branch separato: se succede alla prima scansione non \xe8 presente alcun ",(0,i.jsx)(s.code,{children:"_"})," e saltiamo quindi a ",(0,i.jsx)(s.code,{children:"print_all"}),", se succede alla seconda scansione abbiamo solo un ",(0,i.jsx)(s.code,{children:"_"})," e saltiamo quindi a ",(0,i.jsx)(s.code,{children:"print_from_start"}),".\nAltrimenti, si prosegue con lo stesso codice dell'esercizio 2.2, che nomineremo ",(0,i.jsx)(s.code,{children:"print_substr"}),"."]}),(0,i.jsxs)(s.p,{children:["Per ",(0,i.jsx)(s.code,{children:"print_all"})," basta una semplice ",(0,i.jsx)(s.code,{children:"outline"})," dell'intera stringa.\nPer ",(0,i.jsx)(s.code,{children:"print_from_start"}),", si fa un ragionamento non dissimile da quanto visto per l'esercizio precedente, dove va usato come inizio l'indirizzo di ",(0,i.jsx)(s.code,{children:"msg_in"})," e il numero di caratteri pu\xf2 essere calcolato, come prima, usando l'indirizzo che troviamo in ",(0,i.jsx)(s.code,{children:"%edi"})," dopo la prima ",(0,i.jsx)(s.code,{children:"repne scasb"}),"."]}),(0,i.jsxs)(s.p,{children:["Il codice risultante \xe8 il seguente, scaricabile ",(0,i.jsx)(s.a,{href:"pathname:///2025-26/code/assembler/3/substr_default_sol.s",children:"qui"}),"."]}),(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-assembler",metastring:"showLineNumbers",children:".include \"./files/utility.s\"\n\n.data\n\nmsg_in: .fill 80, 1, 0\n\n.text\n_main:  \n    nop\n    mov $80, %cx\n    lea msg_in, %ebx\n    call inline\n\n    cld\n    mov $'_', %al\n    lea msg_in, %edi\n    mov $80, %ecx\n\n    repne scasb\n// highlight-start\n    cmp $0, %ecx\n    je print_all\n// highlight-end\n\n    mov %edi, %ebx\n    repne scasb\n// highlight-start\n    cmp $0, %ecx\n    je print_from_start\n// highlight-end\n\n// highlight-start\nprint_substr:\n// highlight-end\n    mov %edi, %ecx\n    sub %ebx, %ecx\n    dec %ecx\n    call outmess\n    ret\n\n// highlight-start\nprint_from_start:\n    mov %ebx, %ecx\n    lea msg_in, %ebx\n    sub %ebx, %ecx\n    dec %ecx\n    call outmess\n    ret\n\nprint_all:\n    lea msg_in, %ebx\n    call outline\n    ret\n// highlight-end\n"})})]})]})}function h(e={}){const{wrapper:s}={...(0,r.R)(),...e.components};return s?(0,i.jsx)(s,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},28453:(e,s,a)=>{a.d(s,{R:()=>l,x:()=>c});var n=a(96540);const i={},r=n.createContext(i);function l(e){const s=n.useContext(r);return n.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function c(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:l(e.components),n.createElement(r.Provider,{value:s},e.children)}}}]);