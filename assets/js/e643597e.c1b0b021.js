"use strict";(self.webpackChunkreti_logiche_esercitazioni=self.webpackChunkreti_logiche_esercitazioni||[]).push([[5663],{2253:(e,i,o)=>{o.r(i),o.d(i,{assets:()=>c,contentTitle:()=>a,default:()=>p,frontMatter:()=>s,metadata:()=>n,toc:()=>d});const n=JSON.parse('{"id":"esercitazioni/Verilog/Documentazione/Introduzione","title":"Introduzione","description":"","source":"@site/docs/esercitazioni/Verilog/Documentazione/1. Introduzione.mdx","sourceDirName":"esercitazioni/Verilog/Documentazione","slug":"/esercitazioni/Verilog/Documentazione/Introduzione","permalink":"/reti-logiche-esercitazioni/esercitazioni/Verilog/Documentazione/Introduzione","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"description":""},"sidebar":"esercitazioniSidebar","previous":{"title":"Documentazione","permalink":"/reti-logiche-esercitazioni/category/documentazione-1"},"next":{"title":"Operatori","permalink":"/reti-logiche-esercitazioni/esercitazioni/Verilog/Documentazione/Operatori"}}');var t=o(4848),r=o(8453);o(6025);const s={description:""},a="Introduzione",c={},d=[];function u(e){const i={a:"a",code:"code",h1:"h1",header:"header",p:"p",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(i.header,{children:(0,t.jsx)(i.h1,{id:"introduzione",children:"Introduzione"})}),"\n",(0,t.jsxs)(i.p,{children:["Questa documentazione \xe8 organizzata per fornire riferimenti rapidi per ciascun contesto d'uso del Verilog.\r\nNel far questo, prendiamo in considerazione il fatto che in Verilog la stessa sintassi pu\xf2 avere usi diversi in contesti diversi: per esempio, si parler\xe0 in modo diverso di ",(0,t.jsx)(i.code,{children:"reg"})," per testbench simulative rispetto a come se ne parla per reti sincronizzate."]}),"\n",(0,t.jsxs)(i.p,{children:['Le definizioni "vere" di queste sintassi sono pi\xf9 astratte di quanto presentato qui, proprio per accomodare usi diversi.\r\nUn esempio di documentazione pi\xf9 completa ma non orientata agli usi di questo corso si trova su ',(0,t.jsx)(i.a,{href:"https://www.chipverify.com",children:"www.chipverify.com"}),"."]})]})}function p(e={}){const{wrapper:i}={...(0,r.R)(),...e.components};return i?(0,t.jsx)(i,{...e,children:(0,t.jsx)(u,{...e})}):u(e)}},8453:(e,i,o)=>{o.d(i,{R:()=>s,x:()=>a});var n=o(6540);const t={},r=n.createContext(t);function s(e){const i=n.useContext(r);return n.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function a(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:s(e.components),n.createElement(r.Provider,{value:i},e.children)}}}]);