"use strict";(self.webpackChunkreti_logiche_esercitazioni=self.webpackChunkreti_logiche_esercitazioni||[]).push([[9933],{19549:(e,i,n)=>{n.r(i),n.d(i,{assets:()=>c,contentTitle:()=>a,default:()=>h,frontMatter:()=>s,metadata:()=>t,toc:()=>l});const t=JSON.parse('{"id":"esercitazioni/Assembler/Documentazione/Sezione DATA","title":"Sezione .data","description":"","source":"@site/versioned_docs/version-2024-25/esercitazioni/Assembler/Documentazione/8. Sezione DATA.mdx","sourceDirName":"esercitazioni/Assembler/Documentazione","slug":"/esercitazioni/Assembler/Documentazione/Sezione DATA","permalink":"/reti-logiche-esercitazioni/2024-25/esercitazioni/Assembler/Documentazione/Sezione DATA","draft":false,"unlisted":false,"tags":[],"version":"2024-25","sidebarPosition":8,"frontMatter":{"title":"Sezione .data","description":""},"sidebar":"esercitazioniSidebar","previous":{"title":"Architettura x86","permalink":"/reti-logiche-esercitazioni/2024-25/esercitazioni/Assembler/Documentazione/Architettura x86"},"next":{"title":"Istruzioni x86","permalink":"/reti-logiche-esercitazioni/2024-25/esercitazioni/Assembler/Documentazione/Istruzioni x86"}}');var o=n(74848),r=n(28453);n(86025);const s={title:"Sezione .data",description:""},a="Sezione .data",c={},l=[];function d(e){const i={a:"a",code:"code",em:"em",h1:"h1",header:"header",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,r.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(i.header,{children:(0,o.jsxs)(i.h1,{id:"sezione-data",children:["Sezione ",(0,o.jsx)(i.code,{children:".data"})]})}),"\n",(0,o.jsxs)(i.p,{children:["Un programma assembler \xe8 tipicamente diviso in sezione ",(0,o.jsx)(i.code,{children:".data"}),", dove vengono allocato spazio in memoria a disposizione del programma, e sezione ",(0,o.jsx)(i.code,{children:".text"}),", dove viene indicata la sequenza di istruzione che compone il programma."]}),"\n",(0,o.jsxs)(i.p,{children:["La sezione data \xe8 tipicamente composta da una serie di dichiarazioni nella forma ",(0,o.jsx)(i.code,{children:"nomeVariabile: .tipo <parametri di inizializzazione>"}),".\nAlcuni esempi:"]}),"\n",(0,o.jsx)(i.pre,{children:(0,o.jsx)(i.code,{className:"language-assembler",children:'.data\nvar1:   .long 5\nvar2:   .byte 0x2d, 0x01\nstr:    .asciz "Una stringa"\n'})}),"\n",(0,o.jsx)(i.p,{children:"Ciascuna direttiva non fa che allocare uno o pi\xf9 blocchi di memoria contigui della dimensione richiesta e con il contenuto iniziale richiesto."}),"\n",(0,o.jsxs)(i.p,{children:["Ciascuna ",(0,o.jsx)(i.em,{children:"label"})," non \xe8 che un indirizzo al primo byte di tale blocco contiguo di memoria.\nDato che l'architettura x86 \xe8 ",(0,o.jsx)(i.em,{children:"little endian"}),", tale primo byte sar\xe0 il meno significativo."]}),"\n",(0,o.jsx)(i.p,{children:"Di seguito una tabella dei tipi mostrati nel corso."}),"\n",(0,o.jsxs)(i.table,{children:[(0,o.jsx)(i.thead,{children:(0,o.jsxs)(i.tr,{children:[(0,o.jsx)(i.th,{children:"Tipo"}),(0,o.jsx)(i.th,{children:"Notazione"}),(0,o.jsx)(i.th,{children:"Descrizione"})]})}),(0,o.jsxs)(i.tbody,{children:[(0,o.jsxs)(i.tr,{children:[(0,o.jsx)(i.td,{children:"byte"}),(0,o.jsx)(i.td,{children:".byte V1 [, V2...]"}),(0,o.jsx)(i.td,{children:"Alloca uno o pi\xf9 byte, inizializzati con i valori forniti."})]}),(0,o.jsxs)(i.tr,{children:[(0,o.jsx)(i.td,{children:"word"}),(0,o.jsx)(i.td,{children:".word V1 [, V2...]"}),(0,o.jsx)(i.td,{children:"Alloca uno o pi\xf9 word (2 byte), inizializzati con i valori forniti."})]}),(0,o.jsxs)(i.tr,{children:[(0,o.jsx)(i.td,{children:"long"}),(0,o.jsx)(i.td,{children:".long V1 [, V2...]"}),(0,o.jsx)(i.td,{children:"Alloca uno o pi\xf9 long (4 byte), inizializzati con i valori forniti."})]}),(0,o.jsxs)(i.tr,{children:[(0,o.jsx)(i.td,{children:"fill"}),(0,o.jsx)(i.td,{children:".fill n, l, v"}),(0,o.jsxs)(i.td,{children:["Alloca ",(0,o.jsx)(i.code,{children:"n"})," locazioni di ",(0,o.jsx)(i.code,{children:"l"})," byte ciascuno e inizializzati a ",(0,o.jsx)(i.code,{children:"v"}),". ",(0,o.jsx)(i.code,{children:"l"})," e ",(0,o.jsx)(i.code,{children:"v"})," si possono omettere, di default sono 1 e 0."]})]}),(0,o.jsxs)(i.tr,{children:[(0,o.jsx)(i.td,{children:"ascii"}),(0,o.jsx)(i.td,{children:'.ascii "str"'}),(0,o.jsxs)(i.td,{children:["Alloca la stringa ",(0,o.jsx)(i.code,{children:"str"}),", 1 byte per carattere."]})]}),(0,o.jsxs)(i.tr,{children:[(0,o.jsx)(i.td,{children:"asciz"}),(0,o.jsx)(i.td,{children:'.asciz "str"'}),(0,o.jsxs)(i.td,{children:["Alloca la stringa ",(0,o.jsx)(i.code,{children:"str"}),", 1 byte per carattere, aggiungendo un byte ",(0,o.jsx)(i.code,{children:"0x00"})," in fondo."]})]})]})]}),"\n",(0,o.jsxs)(i.p,{children:["L'assemblatore supporta anche altre direttive ed usi pi\xf9 complessi.\nPer maggiori informazioni, la documentazione ufficiale \xe8 ",(0,o.jsx)(i.a,{href:"https://ftp.gnu.org/old-gnu/Manuals/gas-2.9.1/html_chapter/as_7.html",children:"qui"}),"."]})]})}function h(e={}){const{wrapper:i}={...(0,r.R)(),...e.components};return i?(0,o.jsx)(i,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},28453:(e,i,n)=>{n.d(i,{R:()=>s,x:()=>a});var t=n(96540);const o={},r=t.createContext(o);function s(e){const i=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function a(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:s(e.components),t.createElement(r.Provider,{value:i},e.children)}}}]);