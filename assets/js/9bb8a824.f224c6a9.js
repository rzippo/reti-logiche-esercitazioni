"use strict";(self.webpackChunkreti_logiche_esercitazioni=self.webpackChunkreti_logiche_esercitazioni||[]).push([[2461],{9157:(e,i,n)=>{n.r(i),n.d(i,{assets:()=>l,contentTitle:()=>r,default:()=>u,frontMatter:()=>o,metadata:()=>c,toc:()=>a});var s=n(4848),t=n(8453);const o={description:""},r="Script dell'ambiente",c={id:"esercitazioni/Assembler/Documentazione/Script dell'ambiente",title:"Script dell'ambiente",description:"",source:"@site/docs/esercitazioni/Assembler/Documentazione/5. Script dell'ambiente.mdx",sourceDirName:"esercitazioni/Assembler/Documentazione",slug:"/esercitazioni/Assembler/Documentazione/Script dell'ambiente",permalink:"/reti-logiche-esercitazioni/esercitazioni/Assembler/Documentazione/Script dell'ambiente",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:5,frontMatter:{description:""},sidebar:"esercitazioniSidebar",previous:{title:"Tabella ASCII",permalink:"/reti-logiche-esercitazioni/esercitazioni/Assembler/Documentazione/Tabella ASCII"},next:{title:"Problemi comuni",permalink:"/reti-logiche-esercitazioni/esercitazioni/Assembler/Problemi comuni"}},l={},a=[{value:"<code>assemble.ps1</code>",id:"assembleps1",level:2},{value:"<code>debug.ps1</code>",id:"debugps1",level:2},{value:"<code>run-test.ps1</code>",id:"run-testps1",level:2},{value:"<code>run-tests.ps1</code>",id:"run-testsps1",level:2}];function d(e){const i={blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",header:"header",p:"p",...(0,t.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(i.header,{children:(0,s.jsx)(i.h1,{id:"script-dellambiente",children:"Script dell'ambiente"})}),"\n",(0,s.jsxs)(i.p,{children:["Qui di seguito sono documentati gli script dell'ambiente.\r\nI principali sono ",(0,s.jsx)(i.code,{children:"assemble.ps1"})," e ",(0,s.jsx)(i.code,{children:"debug.ps1"}),", il cui uso \xe8 mostrato nelle esercitazioni.\r\nGli script ",(0,s.jsx)(i.code,{children:"run-test.ps1"})," e ",(0,s.jsx)(i.code,{children:"run-tests.ps1"})," sono utili per automatizzare i test, il loro uso \xe8 del tutto opzionale."]}),"\n",(0,s.jsx)(i.h2,{id:"assembleps1",children:(0,s.jsx)(i.code,{children:"assemble.ps1"})}),"\n",(0,s.jsxs)(i.blockquote,{children:["\n",(0,s.jsx)(i.p,{children:(0,s.jsx)(i.code,{children:"PS /mnt/c/reti_logiche/assembler> ./assemble.ps1 mio_programma.s"})}),"\n"]}),"\n",(0,s.jsxs)(i.p,{children:["Questo script assembla un sorgente assembler in un file eseguibile.\r\nLo script controlla prima che il file passato non sia un eseguibile, invece che un sorgente.\r\nPoi, il sorgente viene assemblato usando gcc ad includendo il sorgente ",(0,s.jsx)(i.code,{children:"./files/main.c"}),", che si occupa di alcune impostazioni del terminale."]}),"\n",(0,s.jsx)(i.h2,{id:"debugps1",children:(0,s.jsx)(i.code,{children:"debug.ps1"})}),"\n",(0,s.jsxs)(i.blockquote,{children:["\n",(0,s.jsx)(i.p,{children:(0,s.jsx)(i.code,{children:"PS /mnt/c/reti_logiche/assembler> ./debug.ps1 mio_programma"})}),"\n"]}),"\n",(0,s.jsxs)(i.p,{children:["Questo script lancia il debugger per un programma.\r\nLo script controlla prima che il file passato non sia un sorgente, invece che un eseguibile.\r\nPoi, il debugger gdb viene lanciato con il programma dato, includendo le definizioni e comandi iniziali in ",(0,s.jsx)(i.code,{children:"./files/gdb_startup"}),".\r\nQuesti si occupano di definire i comandi ",(0,s.jsx)(i.code,{children:"qquit"})," e ",(0,s.jsx)(i.code,{children:"rrun"})," (non chiedono conferma), creare un breakpoint in ",(0,s.jsx)(i.code,{children:"_main"})," e avviare il programma fino a tale breakpoint (cos\xec da saltare il codice di setup di ",(0,s.jsx)(i.code,{children:"./files/main.c"}),")."]}),"\n",(0,s.jsx)(i.h2,{id:"run-testps1",children:(0,s.jsx)(i.code,{children:"run-test.ps1"})}),"\n",(0,s.jsxs)(i.blockquote,{children:["\n",(0,s.jsx)(i.p,{children:(0,s.jsx)(i.code,{children:"PS /mnt/c/reti_logiche/assembler> ./run-test.ps1 mio_programma input.txt output.txt"})}),"\n"]}),"\n",(0,s.jsx)(i.p,{children:"Lancia un eseguibile usando il contenuto di un file come input, e ne opzionalmente ne stampa l'output su file.\r\nLo script fa ridirezione di input/output, con alcuni controlli.\r\nTutti i caratteri del file di input verranno visti dal programma come se digitati da tastiera, inclusi i caratteri di fine riga."}),"\n",(0,s.jsx)(i.h2,{id:"run-testsps1",children:(0,s.jsx)(i.code,{children:"run-tests.ps1"})}),"\n",(0,s.jsxs)(i.blockquote,{children:["\n",(0,s.jsx)(i.p,{children:(0,s.jsx)(i.code,{children:"PS /mnt/c/reti_logiche/assembler> ./run-tests.ps1 mio_programma cartella_test"})}),"\n"]}),"\n",(0,s.jsx)(i.p,{children:"Testa un eseguibile su una serie di coppie input-output, verificando che l'output sia quello atteso.\r\nStampa riassuntivamente e per ciascun test se \xe8 stato passato o meno."}),"\n",(0,s.jsxs)(i.p,{children:["Lo script prende ciascun file di input, con nome nella forma ",(0,s.jsx)(i.code,{children:"in_*.txt"}),", ed esegue l'eseguibile con tale input.\r\nNe salva poi l'output corrispondente nel file ",(0,s.jsx)(i.code,{children:"out_*.txt"}),".\r\nConfronta poi ",(0,s.jsx)(i.code,{children:"out_*.txt"})," e ",(0,s.jsx)(i.code,{children:"out_ref_*.txt"}),": il test \xe8 passato se i due file coincidono.\r\nNel confronto, viene ignorata la differenza fra le sequenze di fine riga ",(0,s.jsx)(i.code,{children:"\\r\\n"})," e ",(0,s.jsx)(i.code,{children:"\\n"}),"."]})]})}function u(e={}){const{wrapper:i}={...(0,t.R)(),...e.components};return i?(0,s.jsx)(i,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},8453:(e,i,n)=>{n.d(i,{R:()=>r,x:()=>c});var s=n(6540);const t={},o=s.createContext(t);function r(e){const i=s.useContext(o);return s.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function c(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:r(e.components),s.createElement(o.Provider,{value:i},e.children)}}}]);