"use strict";(self.webpackChunkreti_logiche_esercitazioni=self.webpackChunkreti_logiche_esercitazioni||[]).push([[275],{193:(e,i,s)=>{s.r(i),s.d(i,{assets:()=>c,contentTitle:()=>l,default:()=>h,frontMatter:()=>o,metadata:()=>n,toc:()=>d});const n=JSON.parse('{"id":"esercitazioni/Assembler/Documentazione/Architettura x86","title":"Architettura x86","description":"","source":"@site/docs/esercitazioni/Assembler/Documentazione/5. Architettura x86.mdx","sourceDirName":"esercitazioni/Assembler/Documentazione","slug":"/esercitazioni/Assembler/Documentazione/Architettura x86","permalink":"/reti-logiche-esercitazioni/esercitazioni/Assembler/Documentazione/Architettura x86","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":5,"frontMatter":{"description":""},"sidebar":"esercitazioniSidebar","previous":{"title":"Documentazione","permalink":"/reti-logiche-esercitazioni/category/documentazione"},"next":{"title":"Istruzioni x86","permalink":"/reti-logiche-esercitazioni/esercitazioni/Assembler/Documentazione/Istruzioni x86"}}');var a=s(4848),r=s(8453),t=s(6025);const o={description:""},l="Architettura x86",c={},d=[{value:"Registri",id:"registri",level:2},{value:"Memoria",id:"memoria",level:2},{value:"Spazio di I/O",id:"spazio-di-io",level:2},{value:"Condizioni al reset",id:"condizioni-al-reset",level:2}];function m(e){const i={a:"a",admonition:"admonition",annotation:"annotation",code:"code",em:"em",h1:"h1",h2:"h2",header:"header",li:"li",math:"math",mi:"mi",mn:"mn",mo:"mo",mrow:"mrow",ol:"ol",p:"p",semantics:"semantics",span:"span",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(i.header,{children:(0,a.jsx)(i.h1,{id:"architettura-x86",children:"Architettura x86"})}),"\n",(0,a.jsxs)(i.p,{children:["Riportiamo qui una vista ",(0,a.jsx)(i.em,{children:"semplificata"})," e ",(0,a.jsx)(i.em,{children:"riassuntiva"})," dell'architettura x86 per la quale scriveremo programmi assembler."]}),"\n",(0,a.jsx)(i.p,{children:"L'architettura x86 \xe8 a 32 bit.\r\nQuesto implica che i registri generali, cos\xec come tutti gli indirizzi per locazioni in memoria, sono a 32 bit.\r\nL'evoluzione di questa architettura, x64 a 64 bit, che \xe8 quella che troviamo nei processori in commercio, \xe8 del tutto retrocompatibile."}),"\n",(0,a.jsxs)(i.admonition,{title:"Importanti semplificazioni",type:"info",children:[(0,a.jsxs)(i.p,{children:["La visione del processore che proponiamo \xe8 molto limitata, ed omette diversi importanti registri, flag e funzionalit\xe0 che saranno esplorati in corsi successivi.\r\nQuesti includono, per esempio, il registro ",(0,a.jsx)(i.code,{children:"ebp"}),", la natura dei meccanismi di protezione, il significato di ",(0,a.jsx)(i.code,{children:"SEGMENTATION FAULT"}),", e che cosa sia un ",(0,a.jsx)(i.em,{children:"kernel"}),"."]}),(0,a.jsx)(i.p,{children:"Quanto discutiamo \xe8 tuttavia sufficiente agli scopi didattici di questo corso."})]}),"\n",(0,a.jsx)(i.h2,{id:"registri",children:"Registri"}),"\n",(0,a.jsxs)(i.p,{children:["I registri che utilizzeremo ",(0,a.jsx)(i.em,{children:"direttamente"})," sono 6: ",(0,a.jsx)(i.code,{children:"eax"}),", ",(0,a.jsx)(i.code,{children:"ebx"}),", ",(0,a.jsx)(i.code,{children:"ecx"}),", ",(0,a.jsx)(i.code,{children:"edx"}),", ",(0,a.jsx)(i.code,{children:"esi"}),", ",(0,a.jsx)(i.code,{children:"edi"}),".\r\nPer i primi quattro di questi, \xe8 possibile operare sulle loro porzioni a 16 e 8 bit tramite ",(0,a.jsx)(i.code,{children:"ax"}),", ",(0,a.jsx)(i.code,{children:"ah"}),", ",(0,a.jsx)(i.code,{children:"al"})," e cos\xec via.\r\nPer i registri ",(0,a.jsx)(i.code,{children:"esi"})," ed ",(0,a.jsx)(i.code,{children:"edi"})," \xe8 possibile operare solo sulle porzioni a 16 bit, tramite ",(0,a.jsx)(i.code,{children:"si"})," e ",(0,a.jsx)(i.code,{children:"di"}),".\r\nTipicamente, i registri ",(0,a.jsx)(i.code,{children:"eax"}),"...",(0,a.jsx)(i.code,{children:"edx"})," sono utilizzati per processare dati, mentre ",(0,a.jsx)(i.code,{children:"esi"})," ed ",(0,a.jsx)(i.code,{children:"edi"})," sono utilizzati come registri puntatori.\r\nQuesta divisione di utilizzo non \xe8 per\xf2 affatto obbligatoria per la maggior parte delle istruzioni."]}),"\n",(0,a.jsx)(i.p,{children:"Altri registri sono invece utilizzati in modo indiretto:"}),"\n",(0,a.jsxs)(i.ul,{children:["\n",(0,a.jsxs)(i.li,{children:[(0,a.jsx)(i.code,{children:"esp"})," \xe8 il registro puntatore per la ",(0,a.jsx)(i.em,{children:"cima"})," dello stack, viene utilizzato da ",(0,a.jsx)(i.code,{children:"pop"}),"/",(0,a.jsx)(i.code,{children:"push"})," per prelevare/spostare valori nella pila, e da ",(0,a.jsx)(i.code,{children:"call"}),"/",(0,a.jsx)(i.code,{children:"ret"})," per la chiamata di sottoprogrammi;"]}),"\n",(0,a.jsxs)(i.li,{children:[(0,a.jsx)(i.code,{children:"eip"})," \xe8 il registro puntatore verso la prossima istruzione da eseguire, viene incrementato alla fine del ",(0,a.jsx)(i.em,{children:"fetch"})," di una istruzione e modificato da istruzioni che cambiano il flusso d'esecuzione, come ",(0,a.jsx)(i.code,{children:"call"}),", ",(0,a.jsx)(i.code,{children:"ret"})," e le varie ",(0,a.jsx)(i.code,{children:"jmp"}),";"]}),"\n",(0,a.jsxs)(i.li,{children:[(0,a.jsx)(i.code,{children:"eflags"})," \xe8 il registro dei flag, una serie di booleani con informazioni sullo stato dell'esecuzione e sul risultato dell'ultima operazione aritmetica.\r\nI flag di nostro interesse sono il carry flag ",(0,a.jsx)(i.code,{children:"CF"})," (posizione 0), lo zero flag ",(0,a.jsx)(i.code,{children:"ZF"})," (6), il sign flag ",(0,a.jsx)(i.code,{children:"SF"})," (7), l'overflow flag ",(0,a.jsx)(i.code,{children:"OF"})," (11).\r\nSono tipicamente aggiornati dalle istruzioni aritmetiche, e testati indirettamente con istruzioni condizionali come ",(0,a.jsx)(i.code,{children:"jcon"}),", ",(0,a.jsx)(i.code,{children:"set"})," e ",(0,a.jsx)(i.code,{children:"cmov"}),"."]}),"\n"]}),"\n",(0,a.jsx)(i.p,{children:"Di seguito uno schema funzionale dei registri del processore x86."}),"\n",(0,a.jsx)("img",{src:(0,t.Ay)("img/assembler/architettura/registri.drawio.png"),alt:""}),"\n",(0,a.jsx)(i.h2,{id:"memoria",children:"Memoria"}),"\n",(0,a.jsx)(i.p,{children:"Lo spazio di memoria dell'architettura x86 \xe8 indirizzato su 32 bit.\r\nCiascun indirizzo corrisponde a un byte, ma \xe8 possibile eseguire anche letture e scritture a 16 e 32 bit."}),"\n",(0,a.jsxs)(i.p,{children:["Per tali casi \xe8 importante ricordare che l'architettura x86 \xe8 ",(0,a.jsx)(i.em,{children:"little-endian"}),", che significa ",(0,a.jsx)(i.strong,{children:"little end first"}),", ",(0,a.jsx)(i.a,{href:"https://en.wikipedia.org/wiki/Endianness",children:"un riferimento a I viaggi di Gulliver"}),".\r\nQuesto si traduce nel fatto che quando un valore di ",(0,a.jsxs)(i.span,{className:"katex",children:[(0,a.jsx)(i.span,{className:"katex-mathml",children:(0,a.jsx)(i.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,a.jsxs)(i.semantics,{children:[(0,a.jsx)(i.mrow,{children:(0,a.jsx)(i.mi,{children:"n"})}),(0,a.jsx)(i.annotation,{encoding:"application/x-tex",children:"n"})]})})}),(0,a.jsx)(i.span,{className:"katex-html","aria-hidden":"true",children:(0,a.jsxs)(i.span,{className:"base",children:[(0,a.jsx)(i.span,{className:"strut",style:{height:"0.4306em"}}),(0,a.jsx)(i.span,{className:"mord mathnormal",children:"n"})]})})]})," byte viene salvato in memoria ",(0,a.jsx)(i.em,{children:"a partire"})," dall'indirizzo ",(0,a.jsxs)(i.span,{className:"katex",children:[(0,a.jsx)(i.span,{className:"katex-mathml",children:(0,a.jsx)(i.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,a.jsxs)(i.semantics,{children:[(0,a.jsx)(i.mrow,{children:(0,a.jsx)(i.mi,{children:"a"})}),(0,a.jsx)(i.annotation,{encoding:"application/x-tex",children:"a"})]})})}),(0,a.jsx)(i.span,{className:"katex-html","aria-hidden":"true",children:(0,a.jsxs)(i.span,{className:"base",children:[(0,a.jsx)(i.span,{className:"strut",style:{height:"0.4306em"}}),(0,a.jsx)(i.span,{className:"mord mathnormal",children:"a"})]})})]}),", il byte meno significativo del valore viene salvato in ",(0,a.jsxs)(i.span,{className:"katex",children:[(0,a.jsx)(i.span,{className:"katex-mathml",children:(0,a.jsx)(i.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,a.jsxs)(i.semantics,{children:[(0,a.jsx)(i.mrow,{children:(0,a.jsx)(i.mi,{children:"a"})}),(0,a.jsx)(i.annotation,{encoding:"application/x-tex",children:"a"})]})})}),(0,a.jsx)(i.span,{className:"katex-html","aria-hidden":"true",children:(0,a.jsxs)(i.span,{className:"base",children:[(0,a.jsx)(i.span,{className:"strut",style:{height:"0.4306em"}}),(0,a.jsx)(i.span,{className:"mord mathnormal",children:"a"})]})})]}),", il secondo meno significativo in ",(0,a.jsxs)(i.span,{className:"katex",children:[(0,a.jsx)(i.span,{className:"katex-mathml",children:(0,a.jsx)(i.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,a.jsxs)(i.semantics,{children:[(0,a.jsxs)(i.mrow,{children:[(0,a.jsx)(i.mi,{children:"a"}),(0,a.jsx)(i.mo,{children:"+"}),(0,a.jsx)(i.mn,{children:"1"})]}),(0,a.jsx)(i.annotation,{encoding:"application/x-tex",children:"a+1"})]})})}),(0,a.jsxs)(i.span,{className:"katex-html","aria-hidden":"true",children:[(0,a.jsxs)(i.span,{className:"base",children:[(0,a.jsx)(i.span,{className:"strut",style:{height:"0.6667em",verticalAlign:"-0.0833em"}}),(0,a.jsx)(i.span,{className:"mord mathnormal",children:"a"}),(0,a.jsx)(i.span,{className:"mspace",style:{marginRight:"0.2222em"}}),(0,a.jsx)(i.span,{className:"mbin",children:"+"}),(0,a.jsx)(i.span,{className:"mspace",style:{marginRight:"0.2222em"}})]}),(0,a.jsxs)(i.span,{className:"base",children:[(0,a.jsx)(i.span,{className:"strut",style:{height:"0.6444em"}}),(0,a.jsx)(i.span,{className:"mord",children:"1"})]})]})]}),", e cos\xec via fino al pi\xf9 significativo in ",(0,a.jsxs)(i.span,{className:"katex",children:[(0,a.jsx)(i.span,{className:"katex-mathml",children:(0,a.jsx)(i.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,a.jsxs)(i.semantics,{children:[(0,a.jsxs)(i.mrow,{children:[(0,a.jsx)(i.mi,{children:"a"}),(0,a.jsx)(i.mo,{children:"+"}),(0,a.jsx)(i.mo,{stretchy:"false",children:"("}),(0,a.jsx)(i.mi,{children:"n"}),(0,a.jsx)(i.mo,{children:"\u2212"}),(0,a.jsx)(i.mn,{children:"1"}),(0,a.jsx)(i.mo,{stretchy:"false",children:")"})]}),(0,a.jsx)(i.annotation,{encoding:"application/x-tex",children:"a+(n-1)"})]})})}),(0,a.jsxs)(i.span,{className:"katex-html","aria-hidden":"true",children:[(0,a.jsxs)(i.span,{className:"base",children:[(0,a.jsx)(i.span,{className:"strut",style:{height:"0.6667em",verticalAlign:"-0.0833em"}}),(0,a.jsx)(i.span,{className:"mord mathnormal",children:"a"}),(0,a.jsx)(i.span,{className:"mspace",style:{marginRight:"0.2222em"}}),(0,a.jsx)(i.span,{className:"mbin",children:"+"}),(0,a.jsx)(i.span,{className:"mspace",style:{marginRight:"0.2222em"}})]}),(0,a.jsxs)(i.span,{className:"base",children:[(0,a.jsx)(i.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,a.jsx)(i.span,{className:"mopen",children:"("}),(0,a.jsx)(i.span,{className:"mord mathnormal",children:"n"}),(0,a.jsx)(i.span,{className:"mspace",style:{marginRight:"0.2222em"}}),(0,a.jsx)(i.span,{className:"mbin",children:"\u2212"}),(0,a.jsx)(i.span,{className:"mspace",style:{marginRight:"0.2222em"}})]}),(0,a.jsxs)(i.span,{className:"base",children:[(0,a.jsx)(i.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,a.jsx)(i.span,{className:"mord",children:"1"}),(0,a.jsx)(i.span,{className:"mclose",children:")"})]})]})]}),"."]}),"\n",(0,a.jsxs)(i.p,{children:["Questo ordinamento dei byte in memoria non inficia sulla coerenza dei dati nei registri: eseguendo ",(0,a.jsx)(i.code,{children:"movl %eax, a"})," e ",(0,a.jsx)(i.code,{children:"movl a, %eax"})," il contenuto di ",(0,a.jsx)(i.code,{children:"eax"})," non cambia, e l'ordinamento dei bit rimane coerente."]}),"\n",(0,a.jsxs)(i.p,{children:["I ",(0,a.jsx)(i.em,{children:"meccanismi di protezione"})," ci precludono l'accesso alla maggior parte dello spazio di memoria.\r\nPotremmo accedere senza incorrere in errori solo"]}),"\n",(0,a.jsxs)(i.ol,{children:["\n",(0,a.jsx)(i.li,{children:"allo stack"}),"\n",(0,a.jsxs)(i.li,{children:["allo spazio allocato nella sezione ",(0,a.jsx)(i.code,{children:".data"})]}),"\n",(0,a.jsxs)(i.li,{children:["alle istruzioni nella sezione ",(0,a.jsx)(i.code,{children:".text"})]}),"\n"]}),"\n",(0,a.jsxs)(i.p,{children:["Queste sezioni tipicamente ",(0,a.jsx)("u",{children:"non"}),' gli indirizzi "bassi", cio\xe8 a partire da ',(0,a.jsx)(i.code,{children:"0x0"}),"."]}),"\n",(0,a.jsx)(i.p,{children:"\xc8 importante anche tenere presente che"}),"\n",(0,a.jsxs)(i.ol,{children:["\n",(0,a.jsxs)(i.li,{children:["non \xe8 possibile ",(0,a.jsx)(i.em,{children:"eseguire"})," istruzioni dallo stack e da ",(0,a.jsx)(i.code,{children:".data"})]}),"\n",(0,a.jsxs)(i.li,{children:["non \xe8 possibile ",(0,a.jsx)(i.em,{children:"scrivere"})," nella sezione ",(0,a.jsx)(i.code,{children:".text"})]}),"\n"]}),"\n",(0,a.jsxs)(i.p,{children:["Vanno quindi opportunamente dichiarate le sezioni, e vanno evitate operazioni di ",(0,a.jsx)(i.code,{children:"jmp"}),", ",(0,a.jsx)(i.code,{children:"call"})," etc. verso locazioni di ",(0,a.jsx)(i.code,{children:".data"})," cos\xec come le ",(0,a.jsx)(i.code,{children:"mov"})," verso locazioni di ",(0,a.jsx)(i.code,{children:".text"}),"."]}),"\n",(0,a.jsxs)(i.p,{children:["In caso di violazione di questi meccanismi, l'errore pi\xf9 tipico \xe8 ",(0,a.jsx)(i.code,{children:"SEGMENTATION FAULT"}),"."]}),"\n",(0,a.jsx)(i.h2,{id:"spazio-di-io",children:"Spazio di I/O"}),"\n",(0,a.jsxs)(i.p,{children:["Lo spazio di I/O, sia quello fisico (monitor, speaker, tastiera, etc.) sia quello virtuale (terminale, files su disco, etc.) ci \xe8 in realt\xe0 precluso tramite ",(0,a.jsx)(i.em,{children:"meccanismi di protezione"}),".\r\nTentare di eseguire istruzioni ",(0,a.jsx)(i.code,{children:"in"})," o ",(0,a.jsx)(i.code,{children:"out"})," porter\xe0 infatti al brusco arresto del programma.\r\nIl nostro programma pu\xf2 interagire con lo spazio di I/O solo tramite il ",(0,a.jsx)(i.em,{children:"kernel"})," del ",(0,a.jsx)(i.em,{children:"sistema operativo"}),"."]}),"\n",(0,a.jsxs)(i.p,{children:["Tutta questa complessit\xe0 \xe8 astratta tramite i ",(0,a.jsx)(i.em,{children:"sottoprogrammi di input/output"})," dell'ambiente, documentati ",(0,a.jsx)(i.a,{href:"/esercitazioni/Assembler/Documentazione/Sottoprogrammi%20utility",children:"qui"}),"."]}),"\n",(0,a.jsx)(i.h2,{id:"condizioni-al-reset",children:"Condizioni al reset"}),"\n",(0,a.jsxs)(i.p,{children:["Il reset iniziale e l'avvio del nostro programma sono ",(0,a.jsx)("u",{children:"concetti completamente diversi e scollegati"}),".\r\nNon possiamo sfruttare nessuna ipotesi sullo stato dei registri al momento dell'avvio del nostro programma, se non che il registro ",(0,a.jsx)(i.code,{children:"eip"})," punter\xe0 ad un certo punto alla prima istruzione di ",(0,a.jsx)(i.code,{children:"_main"}),"."]}),"\n",(0,a.jsx)(i.admonition,{type:"note",children:(0,a.jsxs)(i.p,{children:["Il fatto che ",(0,a.jsx)(i.code,{children:"_main"})," sia l'entrypoint del nostro programma, cos\xec come l'uso di ",(0,a.jsx)(i.code,{children:"ret"})," senza alcun valore di ritorno, \xe8 una caratteristica di ",(0,a.jsx)(i.em,{children:"questo"})," ambiente."]})})]})}function h(e={}){const{wrapper:i}={...(0,r.R)(),...e.components};return i?(0,a.jsx)(i,{...e,children:(0,a.jsx)(m,{...e})}):m(e)}},8453:(e,i,s)=>{s.d(i,{R:()=>t,x:()=>o});var n=s(6540);const a={},r=n.createContext(a);function t(e){const i=n.useContext(r);return n.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function o(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:t(e.components),n.createElement(r.Provider,{value:i},e.children)}}}]);